"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4504],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(n),h=a,m=c["".concat(s,".").concat(h)]||c[h]||u[h]||r;return n?i.createElement(m,o(o({ref:t},d),{},{components:n})):i.createElement(m,o({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},71554:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var i=n(87462),a=(n(67294),n(3905));const r={"sidebar-position":3},o="Redis - Bloom filter",l={unversionedId:"Database/BloomFilter",id:"Database/BloomFilter",title:"Redis - Bloom filter",description:"A brief introduction",source:"@site/docs/02-Database/BloomFilter.md",sourceDirName:"02-Database",slug:"/Database/BloomFilter",permalink:"/OpenLeakedDocs/docs/Database/BloomFilter",draft:!1,tags:[],version:"current",frontMatter:{"sidebar-position":3},sidebar:"tutorialSidebar",previous:{title:"Redis - Cache",permalink:"/OpenLeakedDocs/docs/Database/Cache"},next:{title:"Backend",permalink:"/OpenLeakedDocs/docs/Backend"}},s={},p=[{value:"A brief introduction",id:"a-brief-introduction",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Creating the Filter",id:"creating-the-filter",level:2},{value:"Transfering / loading a previously created filter",id:"transfering--loading-a-previously-created-filter",level:3},{value:"Launching the scripts",id:"launching-the-scripts",level:2},{value:"Requirements",id:"requirements",level:3},{value:"Building the filder",id:"building-the-filder",level:4}],d={toc:p};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"redis---bloom-filter"},"Redis - Bloom filter"),(0,a.kt)("h2",{id:"a-brief-introduction"},"A brief introduction"),(0,a.kt)("p",null,"Not everybody is familar with Bloom filters of which we give a short introduction in the following section. "),(0,a.kt)("p",null,"In addition to the cache, we make use of a Bloom filter data structure to further improve the responsiveness of our application.\nA Bloom filter is a well known solution providing probabilistic responses to queries regarding values in a set. "),(0,a.kt)("p",null,"A Bloom filter can answer a simple query of whether a given value is part of a specific set.\nBy using byte arrays, the Bloom Filter can provide an accurate response that an element is ",(0,a.kt)("strong",{parentName:"p"},"not")," part of the set. Additionally, within a certain probabilistic range,\nthe Bloom filter can provide a response that the element might be in the set. In the latter case, a lookup in the persistent storage layer is performed to determine whether the element is indeed part of the set. "),(0,a.kt)("p",null,"By utilises Bloom Filters, we can significantly improve the speed and effeciency of our systems operations, particularly given the size of our dataset. "),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The current data set is estimated to consume 1.5 TB of space. Yet much more data is easily available. Allowing the Bloom Filter to be apart of future proving for additional work.")),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"Redis to the rescue - Redis, specifically the Redis Stack contains probabilistic data structures. This includes the\nBloom Filter and Cuckoo Filter.\nMaking use of the data strucutre is easily handled by the use of Docker containerization. "),(0,a.kt)("p",null,"Connecting the Bloom Filter is handled by ",(0,a.kt)("inlineCode",{parentName:"p"},"JedisPool")," which is specified in the associted service class in the ",(0,a.kt)("inlineCode",{parentName:"p"},"backend"),".\nHere we define the methods that we will utilize. "),(0,a.kt)("blockquote",null,(0,a.kt)("ul",{parentName:"blockquote"},(0,a.kt)("li",{parentName:"ul"},"BFExists"),(0,a.kt)("li",{parentName:"ul"},"Checks if an element is part of a set."))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"    public long BFFExists(String key, String value) {\n        try (Jedis jedis = jedisPool.getResource()) {\n            return (long) jedis.sendCommand(RedisBloomProtocol.BloomFilterCommand.EXISTS, key, value);\n        } catch (Exception ignored) {\n            return -1;\n        }\n    }\n")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"An entire overview of commands possible to implement is listed on the Bloom Filter ",(0,a.kt)("a",{parentName:"p",href:"https://redis.io/commands/?name=bf"},"documentation site"))),(0,a.kt)("h2",{id:"creating-the-filter"},"Creating the Filter"),(0,a.kt)("p",null,"Spring Boot does not build the filter. Instead this is done by a Python script.\nThe reason for this design is to allow users to reuse filters and allow server maintaince (the filter are lost upon server shutdown).\n",(0,a.kt)("inlineCode",{parentName:"p"},"RedisBloom"),"the module in Redis Stack contianing the Filter has methods available for dumping filters using Python and Loading them back in.\nBy the use of their documentation we have created a simple application using two python scripts; ",(0,a.kt)("inlineCode",{parentName:"p"},"Mover.py")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Builder.py")),(0,a.kt)("p",null,"Using ",(0,a.kt)("inlineCode",{parentName:"p"},"Mover.py")," to construct the filter. We load in TSV files. Essentially creating a filter for each searchable type.\nThe capacity of the filter is set with the variable; ",(0,a.kt)("inlineCode",{parentName:"p"},"BF_CAPACITY = 405635679")," - allowing plenty of capacity.\nOnce the filter(s) are build they can be utilized through the backend if build on the server or transfered to the server. "),(0,a.kt)("h3",{id:"transfering--loading-a-previously-created-filter"},"Transfering / loading a previously created filter"),(0,a.kt)("p",null,"The script ",(0,a.kt)("inlineCode",{parentName:"p"},"Builder.py")," is a small terminal applciation that allows dumping and loading the filters to persistent storage.\nThe script makes use of Pandas dataframes to create python objects containing iterative dump strings. These are then deserialized to a Pickle file allowing for consize saving of the python object.\nWith the Pickle file you can transfer it to any server available. "),(0,a.kt)("p",null,"Using the same script you are able to reconstruct the filter. "),(0,a.kt)("p",null,"As a small terminal application the task of loading and dumping filters are made alot easier as it takes you through all steps required."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"It is difficult to make the dumping process to be handled by other languages than python - the dumps are byte safe arrays which many compresses / alters when deserialized or saved to disk. ")),(0,a.kt)("h2",{id:"launching-the-scripts"},"Launching the scripts"),(0,a.kt)("p",null,"A brief guide to running the scripts are provided here"),(0,a.kt)("h3",{id:"requirements"},"Requirements"),(0,a.kt)("p",null,"A compination of python packages are required. "),(0,a.kt)("blockquote",null,(0,a.kt)("ul",{parentName:"blockquote"},(0,a.kt)("li",{parentName:"ul"},"Dask"),(0,a.kt)("li",{parentName:"ul"},"Redis"),(0,a.kt)("li",{parentName:"ul"},"TQDM"),(0,a.kt)("li",{parentName:"ul"},"Pandas"))),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"We commend setting up a virtual enviroment instead of a global install."),(0,a.kt)("p",{parentName:"admonition"},"You can read more ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/venv.html"},"here"),".")),(0,a.kt)("p",null,"To install all required packages run the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-zsh"},'python -m pip install "dask[complete]" "pandas" "tqdm"  "redis"\n')),(0,a.kt)("p",null,"Now simply run either python file by:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-zsh"},"python <python-file.py>\n")),(0,a.kt)("h4",{id:"building-the-filder"},"Building the filder"),(0,a.kt)("p",null,"Buildng the filter is based on the ",(0,a.kt)("inlineCode",{parentName:"p"},"Builder.py"),".\nWhen you run the file you will be prompted to enter an absolute path for a TSV file.\nThe TSV file must be the files coming from the ",(0,a.kt)("a",{parentName:"p",href:"../Loading"},"data parsing"),".\nIt only uses one TSV file per run. Therefore you chose which filters you want to build. If ",(0,a.kt)("em",{parentName:"p"},"all")," you have to run the script for each type of data you want in the Bloom filter."),(0,a.kt)("p",null,"Remember that the Redis Docker container must be running - before you can fill the Bloom Filter\nTo read more about starting individual docker containers ",(0,a.kt)("a",{parentName:"p",href:"../Docker#deploying-all-or-one-image"},"click here")),(0,a.kt)("p",null,"We have also provided the code right here:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker compose up --build redis\n")),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"It may take several hours to build the Bloom Filter depending on size.\nWhilst loading an existing filter should be done in a couple of seconds.")))}c.isMDXComponent=!0}}]);