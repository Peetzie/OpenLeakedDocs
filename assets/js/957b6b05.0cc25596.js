"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[546],{38019:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(87462),i=(n(67294),n(3905));const o={sidebar_position:2},r="Docker containers",l={unversionedId:"Docker",id:"Docker",title:"Docker containers",description:"<img",source:"@site/docs/01-Docker.mdx",sourceDirName:".",slug:"/Docker",permalink:"/OpenLeakedDocs/docs/Docker",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Getting started in 5 minutes \u23f1\ufe0f",permalink:"/OpenLeakedDocs/docs/intro"},next:{title:"Introduction",permalink:"/OpenLeakedDocs/docs/Database/Introduction"}},s={},p=[{value:"Versioning",id:"versioning",level:2},{value:"Why containerized architecture?",id:"why-containerized-architecture",level:2},{value:"Deploying all or one image",id:"deploying-all-or-one-image",level:2}],d={toc:p};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"docker-containers"},"Docker containers"),(0,i.kt)("p",{align:"center"},(0,i.kt)("img",{src:"https://www.docker.com/wp-content/uploads/2022/03/vertical-logo-monochromatic.png",alt:"drawing",width:"40%",height:"200"})),(0,i.kt)("p",null,"Our application design incorporates the use of ",(0,i.kt)("a",{parentName:"p",href:"https://www.docker.com/"},"Docker")," containers to manage it.\nIn the subsequent section, we will provide a brief overview of how containerization is implemented in our application."),(0,i.kt)("p",null,"Our application makes use of three different types of ",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose"),"files:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"docker-compose-production"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"This file manages the production-level containers, some of which are simplified through the use of server packages.\nThis approach reduces both the space requirements and complexity of the containers."))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"docker-compose"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"This file is used throughout the development process. It uilizes Docker images that are not all server-based, which allows the images to contain tools that could be used for development purposes."))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"docker-compose-import-database"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"This container contains the images required to import data into the database.")))),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"The Redis Image is a great example of how we use different images in our application. The development image contains RedisStack, which is a usefull tool to manage the Redis Cache database.")),(0,i.kt)("h2",{id:"versioning"},"Versioning"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Container"),(0,i.kt)("th",{parentName:"tr",align:null},"Images"),(0,i.kt)("th",{parentName:"tr",align:null},"default ports"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Nginx"),(0,i.kt)("td",{parentName:"tr",align:null},"nginx:latest"),(0,i.kt)("td",{parentName:"tr",align:null},"80")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Backend"),(0,i.kt)("td",{parentName:"tr",align:null},"maven:3.8.7-amazoncorretto-17"),(0,i.kt)("td",{parentName:"tr",align:null},"8080")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"MariaDB"),(0,i.kt)("td",{parentName:"tr",align:null},"mariadb:latest"),(0,i.kt)("td",{parentName:"tr",align:null},"3306")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Redis"),(0,i.kt)("td",{parentName:"tr",align:null},"redis-stack:latest"),(0,i.kt)("td",{parentName:"tr",align:null},"6379")))),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"In production, the frontend of our application is not containerized. Instead, it is rendered client-side via HTML, which is provided by the reverse proxy, Nginx.\nTo support this approach, Nginx is configured to listen for HTTP traffic on port 5173 from the frontend.")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"You can modify the used ports by editing the ",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose")," files.")),(0,i.kt)("h2",{id:"why-containerized-architecture"},"Why containerized architecture?"),(0,i.kt)("p",null,"Our choise of a containerized architecture is motivated by several reasons.\nFirstly, it enables us to accomodate different development enviroments and ensure compatibility with the server.\nWhile the same goal can be achieved using Virtual Machines, it comes at cost - using more resources.\nIn contrast, containers allow us to use the same Host-OS, avoiding duplication of the OS by packaging the required binaries and libraries into each container. Communication between containers are facilitated through the use of a reverse proxy and network bridges in the docker file."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"By default, the containers do not inherit any system files from the Host-OS, including timezone files. If the server(s) are deployed in regions outside of the ",(0,i.kt)("inlineCode",{parentName:"p"},"TZ=Europe/Copenhagen")," timezone, it is important to modify this setting in the relevant compose file to ensure proper functionality of the application.")),(0,i.kt)("h2",{id:"deploying-all-or-one-image"},"Deploying all or one image"),(0,i.kt)("p",null,"For first time installing please follow this ",(0,i.kt)("a",{parentName:"p",href:"intro#-installation"},"installation guide"),"."),(0,i.kt)("p",null,"After setting up the installation for the first time you can restart the applcation by running the follwing commands:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"To restart all containers",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"docker compose up --build all\n"))),(0,i.kt)("li",{parentName:"ol"},"To restart an individual container",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"docker compose up --build <container-name>\n")))))}c.isMDXComponent=!0}}]);