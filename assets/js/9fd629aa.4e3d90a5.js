"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6023],{22393:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>u,default:()=>b,frontMatter:()=>c,metadata:()=>p,toc:()=>m});var s=t(87462),n=(t(67294),t(3905)),i=t(26389),r=t(94891),o=(t(75190),t(47507),t(98685)),d=(t(63303),t(75035),t(85162));const c={id:"finds-associated-breaches-by-username",title:"Finds associated breaches by username",description:"Takes a UsernameReqeustBody, and returns breaches associated with a username. Might return an empty set",sidebar_label:"Finds associated breaches by username",hide_title:!0,hide_table_of_contents:!0,api:{tags:["username"],description:"Takes a UsernameReqeustBody, and returns breaches associated with a username. Might return an empty set",requestBody:{content:{"application/json":{schema:{allOf:[{title:"UsernameRequestBody"},{type:"object",properties:{value:{type:"string",example:"username"}},example:{value:"username"},title:"Username"}]}}},required:!0},responses:{200:{description:"Retrieved all associated breaches"},404:{description:"Domain was not found in any breaches"}},security:[{basicAuth:[]}],method:"post",path:"/api/username/breaches",servers:[{url:"https://virtserver.swaggerhub.com/Peetzie/OpenLeaked/1.7.1",description:"SwaggerHub API Auto Mocking"},{url:"https://localhost",description:"Local running server"},{url:"https://open-leaked.compute.dtu.dk",description:"DTU Compute VPN Required"}],securitySchemes:{basicAuth:{type:"http",scheme:"basic"}},jsonRequestBodyExample:{value:"username"},info:{title:"Open Leaked YAML",description:"## Introduction\nThis API is documented in **OpenAPI** format. \n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\n\n## Authentication\nThe application makes uses of build in authentication. Some of the client calls will be restricted. Use the HTTP basic form to authorize. ",contact:{name:"Open Leaked",url:"https://github.com/Open-Leaked/Monorepo",email:"openleaked@gmail.com"},license:{name:"Apache 2.0",url:"http://www.apache.org/licenses/LICENSE-2.0.html"},version:"3.0.0","x-logo":{url:"https://raw.githubusercontent.com/Open-Leaked/Monorepo/main/Assets/logo/png/logo-white.png?token=GHSAT0AAAAAACB2FNOUZBLHC6LN6IMED47EZC3SB3Q",altText:"Open-Leaked Logo"}},postman:{name:"Finds associated breaches by username",description:{content:"Takes a UsernameReqeustBody, and returns breaches associated with a username. Might return an empty set",type:"text/plain"},url:{path:["api","username","breaches"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}},auth:{type:"basic",basic:[{type:"any",value:"<Basic Auth Username>",key:"username"},{type:"any",value:"<Basic Auth Password>",key:"password"}]}}},sidebar_class_name:"post api-method",info_path:"docs/API/open-leaked-yaml",custom_edit_url:null},u=void 0,p={unversionedId:"API/finds-associated-breaches-by-username",id:"API/finds-associated-breaches-by-username",title:"Finds associated breaches by username",description:"Takes a UsernameReqeustBody, and returns breaches associated with a username. Might return an empty set",source:"@site/docs/API/finds-associated-breaches-by-username.api.mdx",sourceDirName:"API",slug:"/API/finds-associated-breaches-by-username",permalink:"/OpenLeakedDocs/docs/API/finds-associated-breaches-by-username",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"finds-associated-breaches-by-username",title:"Finds associated breaches by username",description:"Takes a UsernameReqeustBody, and returns breaches associated with a username. Might return an empty set",sidebar_label:"Finds associated breaches by username",hide_title:!0,hide_table_of_contents:!0,api:{tags:["username"],description:"Takes a UsernameReqeustBody, and returns breaches associated with a username. Might return an empty set",requestBody:{content:{"application/json":{schema:{allOf:[{title:"UsernameRequestBody"},{type:"object",properties:{value:{type:"string",example:"username"}},example:{value:"username"},title:"Username"}]}}},required:!0},responses:{200:{description:"Retrieved all associated breaches"},404:{description:"Domain was not found in any breaches"}},security:[{basicAuth:[]}],method:"post",path:"/api/username/breaches",servers:[{url:"https://virtserver.swaggerhub.com/Peetzie/OpenLeaked/1.7.1",description:"SwaggerHub API Auto Mocking"},{url:"https://localhost",description:"Local running server"},{url:"https://open-leaked.compute.dtu.dk",description:"DTU Compute VPN Required"}],securitySchemes:{basicAuth:{type:"http",scheme:"basic"}},jsonRequestBodyExample:{value:"username"},info:{title:"Open Leaked YAML",description:"## Introduction\nThis API is documented in **OpenAPI** format. \n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\n\n## Authentication\nThe application makes uses of build in authentication. Some of the client calls will be restricted. Use the HTTP basic form to authorize. ",contact:{name:"Open Leaked",url:"https://github.com/Open-Leaked/Monorepo",email:"openleaked@gmail.com"},license:{name:"Apache 2.0",url:"http://www.apache.org/licenses/LICENSE-2.0.html"},version:"3.0.0","x-logo":{url:"https://raw.githubusercontent.com/Open-Leaked/Monorepo/main/Assets/logo/png/logo-white.png?token=GHSAT0AAAAAACB2FNOUZBLHC6LN6IMED47EZC3SB3Q",altText:"Open-Leaked Logo"}},postman:{name:"Finds associated breaches by username",description:{content:"Takes a UsernameReqeustBody, and returns breaches associated with a username. Might return an empty set",type:"text/plain"},url:{path:["api","username","breaches"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}},auth:{type:"basic",basic:[{type:"any",value:"<Basic Auth Username>",key:"username"},{type:"any",value:"<Basic Auth Password>",key:"password"}]}}},sidebar_class_name:"post api-method",info_path:"docs/API/open-leaked-yaml",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"Checks whether or not the username is existing in a breach",permalink:"/OpenLeakedDocs/docs/API/checks-whether-or-not-the-username-is-existing-in-a-breach"},next:{title:"domain",permalink:"/OpenLeakedDocs/docs/API/domain"}},l={},m=[{value:"Finds associated breaches by username",id:"finds-associated-breaches-by-username",level:2}],h={toc:m};function b(e){let{components:a,...t}=e;return(0,n.kt)("wrapper",(0,s.Z)({},h,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"finds-associated-breaches-by-username"},"Finds associated breaches by username"),(0,n.kt)("p",null,"Takes a UsernameReqeustBody, and returns breaches associated with a username. Might return an empty set"),(0,n.kt)(r.Z,{mdxType:"MimeTabs"},(0,n.kt)(d.Z,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,n.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,n.kt)("summary",{style:{textAlign:"left"}},(0,n.kt)("strong",null,"Request Body"),(0,n.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,n.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,n.kt)("ul",{style:{marginLeft:"1rem"}},(0,n.kt)(o.Z,{collapsible:!1,name:"value",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",example:"username"},mdxType:"SchemaItem"}))))),(0,n.kt)("div",null,(0,n.kt)(i.Z,{mdxType:"ApiTabs"},(0,n.kt)(d.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"Retrieved all associated breaches")),(0,n.kt)("div",null)),(0,n.kt)(d.Z,{label:"404",value:"404",mdxType:"TabItem"},(0,n.kt)("div",null,(0,n.kt)("p",null,"Domain was not found in any breaches")),(0,n.kt)("div",null)))))}b.isMDXComponent=!0}}]);