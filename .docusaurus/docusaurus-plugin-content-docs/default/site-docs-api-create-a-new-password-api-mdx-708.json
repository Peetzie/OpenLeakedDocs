{
  "unversionedId": "API/create-a-new-password",
  "id": "API/create-a-new-password",
  "title": "Create a new password",
  "description": "Allows the user to create a new password after verification if previous was forgotton. Is a part of the recovery process",
  "source": "@site/docs/API/create-a-new-password.api.mdx",
  "sourceDirName": "API",
  "slug": "/API/create-a-new-password",
  "permalink": "/OpenLeakedDocs/docs/API/create-a-new-password",
  "draft": false,
  "editUrl": null,
  "tags": [],
  "version": "current",
  "frontMatter": {
    "id": "create-a-new-password",
    "title": "Create a new password",
    "description": "Allows the user to create a new password after verification if previous was forgotton. Is a part of the recovery process",
    "sidebar_label": "Create a new password",
    "hide_title": true,
    "hide_table_of_contents": true,
    "api": {
      "tags": [
        "authorisations"
      ],
      "description": "Allows the user to create a new password after verification if previous was forgotton. Is a part of the recovery process",
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email in string format",
                  "example": "example@example.com"
                },
                "password": {
                  "minLength": 8,
                  "pattern": "/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/",
                  "type": "string",
                  "description": "User password, MUST contain a mix of upper and lower case letters, as well as digits and special characters",
                  "example": "drowssaP123#"
                },
                "cPassword": {
                  "minLength": 8,
                  "pattern": "/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/",
                  "type": "string",
                  "description": "User password, MUST contain a mix of upper and lower case letters, as well as digits and special characters",
                  "example": "drowssaP123#"
                }
              },
              "example": {
                "email": "johndoe@example.com",
                "password": "!password123!",
                "cPassword": "!password123!"
              },
              "title": "userNewPassword"
            }
          }
        },
        "required": true
      },
      "responses": {
        "200": {
          "description": "Sucessfully updated the password"
        },
        "400": {
          "description": "Could not update password"
        }
      },
      "method": "post",
      "path": "/api/auth/newPassword",
      "servers": [
        {
          "url": "https://virtserver.swaggerhub.com/Peetzie/OpenLeaked/1.7.1",
          "description": "SwaggerHub API Auto Mocking"
        },
        {
          "url": "localhost",
          "description": "Local running server"
        },
        {
          "url": "open-leaked.compute.dtu.dk",
          "description": "DTU Compute VPN Required"
        }
      ],
      "securitySchemes": {
        "basicAuth": {
          "type": "http",
          "scheme": "basic"
        }
      },
      "jsonRequestBodyExample": {
        "email": "johndoe@example.com",
        "password": "!password123!",
        "cPassword": "!password123!"
      },
      "info": {
        "title": "Open Leaked YAML",
        "description": "## Introduction\nThis API is documented in **OpenAPI** format. \n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\n\n## Authentication\nThe application makes uses of build in authentication. Some of the client calls will be restricted. Use the HTTP basic form to authorize. ",
        "contact": {
          "name": "Open Leaked",
          "url": "https://github.com/Open-Leaked/Monorepo",
          "email": "openleaked@gmail.com"
        },
        "license": {
          "name": "Apache 2.0",
          "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "2.0.1",
        "x-logo": {
          "url": "https://raw.githubusercontent.com/Open-Leaked/Monorepo/main/Assets/logo/png/logo-white.png?token=GHSAT0AAAAAACB2FNOUZBLHC6LN6IMED47EZC3SB3Q",
          "altText": "Open-Leaked Logo"
        }
      },
      "postman": {
        "name": "Create a new password",
        "description": {
          "content": "Allows the user to create a new password after verification if previous was forgotton. Is a part of the recovery process",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "api",
            "auth",
            "newPassword"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "\"\"",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      }
    },
    "sidebar_class_name": "post api-method",
    "info_path": "docs/API/open-leaked-yaml",
    "custom_edit_url": null
  },
  "sidebar": "openApiSidebar",
  "previous": {
    "title": "Initiate recovery process",
    "permalink": "/OpenLeakedDocs/docs/API/initiate-recovery-process"
  },
  "next": {
    "title": "Creates a new user in the users database",
    "permalink": "/OpenLeakedDocs/docs/API/creates-a-new-user-in-the-users-database"
  }
}