{
  "docusaurus-plugin-content-docs": {
    "default": {
      "loadedVersions": [
        {
          "versionName": "current",
          "label": "Next",
          "banner": null,
          "badge": false,
          "noIndex": false,
          "className": "docs-version-current",
          "path": "/OpenLeakedDocs/docs",
          "tagsPath": "/OpenLeakedDocs/docs/tags",
          "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs",
          "editUrlLocalized": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/i18n/en/docusaurus-plugin-content-docs/current",
          "isLast": true,
          "routePriority": -1,
          "sidebarFilePath": "/home/frederik/Desktop/OpenLeakedDocs/sidebars.js",
          "contentPath": "/home/frederik/Desktop/OpenLeakedDocs/docs",
          "contentPathLocalized": "/home/frederik/Desktop/OpenLeakedDocs/i18n/en/docusaurus-plugin-content-docs/current",
          "docs": [
            {
              "unversionedId": "API/allows-a-user-to-tip-the-maintainers-with-additional-breaches",
              "id": "API/allows-a-user-to-tip-the-maintainers-with-additional-breaches",
              "title": "Allows a user to tip the maintainers with additional breaches",
              "description": "Allows a user to tip the maintainers with additional breaches",
              "source": "@site/docs/API/allows-a-user-to-tip-the-maintainers-with-additional-breaches.api.mdx",
              "sourceDirName": "API",
              "slug": "/API/allows-a-user-to-tip-the-maintainers-with-additional-breaches",
              "permalink": "/OpenLeakedDocs/docs/API/allows-a-user-to-tip-the-maintainers-with-additional-breaches",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "allows-a-user-to-tip-the-maintainers-with-additional-breaches",
                "title": "Allows a user to tip the maintainers with additional breaches",
                "description": "Allows a user to tip the maintainers with additional breaches",
                "sidebar_label": "Allows a user to tip the maintainers with additional breaches",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "tip"
                  ],
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "allOf": [
                            {
                              "title": "Tip rqeust Body"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "desc": {
                                  "type": "string"
                                },
                                "size": {
                                  "type": "integer"
                                },
                                "unit": {
                                  "type": "string"
                                },
                                "date": {
                                  "type": "number"
                                },
                                "magnetLink": {
                                  "type": "string"
                                }
                              },
                              "example": {
                                "desc": "description",
                                "size": 114,
                                "unit": "GB",
                                "date": 1683577685,
                                "magnetLink": "magnet:?xt=urn:btih:d136b1adde531f38311fbf43fb96fc26df1a34cd&dn=Collection+%232-%235+%26+Antipublic"
                              },
                              "title": "Tip"
                            }
                          ]
                        }
                      }
                    },
                    "required": true
                  },
                  "responses": {
                    "200": {
                      "description": "Successfully tipped us"
                    },
                    "401": {
                      "description": "Request did not go through"
                    }
                  },
                  "description": "Allows a user to tip the maintainers with additional breaches",
                  "method": "post",
                  "path": "/api/tip/send",
                  "servers": [
                    {
                      "url": "https://virtserver.swaggerhub.com/Peetzie/OpenLeaked/1.0.0",
                      "description": "SwaggerHub API Auto Mocking"
                    },
                    {
                      "url": "openleaked.compute.dtu.dk",
                      "description": "Default server"
                    },
                    {
                      "url": "localhost",
                      "description": "Local running server"
                    }
                  ],
                  "jsonRequestBodyExample": {
                    "desc": "description",
                    "size": 114,
                    "unit": "GB",
                    "date": 1683577685,
                    "magnetLink": "magnet:?xt=urn:btih:d136b1adde531f38311fbf43fb96fc26df1a34cd&dn=Collection+%232-%235+%26+Antipublic"
                  },
                  "info": {
                    "title": "Open Leaked YAML",
                    "description": "## Introduction\nThis API is documented in **OpenAPI** format. \n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\nThe application makes uses of build in authentication. Some of the client calls will be restricted. A local API key may be optained from the vendor\n",
                    "contact": {
                      "name": "Open Leaked",
                      "url": "https://github.com/Open-Leaked/Monorepo",
                      "email": "openleaked@gmail.com"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    },
                    "version": "1.0.0",
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    }
                  },
                  "postman": {
                    "name": "Allows a user to tip the maintainers with additional breaches",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "api",
                        "tip",
                        "send"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "\"\"",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  }
                },
                "sidebar_class_name": "post api-method",
                "info_path": "docs/API/open-leaked-yaml",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Tip",
                "permalink": "/OpenLeakedDocs/docs/API/tip"
              },
              "next": {
                "title": "email",
                "permalink": "/OpenLeakedDocs/docs/API/email"
              }
            },
            {
              "unversionedId": "API/authorisations",
              "id": "API/authorisations",
              "title": "Authorisations",
              "description": "Authorisations",
              "source": "@site/docs/API/authorisations.tag.mdx",
              "sourceDirName": "API",
              "slug": "/API/authorisations",
              "permalink": "/OpenLeakedDocs/docs/API/authorisations",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "authorisations",
                "title": "Authorisations",
                "description": "Authorisations",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Checks that the service is currently running",
                "permalink": "/OpenLeakedDocs/docs/API/checks-that-the-service-is-currently-running"
              },
              "next": {
                "title": "Authorise an existing user",
                "permalink": "/OpenLeakedDocs/docs/API/authorise-an-existing-user"
              }
            },
            {
              "unversionedId": "API/authorise-an-existing-user",
              "id": "API/authorise-an-existing-user",
              "title": "Authorise an existing user",
              "description": "This action can be performed by anyone. If the user is currently already in an active session the session is extended.",
              "source": "@site/docs/API/authorise-an-existing-user.api.mdx",
              "sourceDirName": "API",
              "slug": "/API/authorise-an-existing-user",
              "permalink": "/OpenLeakedDocs/docs/API/authorise-an-existing-user",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "authorise-an-existing-user",
                "title": "Authorise an existing user",
                "description": "This action can be performed by anyone. If the user is currently already in an active session the session is extended.",
                "sidebar_label": "Authorise an existing user",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "authorisations"
                  ],
                  "description": "This action can be performed by anyone. If the user is currently already in an active session the session is extended.",
                  "requestBody": {
                    "description": "HTTP basic user authentication requestbody",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "minLength": 4,
                              "type": "string",
                              "description": "User supplied username",
                              "example": "johndoe@example.com"
                            },
                            "password": {
                              "minLength": 8,
                              "pattern": "/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/",
                              "type": "string",
                              "description": "User password, MUST contain a mix of upper and lower case letters, as well as digits and special characters",
                              "format": "password",
                              "example": "drowssaP123#"
                            }
                          },
                          "xml": {
                            "name": "User"
                          },
                          "title": "User"
                        }
                      }
                    },
                    "required": true
                  },
                  "responses": {
                    "200": {
                      "description": "Sucess",
                      "headers": {
                        "X-Rate-Limit": {
                          "description": "calls per hour allowed by the user",
                          "style": "simple",
                          "explode": false,
                          "schema": {
                            "type": "integer",
                            "format": "int32"
                          }
                        },
                        "X-Expires-After": {
                          "description": "date in UTC when token expires",
                          "style": "simple",
                          "explode": false,
                          "schema": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "401": {
                      "description": "Unauthorised"
                    }
                  },
                  "method": "post",
                  "path": "/api/login/login",
                  "servers": [
                    {
                      "url": "https://virtserver.swaggerhub.com/Peetzie/OpenLeaked/1.0.0",
                      "description": "SwaggerHub API Auto Mocking"
                    },
                    {
                      "url": "openleaked.compute.dtu.dk",
                      "description": "Default server"
                    },
                    {
                      "url": "localhost",
                      "description": "Local running server"
                    }
                  ],
                  "jsonRequestBodyExample": {
                    "email": "johndoe@example.com",
                    "password": "drowssaP123#"
                  },
                  "info": {
                    "title": "Open Leaked YAML",
                    "description": "## Introduction\nThis API is documented in **OpenAPI** format. \n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\nThe application makes uses of build in authentication. Some of the client calls will be restricted. A local API key may be optained from the vendor\n",
                    "contact": {
                      "name": "Open Leaked",
                      "url": "https://github.com/Open-Leaked/Monorepo",
                      "email": "openleaked@gmail.com"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    },
                    "version": "1.0.0",
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    }
                  },
                  "postman": {
                    "name": "Authorise an existing user",
                    "description": {
                      "content": "This action can be performed by anyone. If the user is currently already in an active session the session is extended.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "api",
                        "login",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "\"\"",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  }
                },
                "sidebar_class_name": "post api-method",
                "info_path": "docs/API/open-leaked-yaml",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Authorisations",
                "permalink": "/OpenLeakedDocs/docs/API/authorisations"
              },
              "next": {
                "title": "Ends current the current",
                "permalink": "/OpenLeakedDocs/docs/API/ends-current-the-current"
              }
            },
            {
              "unversionedId": "API/checks-that-the-service-is-currently-running",
              "id": "API/checks-that-the-service-is-currently-running",
              "title": "Checks that the service is currently running",
              "description": "Simple benefecial healthcheck, no further use.",
              "source": "@site/docs/API/checks-that-the-service-is-currently-running.api.mdx",
              "sourceDirName": "API",
              "slug": "/API/checks-that-the-service-is-currently-running",
              "permalink": "/OpenLeakedDocs/docs/API/checks-that-the-service-is-currently-running",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "checks-that-the-service-is-currently-running",
                "title": "Checks that the service is currently running",
                "description": "Simple benefecial healthcheck, no further use.",
                "sidebar_label": "Checks that the service is currently running",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "healthcheck"
                  ],
                  "description": "Simple benefecial healthcheck, no further use.",
                  "responses": {
                    "200": {
                      "description": "successful operation"
                    },
                    "401": {
                      "description": "Bad request - Server not running"
                    }
                  },
                  "method": "get",
                  "path": "/api/healthcheck",
                  "servers": [
                    {
                      "url": "https://virtserver.swaggerhub.com/Peetzie/OpenLeaked/1.0.0",
                      "description": "SwaggerHub API Auto Mocking"
                    },
                    {
                      "url": "openleaked.compute.dtu.dk",
                      "description": "Default server"
                    },
                    {
                      "url": "localhost",
                      "description": "Local running server"
                    }
                  ],
                  "info": {
                    "title": "Open Leaked YAML",
                    "description": "## Introduction\nThis API is documented in **OpenAPI** format. \n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\nThe application makes uses of build in authentication. Some of the client calls will be restricted. A local API key may be optained from the vendor\n",
                    "contact": {
                      "name": "Open Leaked",
                      "url": "https://github.com/Open-Leaked/Monorepo",
                      "email": "openleaked@gmail.com"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    },
                    "version": "1.0.0",
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    }
                  },
                  "postman": {
                    "name": "Checks that the service is currently running",
                    "description": {
                      "content": "Simple benefecial healthcheck, no further use.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "api",
                        "healthcheck"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/API/open-leaked-yaml",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "HealthCheck",
                "permalink": "/OpenLeakedDocs/docs/API/healthcheck"
              },
              "next": {
                "title": "Authorisations",
                "permalink": "/OpenLeakedDocs/docs/API/authorisations"
              }
            },
            {
              "unversionedId": "API/create-a-new-password",
              "id": "API/create-a-new-password",
              "title": "Create a new password",
              "description": "Allows the user to create a new password after verification if previous was forgotton. Is a part of the recovery process",
              "source": "@site/docs/API/create-a-new-password.api.mdx",
              "sourceDirName": "API",
              "slug": "/API/create-a-new-password",
              "permalink": "/OpenLeakedDocs/docs/API/create-a-new-password",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "create-a-new-password",
                "title": "Create a new password",
                "description": "Allows the user to create a new password after verification if previous was forgotton. Is a part of the recovery process",
                "sidebar_label": "Create a new password",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "authorisations"
                  ],
                  "description": "Allows the user to create a new password after verification if previous was forgotton. Is a part of the recovery process",
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "cPassword": {
                              "type": "string"
                            }
                          },
                          "example": {
                            "email": "johndoe@example.com",
                            "password": "password",
                            "cPassword": "password"
                          },
                          "title": "userNewPassword"
                        }
                      }
                    },
                    "required": true
                  },
                  "responses": {
                    "200": {
                      "description": "OK"
                    },
                    "400": {
                      "description": "Failed"
                    }
                  },
                  "method": "post",
                  "path": "/api/login/newPassword",
                  "servers": [
                    {
                      "url": "https://virtserver.swaggerhub.com/Peetzie/OpenLeaked/1.0.0",
                      "description": "SwaggerHub API Auto Mocking"
                    },
                    {
                      "url": "openleaked.compute.dtu.dk",
                      "description": "Default server"
                    },
                    {
                      "url": "localhost",
                      "description": "Local running server"
                    }
                  ],
                  "jsonRequestBodyExample": {
                    "email": "johndoe@example.com",
                    "password": "password",
                    "cPassword": "password"
                  },
                  "info": {
                    "title": "Open Leaked YAML",
                    "description": "## Introduction\nThis API is documented in **OpenAPI** format. \n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\nThe application makes uses of build in authentication. Some of the client calls will be restricted. A local API key may be optained from the vendor\n",
                    "contact": {
                      "name": "Open Leaked",
                      "url": "https://github.com/Open-Leaked/Monorepo",
                      "email": "openleaked@gmail.com"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    },
                    "version": "1.0.0",
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    }
                  },
                  "postman": {
                    "name": "Create a new password",
                    "description": {
                      "content": "Allows the user to create a new password after verification if previous was forgotton. Is a part of the recovery process",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "api",
                        "login",
                        "newPassword"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "\"\"",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  }
                },
                "sidebar_class_name": "post api-method",
                "info_path": "docs/API/open-leaked-yaml",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Initiate recovery process",
                "permalink": "/OpenLeakedDocs/docs/API/initiate-recovery-process"
              },
              "next": {
                "title": "Authorise an existing user",
                "permalink": "/OpenLeakedDocs/docs/API/authorise-an-existing-user"
              }
            },
            {
              "unversionedId": "API/email",
              "id": "API/email",
              "title": "email",
              "description": "email",
              "source": "@site/docs/API/email.tag.mdx",
              "sourceDirName": "API",
              "slug": "/API/email",
              "permalink": "/OpenLeakedDocs/docs/API/email",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "email",
                "title": "email",
                "description": "email",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Allows a user to tip the maintainers with additional breaches",
                "permalink": "/OpenLeakedDocs/docs/API/allows-a-user-to-tip-the-maintainers-with-additional-breaches"
              },
              "next": {
                "title": "Retrieves the ID of an email",
                "permalink": "/OpenLeakedDocs/docs/API/retrieves-the-id-of-an-email"
              }
            },
            {
              "unversionedId": "API/ends-current-the-current",
              "id": "API/ends-current-the-current",
              "title": "Ends current the current",
              "description": "This action can be performed by any user currently in an active session (authorized). If sucessfull the session token will be revoked",
              "source": "@site/docs/API/ends-current-the-current.api.mdx",
              "sourceDirName": "API",
              "slug": "/API/ends-current-the-current",
              "permalink": "/OpenLeakedDocs/docs/API/ends-current-the-current",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "ends-current-the-current",
                "title": "Ends current the current",
                "description": "This action can be performed by any user currently in an active session (authorized). If sucessfull the session token will be revoked",
                "sidebar_label": "Ends current the current",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "authorisations"
                  ],
                  "description": "This action can be performed by any user currently in an active session (authorized). If sucessfull the session token will be revoked",
                  "requestBody": {
                    "description": "HTTP basic authentication requestbody",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "minLength": 4,
                              "type": "string",
                              "description": "User supplied username",
                              "example": "johndoe@example.com"
                            },
                            "password": {
                              "minLength": 8,
                              "pattern": "/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/",
                              "type": "string",
                              "description": "User password, MUST contain a mix of upper and lower case letters, as well as digits and special characters",
                              "format": "password",
                              "example": "drowssaP123#"
                            }
                          },
                          "xml": {
                            "name": "User"
                          },
                          "title": "User"
                        }
                      }
                    },
                    "required": true
                  },
                  "responses": {
                    "200": {
                      "description": "successful operation"
                    },
                    "400": {
                      "description": "Failed"
                    }
                  },
                  "method": "post",
                  "path": "/api/login/logout",
                  "servers": [
                    {
                      "url": "https://virtserver.swaggerhub.com/Peetzie/OpenLeaked/1.0.0",
                      "description": "SwaggerHub API Auto Mocking"
                    },
                    {
                      "url": "openleaked.compute.dtu.dk",
                      "description": "Default server"
                    },
                    {
                      "url": "localhost",
                      "description": "Local running server"
                    }
                  ],
                  "jsonRequestBodyExample": {
                    "email": "johndoe@example.com",
                    "password": "drowssaP123#"
                  },
                  "info": {
                    "title": "Open Leaked YAML",
                    "description": "## Introduction\nThis API is documented in **OpenAPI** format. \n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\nThe application makes uses of build in authentication. Some of the client calls will be restricted. A local API key may be optained from the vendor\n",
                    "contact": {
                      "name": "Open Leaked",
                      "url": "https://github.com/Open-Leaked/Monorepo",
                      "email": "openleaked@gmail.com"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    },
                    "version": "1.0.0",
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    }
                  },
                  "postman": {
                    "name": "Ends current the current",
                    "description": {
                      "content": "This action can be performed by any user currently in an active session (authorized). If sucessfull the session token will be revoked",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "api",
                        "login",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "\"\"",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  }
                },
                "sidebar_class_name": "post api-method",
                "info_path": "docs/API/open-leaked-yaml",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Authorise an existing user",
                "permalink": "/OpenLeakedDocs/docs/API/authorise-an-existing-user"
              },
              "next": {
                "title": "Verification of the temporary 6-digit code.",
                "permalink": "/OpenLeakedDocs/docs/API/verification-of-the-temporary-6-digit-code"
              }
            },
            {
              "unversionedId": "API/finds-associated-breaches",
              "id": "API/finds-associated-breaches",
              "title": "Finds associated breaches",
              "description": "Takes a username RequestBody, performs the lookup and retrieves breaches associated with that breach if any. Might return an empty set.",
              "source": "@site/docs/API/finds-associated-breaches.api.mdx",
              "sourceDirName": "API",
              "slug": "/API/finds-associated-breaches",
              "permalink": "/OpenLeakedDocs/docs/API/finds-associated-breaches",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "finds-associated-breaches",
                "title": "Finds associated breaches",
                "description": "Takes a username RequestBody, performs the lookup and retrieves breaches associated with that breach if any. Might return an empty set.",
                "sidebar_label": "Finds associated breaches",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "username"
                  ],
                  "description": "Takes a username RequestBody, performs the lookup and retrieves breaches associated with that breach if any. Might return an empty set.",
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "allOf": [
                            {
                              "title": "UsernameRequestBody"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "array",
                                  "items": {}
                                }
                              },
                              "example": [
                                "u",
                                "s",
                                "e",
                                "r",
                                "n",
                                "a",
                                "m",
                                "e"
                              ],
                              "title": "Username"
                            }
                          ]
                        }
                      }
                    },
                    "required": true
                  },
                  "responses": {
                    "200": {
                      "description": "sucess"
                    },
                    "401": {
                      "description": "Could not find username in database"
                    }
                  },
                  "method": "post",
                  "path": "/api/username/breaches",
                  "servers": [
                    {
                      "url": "https://virtserver.swaggerhub.com/Peetzie/OpenLeaked/1.0.0",
                      "description": "SwaggerHub API Auto Mocking"
                    },
                    {
                      "url": "openleaked.compute.dtu.dk",
                      "description": "Default server"
                    },
                    {
                      "url": "localhost",
                      "description": "Local running server"
                    }
                  ],
                  "jsonRequestBodyExample": [
                    "u",
                    "s",
                    "e",
                    "r",
                    "n",
                    "a",
                    "m",
                    "e"
                  ],
                  "info": {
                    "title": "Open Leaked YAML",
                    "description": "## Introduction\nThis API is documented in **OpenAPI** format. \n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\nThe application makes uses of build in authentication. Some of the client calls will be restricted. A local API key may be optained from the vendor\n",
                    "contact": {
                      "name": "Open Leaked",
                      "url": "https://github.com/Open-Leaked/Monorepo",
                      "email": "openleaked@gmail.com"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    },
                    "version": "1.0.0",
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    }
                  },
                  "postman": {
                    "name": "Finds associated breaches",
                    "description": {
                      "content": "Takes a username RequestBody, performs the lookup and retrieves breaches associated with that breach if any. Might return an empty set.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "api",
                        "username",
                        "breaches"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "\"\"",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  }
                },
                "sidebar_class_name": "post api-method",
                "info_path": "docs/API/open-leaked-yaml",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Retrieves the ID of an email",
                "permalink": "/OpenLeakedDocs/docs/API/retrieves-the-id-of-an-email"
              },
              "next": {
                "title": "Simple lookup in the database",
                "permalink": "/OpenLeakedDocs/docs/API/simple-lookup-in-the-database"
              }
            },
            {
              "unversionedId": "API/healthcheck",
              "id": "API/healthcheck",
              "title": "HealthCheck",
              "description": "HealthCheck",
              "source": "@site/docs/API/healthcheck.tag.mdx",
              "sourceDirName": "API",
              "slug": "/API/healthcheck",
              "permalink": "/OpenLeakedDocs/docs/API/healthcheck",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "healthcheck",
                "title": "HealthCheck",
                "description": "HealthCheck",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Introduction",
                "permalink": "/OpenLeakedDocs/docs/API/open-leaked-yaml"
              },
              "next": {
                "title": "Checks that the service is currently running",
                "permalink": "/OpenLeakedDocs/docs/API/checks-that-the-service-is-currently-running"
              }
            },
            {
              "unversionedId": "API/initiate-recovery-process",
              "id": "API/initiate-recovery-process",
              "title": "Initiate recovery process",
              "description": "Initiates the recovery process by sending an email to the entered email adress",
              "source": "@site/docs/API/initiate-recovery-process.api.mdx",
              "sourceDirName": "API",
              "slug": "/API/initiate-recovery-process",
              "permalink": "/OpenLeakedDocs/docs/API/initiate-recovery-process",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "initiate-recovery-process",
                "title": "Initiate recovery process",
                "description": "Initiates the recovery process by sending an email to the entered email adress",
                "sidebar_label": "Initiate recovery process",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "authorisations"
                  ],
                  "description": "Initiates the recovery process by sending an email to the entered email adress",
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "Domain": {
                              "type": "string"
                            },
                            "Local": {
                              "type": "string"
                            }
                          },
                          "example": {
                            "Local": "johndoe",
                            "Domain": "example.com"
                          },
                          "title": "Recover"
                        }
                      }
                    },
                    "required": true
                  },
                  "responses": {
                    "200": {
                      "description": "OK"
                    },
                    "400": {
                      "description": "Failed"
                    }
                  },
                  "method": "post",
                  "path": "/api/login/recover",
                  "servers": [
                    {
                      "url": "https://virtserver.swaggerhub.com/Peetzie/OpenLeaked/1.0.0",
                      "description": "SwaggerHub API Auto Mocking"
                    },
                    {
                      "url": "openleaked.compute.dtu.dk",
                      "description": "Default server"
                    },
                    {
                      "url": "localhost",
                      "description": "Local running server"
                    }
                  ],
                  "jsonRequestBodyExample": {
                    "Local": "johndoe",
                    "Domain": "example.com"
                  },
                  "info": {
                    "title": "Open Leaked YAML",
                    "description": "## Introduction\nThis API is documented in **OpenAPI** format. \n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\nThe application makes uses of build in authentication. Some of the client calls will be restricted. A local API key may be optained from the vendor\n",
                    "contact": {
                      "name": "Open Leaked",
                      "url": "https://github.com/Open-Leaked/Monorepo",
                      "email": "openleaked@gmail.com"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    },
                    "version": "1.0.0",
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    }
                  },
                  "postman": {
                    "name": "Initiate recovery process",
                    "description": {
                      "content": "Initiates the recovery process by sending an email to the entered email adress",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "api",
                        "login",
                        "recover"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "\"\"",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  }
                },
                "sidebar_class_name": "post api-method",
                "info_path": "docs/API/open-leaked-yaml",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Verification of the temporary 6-digit code.",
                "permalink": "/OpenLeakedDocs/docs/API/verification-of-the-temporary-6-digit-code"
              },
              "next": {
                "title": "Create a new password",
                "permalink": "/OpenLeakedDocs/docs/API/create-a-new-password"
              }
            },
            {
              "unversionedId": "API/open-leaked-yaml",
              "id": "API/open-leaked-yaml",
              "title": "Open Leaked YAML",
              "description": "## Introduction",
              "source": "@site/docs/API/open-leaked-yaml.info.mdx",
              "sourceDirName": "API",
              "slug": "/API/open-leaked-yaml",
              "permalink": "/OpenLeakedDocs/docs/API/open-leaked-yaml",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "sidebarPosition": 0,
              "frontMatter": {
                "id": "open-leaked-yaml",
                "title": "Open Leaked YAML",
                "description": "## Introduction",
                "sidebar_label": "Introduction",
                "sidebar_position": 0,
                "hide_title": true,
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "API Documentation",
                "permalink": "/OpenLeakedDocs/docs/category/petstore-api"
              },
              "next": {
                "title": "HealthCheck",
                "permalink": "/OpenLeakedDocs/docs/API/healthcheck"
              }
            },
            {
              "unversionedId": "API/password",
              "id": "API/password",
              "title": "password",
              "description": "password",
              "source": "@site/docs/API/password.tag.mdx",
              "sourceDirName": "API",
              "slug": "/API/password",
              "permalink": "/OpenLeakedDocs/docs/API/password",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "password",
                "title": "password",
                "description": "password",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Simple lookup in the database",
                "permalink": "/OpenLeakedDocs/docs/API/simple-lookup-in-the-database"
              },
              "next": {
                "title": "Simple lookup in the database",
                "permalink": "/OpenLeakedDocs/docs/API/simple-lookup-in-the-database"
              }
            },
            {
              "unversionedId": "API/retrieves-the-id-of-an-email",
              "id": "API/retrieves-the-id-of-an-email",
              "title": "Retrieves the ID of an email",
              "description": "Takes an emailID (see the requestbody) and retrieves the unique identifier from the database.",
              "source": "@site/docs/API/retrieves-the-id-of-an-email.api.mdx",
              "sourceDirName": "API",
              "slug": "/API/retrieves-the-id-of-an-email",
              "permalink": "/OpenLeakedDocs/docs/API/retrieves-the-id-of-an-email",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "retrieves-the-id-of-an-email",
                "title": "Retrieves the ID of an email",
                "description": "Takes an emailID (see the requestbody) and retrieves the unique identifier from the database.",
                "sidebar_label": "Retrieves the ID of an email",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "email"
                  ],
                  "description": "Takes an emailID (see the requestbody) and retrieves the unique identifier from the database.",
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "allOf": [
                            {
                              "title": "Email Request Body"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "local": {
                                  "type": "string"
                                },
                                "domain": {
                                  "type": "string"
                                }
                              },
                              "example": {
                                "local": "example",
                                "domain": "example.com"
                              },
                              "title": "Email"
                            }
                          ]
                        }
                      }
                    },
                    "required": true
                  },
                  "responses": {
                    "200": {
                      "description": "sucess"
                    },
                    "401": {
                      "description": "Could not find email in the database."
                    }
                  },
                  "method": "post",
                  "path": "/api/email/id",
                  "servers": [
                    {
                      "url": "https://virtserver.swaggerhub.com/Peetzie/OpenLeaked/1.0.0",
                      "description": "SwaggerHub API Auto Mocking"
                    },
                    {
                      "url": "openleaked.compute.dtu.dk",
                      "description": "Default server"
                    },
                    {
                      "url": "localhost",
                      "description": "Local running server"
                    }
                  ],
                  "jsonRequestBodyExample": {
                    "local": "example",
                    "domain": "example.com"
                  },
                  "info": {
                    "title": "Open Leaked YAML",
                    "description": "## Introduction\nThis API is documented in **OpenAPI** format. \n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\nThe application makes uses of build in authentication. Some of the client calls will be restricted. A local API key may be optained from the vendor\n",
                    "contact": {
                      "name": "Open Leaked",
                      "url": "https://github.com/Open-Leaked/Monorepo",
                      "email": "openleaked@gmail.com"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    },
                    "version": "1.0.0",
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    }
                  },
                  "postman": {
                    "name": "Retrieves the ID of an email",
                    "description": {
                      "content": "Takes an emailID (see the requestbody) and retrieves the unique identifier from the database.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "api",
                        "email",
                        "id"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "\"\"",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  }
                },
                "sidebar_class_name": "post api-method",
                "info_path": "docs/API/open-leaked-yaml",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "email",
                "permalink": "/OpenLeakedDocs/docs/API/email"
              },
              "next": {
                "title": "Finds associated breaches",
                "permalink": "/OpenLeakedDocs/docs/API/finds-associated-breaches"
              }
            },
            {
              "unversionedId": "API/simple-lookup-in-the-database",
              "id": "API/simple-lookup-in-the-database",
              "title": "Simple lookup in the database",
              "description": "Checks whether or not the username is existing in the database.",
              "source": "@site/docs/API/simple-lookup-in-the-database.api.mdx",
              "sourceDirName": "API",
              "slug": "/API/simple-lookup-in-the-database",
              "permalink": "/OpenLeakedDocs/docs/API/simple-lookup-in-the-database",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "simple-lookup-in-the-database",
                "title": "Simple lookup in the database",
                "description": "Checks whether or not the username is existing in the database.",
                "sidebar_label": "Simple lookup in the database",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "username"
                  ],
                  "description": "Checks whether or not the username is existing in the database.",
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "allOf": [
                            {
                              "title": "UsernameRequestBody"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "array",
                                  "items": {}
                                }
                              },
                              "example": [
                                "u",
                                "s",
                                "e",
                                "r",
                                "n",
                                "a",
                                "m",
                                "e"
                              ],
                              "title": "Username"
                            }
                          ]
                        }
                      }
                    },
                    "required": true
                  },
                  "responses": {
                    "200": {
                      "description": "success"
                    },
                    "401": {
                      "description": "No breaches found"
                    }
                  },
                  "method": "post",
                  "path": "/api/Username/exists",
                  "servers": [
                    {
                      "url": "https://virtserver.swaggerhub.com/Peetzie/OpenLeaked/1.0.0",
                      "description": "SwaggerHub API Auto Mocking"
                    },
                    {
                      "url": "openleaked.compute.dtu.dk",
                      "description": "Default server"
                    },
                    {
                      "url": "localhost",
                      "description": "Local running server"
                    }
                  ],
                  "jsonRequestBodyExample": [
                    "u",
                    "s",
                    "e",
                    "r",
                    "n",
                    "a",
                    "m",
                    "e"
                  ],
                  "info": {
                    "title": "Open Leaked YAML",
                    "description": "## Introduction\nThis API is documented in **OpenAPI** format. \n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\nThe application makes uses of build in authentication. Some of the client calls will be restricted. A local API key may be optained from the vendor\n",
                    "contact": {
                      "name": "Open Leaked",
                      "url": "https://github.com/Open-Leaked/Monorepo",
                      "email": "openleaked@gmail.com"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    },
                    "version": "1.0.0",
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    }
                  },
                  "postman": {
                    "name": "Simple lookup in the database",
                    "description": {
                      "content": "Checks whether or not the username is existing in the database.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "api",
                        "Username",
                        "exists"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "\"\"",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  }
                },
                "sidebar_class_name": "post api-method",
                "info_path": "docs/API/open-leaked-yaml",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Finds associated breaches",
                "permalink": "/OpenLeakedDocs/docs/API/finds-associated-breaches"
              },
              "next": {
                "title": "password",
                "permalink": "/OpenLeakedDocs/docs/API/password"
              }
            },
            {
              "unversionedId": "API/subscribe",
              "id": "API/subscribe",
              "title": "Subscribe",
              "description": "Adds the user to the subscribed users table",
              "source": "@site/docs/API/subscribe.api.mdx",
              "sourceDirName": "API",
              "slug": "/API/subscribe",
              "permalink": "/OpenLeakedDocs/docs/API/subscribe",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "subscribe",
                "title": "Subscribe",
                "description": "Adds the user to the subscribed users table",
                "sidebar_label": "Subscribe",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "subscribe"
                  ],
                  "description": "Adds the user to the subscribed users table",
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "allOf": [
                            {
                              "title": "Email Request Body"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "local": {
                                  "type": "string"
                                },
                                "domain": {
                                  "type": "string"
                                }
                              },
                              "example": {
                                "local": "example",
                                "domain": "example.com"
                              },
                              "title": "Email"
                            }
                          ]
                        }
                      }
                    },
                    "required": true
                  },
                  "responses": {
                    "200": {
                      "description": "Sucess"
                    },
                    "401": {
                      "description": "Failed to successfully adding user to the subscribe table"
                    }
                  },
                  "method": "post",
                  "path": "/api/subscribe/signup",
                  "servers": [
                    {
                      "url": "https://virtserver.swaggerhub.com/Peetzie/OpenLeaked/1.0.0",
                      "description": "SwaggerHub API Auto Mocking"
                    },
                    {
                      "url": "openleaked.compute.dtu.dk",
                      "description": "Default server"
                    },
                    {
                      "url": "localhost",
                      "description": "Local running server"
                    }
                  ],
                  "jsonRequestBodyExample": {
                    "local": "example",
                    "domain": "example.com"
                  },
                  "info": {
                    "title": "Open Leaked YAML",
                    "description": "## Introduction\nThis API is documented in **OpenAPI** format. \n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\nThe application makes uses of build in authentication. Some of the client calls will be restricted. A local API key may be optained from the vendor\n",
                    "contact": {
                      "name": "Open Leaked",
                      "url": "https://github.com/Open-Leaked/Monorepo",
                      "email": "openleaked@gmail.com"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    },
                    "version": "1.0.0",
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    }
                  },
                  "postman": {
                    "name": "Subscribe",
                    "description": {
                      "content": "Adds the user to the subscribed users table",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "api",
                        "subscribe",
                        "signup"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "\"\"",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  }
                },
                "sidebar_class_name": "post api-method",
                "info_path": "docs/API/open-leaked-yaml",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Finds associated breaches",
                "permalink": "/OpenLeakedDocs/docs/API/finds-associated-breaches"
              },
              "next": {
                "title": "Verify user",
                "permalink": "/OpenLeakedDocs/docs/API/verify-user"
              }
            },
            {
              "unversionedId": "API/subscribe",
              "id": "API/subscribe",
              "title": "subscribe",
              "description": "subscribe",
              "source": "@site/docs/API/subscribe.tag.mdx",
              "sourceDirName": "API",
              "slug": "/API/subscribe",
              "permalink": "/OpenLeakedDocs/docs/API/subscribe",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "subscribe",
                "title": "subscribe",
                "description": "subscribe",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Finds associated breaches",
                "permalink": "/OpenLeakedDocs/docs/API/finds-associated-breaches"
              },
              "next": {
                "title": "Verify user",
                "permalink": "/OpenLeakedDocs/docs/API/verify-user"
              }
            },
            {
              "unversionedId": "API/tip",
              "id": "API/tip",
              "title": "Tip",
              "description": "Tip",
              "source": "@site/docs/API/tip.tag.mdx",
              "sourceDirName": "API",
              "slug": "/API/tip",
              "permalink": "/OpenLeakedDocs/docs/API/tip",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "tip",
                "title": "Tip",
                "description": "Tip",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Authorise an existing user",
                "permalink": "/OpenLeakedDocs/docs/API/authorise-an-existing-user"
              },
              "next": {
                "title": "Allows a user to tip the maintainers with additional breaches",
                "permalink": "/OpenLeakedDocs/docs/API/allows-a-user-to-tip-the-maintainers-with-additional-breaches"
              }
            },
            {
              "unversionedId": "API/unsubscribe",
              "id": "API/unsubscribe",
              "title": "Unsubscribe",
              "description": "Removes the user from the subscribed users table",
              "source": "@site/docs/API/unsubscribe.api.mdx",
              "sourceDirName": "API",
              "slug": "/API/unsubscribe",
              "permalink": "/OpenLeakedDocs/docs/API/unsubscribe",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "unsubscribe",
                "title": "Unsubscribe",
                "description": "Removes the user from the subscribed users table",
                "sidebar_label": "Unsubscribe",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "subscribe"
                  ],
                  "description": "Removes the user from the subscribed users table",
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "allOf": [
                            {
                              "title": "Email Request Body"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "local": {
                                  "type": "string"
                                },
                                "domain": {
                                  "type": "string"
                                }
                              },
                              "example": {
                                "local": "example",
                                "domain": "example.com"
                              },
                              "title": "Email"
                            }
                          ]
                        }
                      }
                    },
                    "required": true
                  },
                  "responses": {
                    "200": {
                      "description": "Sucess"
                    },
                    "401": {
                      "description": "Failed to remove subscribers users"
                    }
                  },
                  "method": "post",
                  "path": "/api/subscribe/unsubscribe",
                  "servers": [
                    {
                      "url": "https://virtserver.swaggerhub.com/Peetzie/OpenLeaked/1.0.0",
                      "description": "SwaggerHub API Auto Mocking"
                    },
                    {
                      "url": "openleaked.compute.dtu.dk",
                      "description": "Default server"
                    },
                    {
                      "url": "localhost",
                      "description": "Local running server"
                    }
                  ],
                  "jsonRequestBodyExample": {
                    "local": "example",
                    "domain": "example.com"
                  },
                  "info": {
                    "title": "Open Leaked YAML",
                    "description": "## Introduction\nThis API is documented in **OpenAPI** format. \n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\nThe application makes uses of build in authentication. Some of the client calls will be restricted. A local API key may be optained from the vendor\n",
                    "contact": {
                      "name": "Open Leaked",
                      "url": "https://github.com/Open-Leaked/Monorepo",
                      "email": "openleaked@gmail.com"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    },
                    "version": "1.0.0",
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    }
                  },
                  "postman": {
                    "name": "Unsubscribe",
                    "description": {
                      "content": "Removes the user from the subscribed users table",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "api",
                        "subscribe",
                        "unsubscribe"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "\"\"",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  }
                },
                "sidebar_class_name": "post api-method",
                "info_path": "docs/API/open-leaked-yaml",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "subscribe",
                "permalink": "/OpenLeakedDocs/docs/API/subscribe"
              },
              "next": {
                "title": "username",
                "permalink": "/OpenLeakedDocs/docs/API/username"
              }
            },
            {
              "unversionedId": "API/username",
              "id": "API/username",
              "title": "username",
              "description": "username",
              "source": "@site/docs/API/username.tag.mdx",
              "sourceDirName": "API",
              "slug": "/API/username",
              "permalink": "/OpenLeakedDocs/docs/API/username",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "username",
                "title": "username",
                "description": "username",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Unsubscribe",
                "permalink": "/OpenLeakedDocs/docs/API/unsubscribe"
              },
              "next": {
                "title": "Simple lookup in the database",
                "permalink": "/OpenLeakedDocs/docs/API/simple-lookup-in-the-database"
              }
            },
            {
              "unversionedId": "API/verification-of-the-temporary-6-digit-code",
              "id": "API/verification-of-the-temporary-6-digit-code",
              "title": "Verification of the temporary 6-digit code.",
              "description": "Verification of the temporary 6-digit code.",
              "source": "@site/docs/API/verification-of-the-temporary-6-digit-code.api.mdx",
              "sourceDirName": "API",
              "slug": "/API/verification-of-the-temporary-6-digit-code",
              "permalink": "/OpenLeakedDocs/docs/API/verification-of-the-temporary-6-digit-code",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "verification-of-the-temporary-6-digit-code",
                "title": "Verification of the temporary 6-digit code.",
                "description": "Verification of the temporary 6-digit code.",
                "sidebar_label": "Verification of the temporary 6-digit code.",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "authorisations"
                  ],
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "Local": {
                              "type": "string"
                            },
                            "Domain": {
                              "type": "string"
                            },
                            "verifyCode": {
                              "type": "integer"
                            }
                          },
                          "example": {
                            "Local": "johndoe",
                            "Domain": "example.com",
                            "verifyCode": 999999
                          },
                          "title": "Verify"
                        }
                      }
                    },
                    "required": true
                  },
                  "responses": {
                    "200": {
                      "description": "OK"
                    },
                    "400": {
                      "description": "Failed"
                    }
                  },
                  "description": "Verification of the temporary 6-digit code.",
                  "method": "post",
                  "path": "/api/login/verify",
                  "servers": [
                    {
                      "url": "https://virtserver.swaggerhub.com/Peetzie/OpenLeaked/1.0.0",
                      "description": "SwaggerHub API Auto Mocking"
                    },
                    {
                      "url": "openleaked.compute.dtu.dk",
                      "description": "Default server"
                    },
                    {
                      "url": "localhost",
                      "description": "Local running server"
                    }
                  ],
                  "jsonRequestBodyExample": {
                    "Local": "johndoe",
                    "Domain": "example.com",
                    "verifyCode": 999999
                  },
                  "info": {
                    "title": "Open Leaked YAML",
                    "description": "## Introduction\nThis API is documented in **OpenAPI** format. \n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\nThe application makes uses of build in authentication. Some of the client calls will be restricted. A local API key may be optained from the vendor\n",
                    "contact": {
                      "name": "Open Leaked",
                      "url": "https://github.com/Open-Leaked/Monorepo",
                      "email": "openleaked@gmail.com"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    },
                    "version": "1.0.0",
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    }
                  },
                  "postman": {
                    "name": "Verification of the temporary 6-digit code.",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "api",
                        "login",
                        "verify"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "\"\"",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  }
                },
                "sidebar_class_name": "post api-method",
                "info_path": "docs/API/open-leaked-yaml",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "Ends current the current",
                "permalink": "/OpenLeakedDocs/docs/API/ends-current-the-current"
              },
              "next": {
                "title": "Initiate recovery process",
                "permalink": "/OpenLeakedDocs/docs/API/initiate-recovery-process"
              }
            },
            {
              "unversionedId": "API/verify-user",
              "id": "API/verify-user",
              "title": "Verify user",
              "description": "Authenticate the user by checking the entered verification code.",
              "source": "@site/docs/API/verify-user.api.mdx",
              "sourceDirName": "API",
              "slug": "/API/verify-user",
              "permalink": "/OpenLeakedDocs/docs/API/verify-user",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "verify-user",
                "title": "Verify user",
                "description": "Authenticate the user by checking the entered verification code.",
                "sidebar_label": "Verify user",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "subscribe"
                  ],
                  "description": "Authenticate the user by checking the entered verification code.",
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "allOf": [
                            {
                              "title": "VerifySubscribeRequestBody"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "local": {
                                  "type": "string"
                                },
                                "domain": {
                                  "type": "string"
                                },
                                "verifyCode": {
                                  "type": "string"
                                }
                              },
                              "example": {
                                "local": "example",
                                "domain": "example.com",
                                "verifycode": 123456
                              },
                              "title": "Subscribe"
                            }
                          ]
                        }
                      }
                    },
                    "required": true
                  },
                  "responses": {
                    "200": {
                      "description": "Sucess"
                    },
                    "401": {
                      "description": "Failed to verify user"
                    }
                  },
                  "method": "post",
                  "path": "/api/subscribe/verify",
                  "servers": [
                    {
                      "url": "https://virtserver.swaggerhub.com/Peetzie/OpenLeaked/1.0.0",
                      "description": "SwaggerHub API Auto Mocking"
                    },
                    {
                      "url": "openleaked.compute.dtu.dk",
                      "description": "Default server"
                    },
                    {
                      "url": "localhost",
                      "description": "Local running server"
                    }
                  ],
                  "jsonRequestBodyExample": {
                    "local": "example",
                    "domain": "example.com",
                    "verifycode": 123456
                  },
                  "info": {
                    "title": "Open Leaked YAML",
                    "description": "## Introduction\nThis API is documented in **OpenAPI** format. \n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\nThe application makes uses of build in authentication. Some of the client calls will be restricted. A local API key may be optained from the vendor\n",
                    "contact": {
                      "name": "Open Leaked",
                      "url": "https://github.com/Open-Leaked/Monorepo",
                      "email": "openleaked@gmail.com"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    },
                    "version": "1.0.0",
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    }
                  },
                  "postman": {
                    "name": "Verify user",
                    "description": {
                      "content": "Authenticate the user by checking the entered verification code.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "api",
                        "subscribe",
                        "verify"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "\"\"",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  }
                },
                "sidebar_class_name": "post api-method",
                "info_path": "docs/API/open-leaked-yaml",
                "custom_edit_url": null
              },
              "sidebar": "openApiSidebar",
              "previous": {
                "title": "subscribe",
                "permalink": "/OpenLeakedDocs/docs/API/subscribe"
              },
              "next": {
                "title": "subscribe",
                "permalink": "/OpenLeakedDocs/docs/API/subscribe"
              }
            },
            {
              "unversionedId": "intro",
              "id": "intro",
              "title": "Tutorial Intro",
              "description": "Let's discover Docusaurus in less than 5 minutes.",
              "source": "@site/docs/intro.md",
              "sourceDirName": ".",
              "slug": "/intro",
              "permalink": "/OpenLeakedDocs/docs/intro",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md",
              "tags": [
                {
                  "label": "test",
                  "permalink": "/OpenLeakedDocs/docs/tags/test"
                }
              ],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "tags": [
                  "test"
                ]
              },
              "sidebar": "tutorialSidebar",
              "next": {
                "title": "Tutorial - Basics",
                "permalink": "/OpenLeakedDocs/docs/category/tutorial---basics"
              }
            },
            {
              "unversionedId": "petstore/add-pet",
              "id": "petstore/add-pet",
              "title": "Add a new pet to the store",
              "description": "Add new pet to the store inventory.",
              "source": "@site/docs/petstore/add-pet.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/add-pet",
              "permalink": "/OpenLeakedDocs/docs/petstore/add-pet",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "add-pet",
                "title": "Add a new pet to the store",
                "description": "Add new pet to the store inventory.",
                "sidebar_label": "Add a new pet to the store",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "pet"
                  ],
                  "description": "Add new pet to the store inventory.",
                  "operationId": "addPet",
                  "responses": {
                    "405": {
                      "description": "Invalid input"
                    }
                  },
                  "security": [
                    {
                      "petstore_auth": [
                        "write:pets",
                        "read:pets"
                      ]
                    }
                  ],
                  "x-codeSamples": [
                    {
                      "lang": "C#",
                      "source": "PetStore.v1.Pet pet = new PetStore.v1.Pet();\npet.setApiKey(\"your api key\");\npet.petType = PetStore.v1.Pet.TYPE_DOG;\npet.name = \"Rex\";\n// set other fields\nPetStoreResponse response = pet.create();\nif (response.statusCode == HttpStatusCode.Created)\n{\n  // Successfully created\n}\nelse\n{\n  // Something wrong -- check response for errors\n  Console.WriteLine(response.getRawResponse());\n}\n"
                    },
                    {
                      "lang": "PHP",
                      "source": "$form = new \\PetStore\\Entities\\Pet();\n$form->setPetType(\"Dog\");\n$form->setName(\"Rex\");\n// set other fields\ntry {\n    $pet = $client->pets()->create($form);\n} catch (UnprocessableEntityException $e) {\n    var_dump($e->getErrors());\n}\n"
                    }
                  ],
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "allOf": [
                            {
                              "description": "My Pet",
                              "title": "Pettie"
                            },
                            {
                              "title": "pet",
                              "type": "object",
                              "required": [
                                "name",
                                "photoUrls"
                              ],
                              "discriminator": {
                                "propertyName": "petType",
                                "mapping": {
                                  "cat": {
                                    "title": "cat",
                                    "description": "A representation of a cat",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "huntingSkill": {
                                            "type": "string",
                                            "description": "The measured skill for hunting",
                                            "default": "lazy",
                                            "example": "adventurous",
                                            "enum": [
                                              "clueless",
                                              "lazy",
                                              "adventurous",
                                              "aggressive"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "huntingSkill"
                                        ]
                                      }
                                    ]
                                  },
                                  "dog": {
                                    "title": "dog",
                                    "description": "A representation of a dog",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "packSize": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The size of the pack the dog is from",
                                            "default": 1,
                                            "minimum": 1
                                          }
                                        },
                                        "required": [
                                          "packSize"
                                        ]
                                      }
                                    ]
                                  },
                                  "bee": {
                                    "title": "bee",
                                    "description": "A representation of a honey bee",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "honeyPerDay": {
                                            "type": "number",
                                            "description": "Average amount of honey produced per day in ounces",
                                            "example": 3.14,
                                            "multipleOf": 0.01
                                          }
                                        },
                                        "required": [
                                          "honeyPerDay"
                                        ]
                                      }
                                    ]
                                  }
                                }
                              },
                              "properties": {
                                "id": {
                                  "externalDocs": {
                                    "description": "Find more info here",
                                    "url": "https://example.com"
                                  },
                                  "description": "Pet ID",
                                  "allOf": [
                                    {
                                      "type": "integer",
                                      "format": "int64",
                                      "readOnly": true,
                                      "title": "Id"
                                    }
                                  ]
                                },
                                "category": {
                                  "description": "Categories this pet belongs to",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "Category ID",
                                          "allOf": [
                                            {
                                              "type": "integer",
                                              "format": "int64",
                                              "readOnly": true,
                                              "title": "Id"
                                            }
                                          ]
                                        },
                                        "name": {
                                          "description": "Category name",
                                          "type": "string",
                                          "minLength": 1
                                        },
                                        "sub": {
                                          "description": "Test Sub Category",
                                          "type": "object",
                                          "properties": {
                                            "prop1": {
                                              "type": "string",
                                              "description": "Dumb Property"
                                            }
                                          }
                                        }
                                      },
                                      "xml": {
                                        "name": "Category"
                                      },
                                      "title": "Category"
                                    }
                                  ]
                                },
                                "name": {
                                  "description": "The name given to a pet",
                                  "type": "string",
                                  "example": "Guru"
                                },
                                "photoUrls": {
                                  "description": "The list of URL to a cute photos featuring pet",
                                  "type": "array",
                                  "maxItems": 20,
                                  "xml": {
                                    "name": "photoUrl",
                                    "wrapped": true
                                  },
                                  "items": {
                                    "type": "string",
                                    "format": "url"
                                  }
                                },
                                "friend": {
                                  "allOf": [
                                    "circular(pet)"
                                  ]
                                },
                                "tags": {
                                  "description": "Tags attached to the pet",
                                  "type": "array",
                                  "minItems": 1,
                                  "xml": {
                                    "name": "tag",
                                    "wrapped": true
                                  },
                                  "items": {
                                    "title": "tag",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "Tag ID",
                                        "allOf": [
                                          {
                                            "type": "integer",
                                            "format": "int64",
                                            "readOnly": true,
                                            "title": "Id"
                                          }
                                        ]
                                      },
                                      "name": {
                                        "description": "Tag name",
                                        "type": "string",
                                        "minLength": 1
                                      }
                                    },
                                    "xml": {
                                      "name": "Tag"
                                    }
                                  }
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Pet status in the store",
                                  "enum": [
                                    "available",
                                    "pending",
                                    "sold"
                                  ]
                                },
                                "petType": {
                                  "description": "Type of a pet",
                                  "type": "string",
                                  "oneOf": [
                                    {
                                      "title": "cat",
                                      "description": "A representation of a cat",
                                      "allOf": [
                                        "circular(pet)",
                                        {
                                          "type": "object",
                                          "properties": {
                                            "huntingSkill": {
                                              "type": "string",
                                              "description": "The measured skill for hunting",
                                              "default": "lazy",
                                              "example": "adventurous",
                                              "enum": [
                                                "clueless",
                                                "lazy",
                                                "adventurous",
                                                "aggressive"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "huntingSkill"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "title": "dog",
                                      "description": "A representation of a dog",
                                      "allOf": [
                                        "circular(pet)",
                                        {
                                          "type": "object",
                                          "properties": {
                                            "packSize": {
                                              "type": "integer",
                                              "format": "int32",
                                              "description": "The size of the pack the dog is from",
                                              "default": 1,
                                              "minimum": 1
                                            }
                                          },
                                          "required": [
                                            "packSize"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "title": "bee",
                                      "description": "A representation of a honey bee",
                                      "allOf": [
                                        "circular(pet)",
                                        {
                                          "type": "object",
                                          "properties": {
                                            "honeyPerDay": {
                                              "type": "number",
                                              "description": "Average amount of honey produced per day in ounces",
                                              "example": 3.14,
                                              "multipleOf": 0.01
                                            }
                                          },
                                          "required": [
                                            "honeyPerDay"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              "xml": {
                                "name": "Pet"
                              }
                            }
                          ]
                        }
                      },
                      "application/xml": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "hooray"
                            }
                          }
                        }
                      }
                    },
                    "description": "Pet object that needs to be added to the store",
                    "required": true
                  },
                  "parameters": [
                    {
                      "name": "Accept-Language",
                      "in": "header",
                      "description": "The language you prefer for messages. Supported values are en-AU, en-CA, en-GB, en-US",
                      "example": "en-US",
                      "required": false,
                      "schema": {
                        "type": "string",
                        "default": "en-AU"
                      }
                    },
                    {
                      "name": "cookieParam",
                      "in": "cookie",
                      "description": "Some cookie",
                      "required": true,
                      "schema": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  ],
                  "method": "post",
                  "path": "/pet",
                  "servers": [
                    {
                      "url": "https://petstore.swagger.io/v2",
                      "description": "Default server"
                    },
                    {
                      "url": "https://petstore.swagger.io/sandbox",
                      "description": "Sandbox server"
                    }
                  ],
                  "securitySchemes": {
                    "petstore_auth": {
                      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
                      "type": "oauth2",
                      "flows": {
                        "implicit": {
                          "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
                          "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
                      "type": "apiKey",
                      "name": "api_key",
                      "in": "header"
                    }
                  },
                  "jsonRequestBodyExample": {
                    "category": {
                      "name": "string",
                      "sub": {
                        "prop1": "string"
                      }
                    },
                    "name": "Guru",
                    "photoUrls": [
                      "string"
                    ],
                    "friend": {},
                    "tags": [
                      {
                        "name": "string"
                      }
                    ],
                    "status": "available",
                    "petType": {
                      "huntingSkill": "adventurous"
                    }
                  },
                  "info": {
                    "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
                    "version": "2.0.0",
                    "title": "Swagger Petstore YAML",
                    "termsOfService": "http://swagger.io/terms/",
                    "contact": {
                      "name": "API Support",
                      "email": "apiteam@swagger.io",
                      "url": "https://github.com/Redocly/redoc"
                    },
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    }
                  },
                  "postman": {
                    "name": "Add a new pet to the store",
                    "description": {
                      "content": "Add new pet to the store inventory.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": {
                          "content": "The language you prefer for messages. Supported values are en-AU, en-CA, en-GB, en-US",
                          "type": "text/plain"
                        },
                        "key": "Accept-Language",
                        "value": ""
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "\"\"",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  }
                },
                "sidebar_class_name": "post api-method",
                "info_path": "docs/petstore/swagger-petstore-yaml",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Introduction",
                "permalink": "/OpenLeakedDocs/docs/petstore/swagger-petstore-yaml"
              },
              "next": {
                "title": "Create user",
                "permalink": "/OpenLeakedDocs/docs/petstore/create-user"
              }
            },
            {
              "unversionedId": "petstore/create-user",
              "id": "petstore/create-user",
              "title": "Create user",
              "description": "This can only be done by the logged in user.",
              "source": "@site/docs/petstore/create-user.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/create-user",
              "permalink": "/OpenLeakedDocs/docs/petstore/create-user",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "create-user",
                "title": "Create user",
                "description": "This can only be done by the logged in user.",
                "sidebar_label": "Create user",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "user"
                  ],
                  "description": "This can only be done by the logged in user.",
                  "operationId": "createUser",
                  "responses": {
                    "default": {
                      "description": "successful operation"
                    }
                  },
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "readOnly": true,
                              "title": "Id"
                            },
                            "pet": {
                              "oneOf": [
                                {
                                  "title": "pet",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "photoUrls"
                                  ],
                                  "discriminator": {
                                    "propertyName": "petType",
                                    "mapping": {
                                      "cat": {
                                        "title": "cat",
                                        "description": "A representation of a cat",
                                        "allOf": [
                                          "circular(pet)",
                                          {
                                            "type": "object",
                                            "properties": {
                                              "huntingSkill": {
                                                "type": "string",
                                                "description": "The measured skill for hunting",
                                                "default": "lazy",
                                                "example": "adventurous",
                                                "enum": [
                                                  "clueless",
                                                  "lazy",
                                                  "adventurous",
                                                  "aggressive"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "huntingSkill"
                                            ]
                                          }
                                        ]
                                      },
                                      "dog": {
                                        "title": "dog",
                                        "description": "A representation of a dog",
                                        "allOf": [
                                          "circular(pet)",
                                          {
                                            "type": "object",
                                            "properties": {
                                              "packSize": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "The size of the pack the dog is from",
                                                "default": 1,
                                                "minimum": 1
                                              }
                                            },
                                            "required": [
                                              "packSize"
                                            ]
                                          }
                                        ]
                                      },
                                      "bee": {
                                        "title": "bee",
                                        "description": "A representation of a honey bee",
                                        "allOf": [
                                          "circular(pet)",
                                          {
                                            "type": "object",
                                            "properties": {
                                              "honeyPerDay": {
                                                "type": "number",
                                                "description": "Average amount of honey produced per day in ounces",
                                                "example": 3.14,
                                                "multipleOf": 0.01
                                              }
                                            },
                                            "required": [
                                              "honeyPerDay"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "properties": {
                                    "id": {
                                      "externalDocs": {
                                        "description": "Find more info here",
                                        "url": "https://example.com"
                                      },
                                      "description": "Pet ID",
                                      "allOf": [
                                        {
                                          "type": "integer",
                                          "format": "int64",
                                          "readOnly": true,
                                          "title": "Id"
                                        }
                                      ]
                                    },
                                    "category": {
                                      "description": "Categories this pet belongs to",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "description": "Category ID",
                                              "allOf": [
                                                {
                                                  "type": "integer",
                                                  "format": "int64",
                                                  "readOnly": true,
                                                  "title": "Id"
                                                }
                                              ]
                                            },
                                            "name": {
                                              "description": "Category name",
                                              "type": "string",
                                              "minLength": 1
                                            },
                                            "sub": {
                                              "description": "Test Sub Category",
                                              "type": "object",
                                              "properties": {
                                                "prop1": {
                                                  "type": "string",
                                                  "description": "Dumb Property"
                                                }
                                              }
                                            }
                                          },
                                          "xml": {
                                            "name": "Category"
                                          },
                                          "title": "Category"
                                        }
                                      ]
                                    },
                                    "name": {
                                      "description": "The name given to a pet",
                                      "type": "string",
                                      "example": "Guru"
                                    },
                                    "photoUrls": {
                                      "description": "The list of URL to a cute photos featuring pet",
                                      "type": "array",
                                      "maxItems": 20,
                                      "xml": {
                                        "name": "photoUrl",
                                        "wrapped": true
                                      },
                                      "items": {
                                        "type": "string",
                                        "format": "url"
                                      }
                                    },
                                    "friend": {
                                      "allOf": [
                                        "circular(pet)"
                                      ]
                                    },
                                    "tags": {
                                      "description": "Tags attached to the pet",
                                      "type": "array",
                                      "minItems": 1,
                                      "xml": {
                                        "name": "tag",
                                        "wrapped": true
                                      },
                                      "items": {
                                        "title": "tag",
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "description": "Tag ID",
                                            "allOf": [
                                              {
                                                "type": "integer",
                                                "format": "int64",
                                                "readOnly": true,
                                                "title": "Id"
                                              }
                                            ]
                                          },
                                          "name": {
                                            "description": "Tag name",
                                            "type": "string",
                                            "minLength": 1
                                          }
                                        },
                                        "xml": {
                                          "name": "Tag"
                                        }
                                      }
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "Pet status in the store",
                                      "enum": [
                                        "available",
                                        "pending",
                                        "sold"
                                      ]
                                    },
                                    "petType": {
                                      "description": "Type of a pet",
                                      "type": "string",
                                      "oneOf": [
                                        {
                                          "title": "cat",
                                          "description": "A representation of a cat",
                                          "allOf": [
                                            "circular(pet)",
                                            {
                                              "type": "object",
                                              "properties": {
                                                "huntingSkill": {
                                                  "type": "string",
                                                  "description": "The measured skill for hunting",
                                                  "default": "lazy",
                                                  "example": "adventurous",
                                                  "enum": [
                                                    "clueless",
                                                    "lazy",
                                                    "adventurous",
                                                    "aggressive"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "huntingSkill"
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "title": "dog",
                                          "description": "A representation of a dog",
                                          "allOf": [
                                            "circular(pet)",
                                            {
                                              "type": "object",
                                              "properties": {
                                                "packSize": {
                                                  "type": "integer",
                                                  "format": "int32",
                                                  "description": "The size of the pack the dog is from",
                                                  "default": 1,
                                                  "minimum": 1
                                                }
                                              },
                                              "required": [
                                                "packSize"
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "title": "bee",
                                          "description": "A representation of a honey bee",
                                          "allOf": [
                                            "circular(pet)",
                                            {
                                              "type": "object",
                                              "properties": {
                                                "honeyPerDay": {
                                                  "type": "number",
                                                  "description": "Average amount of honey produced per day in ounces",
                                                  "example": 3.14,
                                                  "multipleOf": 0.01
                                                }
                                              },
                                              "required": [
                                                "honeyPerDay"
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "xml": {
                                    "name": "Pet"
                                  }
                                },
                                {
                                  "title": "tag",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "description": "Tag ID",
                                      "allOf": [
                                        {
                                          "type": "integer",
                                          "format": "int64",
                                          "readOnly": true,
                                          "title": "Id"
                                        }
                                      ]
                                    },
                                    "name": {
                                      "description": "Tag name",
                                      "type": "string",
                                      "minLength": 1
                                    }
                                  },
                                  "xml": {
                                    "name": "Tag"
                                  }
                                }
                              ]
                            },
                            "username": {
                              "description": "User supplied username",
                              "type": "string",
                              "minLength": 4,
                              "example": "John78"
                            },
                            "firstName": {
                              "description": "User first name",
                              "type": "string",
                              "minLength": 1,
                              "example": "John"
                            },
                            "lastName": {
                              "description": "User last name",
                              "type": "string",
                              "minLength": 1,
                              "example": "Smith"
                            },
                            "email": {
                              "description": "User email address",
                              "type": "string",
                              "format": "email",
                              "example": "john.smith@example.com"
                            },
                            "password": {
                              "type": "string",
                              "description": "User password, MUST contain a mix of upper and lower case letters, as well as digits",
                              "format": "password",
                              "minLength": 8,
                              "pattern": "/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/",
                              "example": "drowssaP123"
                            },
                            "phone": {
                              "description": "User phone number in international format",
                              "type": "string",
                              "pattern": "/^\\+(?:[0-9]-?){6,14}[0-9]$/",
                              "example": "+1-202-555-0192"
                            },
                            "userStatus": {
                              "description": "User status",
                              "type": "integer",
                              "format": "int32"
                            }
                          },
                          "xml": {
                            "name": "User"
                          },
                          "title": "User"
                        }
                      }
                    },
                    "description": "Created user object",
                    "required": true
                  },
                  "method": "post",
                  "path": "/user",
                  "servers": [
                    {
                      "url": "https://petstore.swagger.io/v2",
                      "description": "Default server"
                    },
                    {
                      "url": "https://petstore.swagger.io/sandbox",
                      "description": "Sandbox server"
                    }
                  ],
                  "securitySchemes": {
                    "petstore_auth": {
                      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
                      "type": "oauth2",
                      "flows": {
                        "implicit": {
                          "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
                          "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
                      "type": "apiKey",
                      "name": "api_key",
                      "in": "header"
                    }
                  },
                  "jsonRequestBodyExample": {
                    "pet": {
                      "category": {
                        "name": "string",
                        "sub": {
                          "prop1": "string"
                        }
                      },
                      "name": "Guru",
                      "photoUrls": [
                        "string"
                      ],
                      "friend": {},
                      "tags": [
                        {
                          "name": "string"
                        }
                      ],
                      "status": "available",
                      "petType": {
                        "huntingSkill": "adventurous"
                      }
                    },
                    "username": "John78",
                    "firstName": "John",
                    "lastName": "Smith",
                    "email": "john.smith@example.com",
                    "password": "drowssaP123",
                    "phone": "+1-202-555-0192",
                    "userStatus": 0
                  },
                  "info": {
                    "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
                    "version": "2.0.0",
                    "title": "Swagger Petstore YAML",
                    "termsOfService": "http://swagger.io/terms/",
                    "contact": {
                      "name": "API Support",
                      "email": "apiteam@swagger.io",
                      "url": "https://github.com/Redocly/redoc"
                    },
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    }
                  },
                  "postman": {
                    "name": "Create user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "\"\"",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  }
                },
                "sidebar_class_name": "post api-method",
                "info_path": "docs/petstore/swagger-petstore-yaml",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Add a new pet to the store",
                "permalink": "/OpenLeakedDocs/docs/petstore/add-pet"
              },
              "next": {
                "title": "Creates list of users with given input array",
                "permalink": "/OpenLeakedDocs/docs/petstore/create-users-with-array-input"
              }
            },
            {
              "unversionedId": "petstore/create-users-with-array-input",
              "id": "petstore/create-users-with-array-input",
              "title": "Creates list of users with given input array",
              "description": "",
              "source": "@site/docs/petstore/create-users-with-array-input.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/create-users-with-array-input",
              "permalink": "/OpenLeakedDocs/docs/petstore/create-users-with-array-input",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "create-users-with-array-input",
                "title": "Creates list of users with given input array",
                "description": "",
                "sidebar_label": "Creates list of users with given input array",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "user"
                  ],
                  "description": "",
                  "operationId": "createUsersWithArrayInput",
                  "responses": {
                    "default": {
                      "description": "successful operation"
                    }
                  },
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true,
                                "title": "Id"
                              },
                              "pet": {
                                "oneOf": [
                                  {
                                    "title": "pet",
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "photoUrls"
                                    ],
                                    "discriminator": {
                                      "propertyName": "petType",
                                      "mapping": {
                                        "cat": {
                                          "title": "cat",
                                          "description": "A representation of a cat",
                                          "allOf": [
                                            "circular(pet)",
                                            {
                                              "type": "object",
                                              "properties": {
                                                "huntingSkill": {
                                                  "type": "string",
                                                  "description": "The measured skill for hunting",
                                                  "default": "lazy",
                                                  "example": "adventurous",
                                                  "enum": [
                                                    "clueless",
                                                    "lazy",
                                                    "adventurous",
                                                    "aggressive"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "huntingSkill"
                                              ]
                                            }
                                          ]
                                        },
                                        "dog": {
                                          "title": "dog",
                                          "description": "A representation of a dog",
                                          "allOf": [
                                            "circular(pet)",
                                            {
                                              "type": "object",
                                              "properties": {
                                                "packSize": {
                                                  "type": "integer",
                                                  "format": "int32",
                                                  "description": "The size of the pack the dog is from",
                                                  "default": 1,
                                                  "minimum": 1
                                                }
                                              },
                                              "required": [
                                                "packSize"
                                              ]
                                            }
                                          ]
                                        },
                                        "bee": {
                                          "title": "bee",
                                          "description": "A representation of a honey bee",
                                          "allOf": [
                                            "circular(pet)",
                                            {
                                              "type": "object",
                                              "properties": {
                                                "honeyPerDay": {
                                                  "type": "number",
                                                  "description": "Average amount of honey produced per day in ounces",
                                                  "example": 3.14,
                                                  "multipleOf": 0.01
                                                }
                                              },
                                              "required": [
                                                "honeyPerDay"
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "properties": {
                                      "id": {
                                        "externalDocs": {
                                          "description": "Find more info here",
                                          "url": "https://example.com"
                                        },
                                        "description": "Pet ID",
                                        "allOf": [
                                          {
                                            "type": "integer",
                                            "format": "int64",
                                            "readOnly": true,
                                            "title": "Id"
                                          }
                                        ]
                                      },
                                      "category": {
                                        "description": "Categories this pet belongs to",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "description": "Category ID",
                                                "allOf": [
                                                  {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "readOnly": true,
                                                    "title": "Id"
                                                  }
                                                ]
                                              },
                                              "name": {
                                                "description": "Category name",
                                                "type": "string",
                                                "minLength": 1
                                              },
                                              "sub": {
                                                "description": "Test Sub Category",
                                                "type": "object",
                                                "properties": {
                                                  "prop1": {
                                                    "type": "string",
                                                    "description": "Dumb Property"
                                                  }
                                                }
                                              }
                                            },
                                            "xml": {
                                              "name": "Category"
                                            },
                                            "title": "Category"
                                          }
                                        ]
                                      },
                                      "name": {
                                        "description": "The name given to a pet",
                                        "type": "string",
                                        "example": "Guru"
                                      },
                                      "photoUrls": {
                                        "description": "The list of URL to a cute photos featuring pet",
                                        "type": "array",
                                        "maxItems": 20,
                                        "xml": {
                                          "name": "photoUrl",
                                          "wrapped": true
                                        },
                                        "items": {
                                          "type": "string",
                                          "format": "url"
                                        }
                                      },
                                      "friend": {
                                        "allOf": [
                                          "circular(pet)"
                                        ]
                                      },
                                      "tags": {
                                        "description": "Tags attached to the pet",
                                        "type": "array",
                                        "minItems": 1,
                                        "xml": {
                                          "name": "tag",
                                          "wrapped": true
                                        },
                                        "items": {
                                          "title": "tag",
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "description": "Tag ID",
                                              "allOf": [
                                                {
                                                  "type": "integer",
                                                  "format": "int64",
                                                  "readOnly": true,
                                                  "title": "Id"
                                                }
                                              ]
                                            },
                                            "name": {
                                              "description": "Tag name",
                                              "type": "string",
                                              "minLength": 1
                                            }
                                          },
                                          "xml": {
                                            "name": "Tag"
                                          }
                                        }
                                      },
                                      "status": {
                                        "type": "string",
                                        "description": "Pet status in the store",
                                        "enum": [
                                          "available",
                                          "pending",
                                          "sold"
                                        ]
                                      },
                                      "petType": {
                                        "description": "Type of a pet",
                                        "type": "string",
                                        "oneOf": [
                                          {
                                            "title": "cat",
                                            "description": "A representation of a cat",
                                            "allOf": [
                                              "circular(pet)",
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "huntingSkill": {
                                                    "type": "string",
                                                    "description": "The measured skill for hunting",
                                                    "default": "lazy",
                                                    "example": "adventurous",
                                                    "enum": [
                                                      "clueless",
                                                      "lazy",
                                                      "adventurous",
                                                      "aggressive"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "huntingSkill"
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "title": "dog",
                                            "description": "A representation of a dog",
                                            "allOf": [
                                              "circular(pet)",
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "packSize": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "The size of the pack the dog is from",
                                                    "default": 1,
                                                    "minimum": 1
                                                  }
                                                },
                                                "required": [
                                                  "packSize"
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "title": "bee",
                                            "description": "A representation of a honey bee",
                                            "allOf": [
                                              "circular(pet)",
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "honeyPerDay": {
                                                    "type": "number",
                                                    "description": "Average amount of honey produced per day in ounces",
                                                    "example": 3.14,
                                                    "multipleOf": 0.01
                                                  }
                                                },
                                                "required": [
                                                  "honeyPerDay"
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    "xml": {
                                      "name": "Pet"
                                    }
                                  },
                                  {
                                    "title": "tag",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "Tag ID",
                                        "allOf": [
                                          {
                                            "type": "integer",
                                            "format": "int64",
                                            "readOnly": true,
                                            "title": "Id"
                                          }
                                        ]
                                      },
                                      "name": {
                                        "description": "Tag name",
                                        "type": "string",
                                        "minLength": 1
                                      }
                                    },
                                    "xml": {
                                      "name": "Tag"
                                    }
                                  }
                                ]
                              },
                              "username": {
                                "description": "User supplied username",
                                "type": "string",
                                "minLength": 4,
                                "example": "John78"
                              },
                              "firstName": {
                                "description": "User first name",
                                "type": "string",
                                "minLength": 1,
                                "example": "John"
                              },
                              "lastName": {
                                "description": "User last name",
                                "type": "string",
                                "minLength": 1,
                                "example": "Smith"
                              },
                              "email": {
                                "description": "User email address",
                                "type": "string",
                                "format": "email",
                                "example": "john.smith@example.com"
                              },
                              "password": {
                                "type": "string",
                                "description": "User password, MUST contain a mix of upper and lower case letters, as well as digits",
                                "format": "password",
                                "minLength": 8,
                                "pattern": "/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/",
                                "example": "drowssaP123"
                              },
                              "phone": {
                                "description": "User phone number in international format",
                                "type": "string",
                                "pattern": "/^\\+(?:[0-9]-?){6,14}[0-9]$/",
                                "example": "+1-202-555-0192"
                              },
                              "userStatus": {
                                "description": "User status",
                                "type": "integer",
                                "format": "int32"
                              }
                            },
                            "xml": {
                              "name": "User"
                            },
                            "title": "User"
                          }
                        }
                      }
                    },
                    "description": "List of user object",
                    "required": true
                  },
                  "method": "post",
                  "path": "/user/createWithArray",
                  "servers": [
                    {
                      "url": "https://petstore.swagger.io/v2",
                      "description": "Default server"
                    },
                    {
                      "url": "https://petstore.swagger.io/sandbox",
                      "description": "Sandbox server"
                    }
                  ],
                  "securitySchemes": {
                    "petstore_auth": {
                      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
                      "type": "oauth2",
                      "flows": {
                        "implicit": {
                          "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
                          "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
                      "type": "apiKey",
                      "name": "api_key",
                      "in": "header"
                    }
                  },
                  "jsonRequestBodyExample": [
                    {
                      "pet": {
                        "category": {
                          "name": "string",
                          "sub": {
                            "prop1": "string"
                          }
                        },
                        "name": "Guru",
                        "photoUrls": [
                          "string"
                        ],
                        "friend": {},
                        "tags": [
                          {
                            "name": "string"
                          }
                        ],
                        "status": "available",
                        "petType": {
                          "huntingSkill": "adventurous"
                        }
                      },
                      "username": "John78",
                      "firstName": "John",
                      "lastName": "Smith",
                      "email": "john.smith@example.com",
                      "password": "drowssaP123",
                      "phone": "+1-202-555-0192",
                      "userStatus": 0
                    }
                  ],
                  "info": {
                    "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
                    "version": "2.0.0",
                    "title": "Swagger Petstore YAML",
                    "termsOfService": "http://swagger.io/terms/",
                    "contact": {
                      "name": "API Support",
                      "email": "apiteam@swagger.io",
                      "url": "https://github.com/Redocly/redoc"
                    },
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    }
                  },
                  "postman": {
                    "name": "Creates list of users with given input array",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "\"\"",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  }
                },
                "sidebar_class_name": "post api-method",
                "info_path": "docs/petstore/swagger-petstore-yaml",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Create user",
                "permalink": "/OpenLeakedDocs/docs/petstore/create-user"
              },
              "next": {
                "title": "Creates list of users with given input list",
                "permalink": "/OpenLeakedDocs/docs/petstore/create-users-with-list-input"
              }
            },
            {
              "unversionedId": "petstore/create-users-with-list-input",
              "id": "petstore/create-users-with-list-input",
              "title": "Creates list of users with given input list",
              "description": "",
              "source": "@site/docs/petstore/create-users-with-list-input.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/create-users-with-list-input",
              "permalink": "/OpenLeakedDocs/docs/petstore/create-users-with-list-input",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "create-users-with-list-input",
                "title": "Creates list of users with given input list",
                "description": "",
                "sidebar_label": "Creates list of users with given input list",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "user"
                  ],
                  "description": "",
                  "operationId": "createUsersWithListInput",
                  "responses": {
                    "default": {
                      "description": "successful operation"
                    }
                  },
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true,
                                "title": "Id"
                              },
                              "pet": {
                                "oneOf": [
                                  {
                                    "title": "pet",
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "photoUrls"
                                    ],
                                    "discriminator": {
                                      "propertyName": "petType",
                                      "mapping": {
                                        "cat": {
                                          "title": "cat",
                                          "description": "A representation of a cat",
                                          "allOf": [
                                            "circular(pet)",
                                            {
                                              "type": "object",
                                              "properties": {
                                                "huntingSkill": {
                                                  "type": "string",
                                                  "description": "The measured skill for hunting",
                                                  "default": "lazy",
                                                  "example": "adventurous",
                                                  "enum": [
                                                    "clueless",
                                                    "lazy",
                                                    "adventurous",
                                                    "aggressive"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "huntingSkill"
                                              ]
                                            }
                                          ]
                                        },
                                        "dog": {
                                          "title": "dog",
                                          "description": "A representation of a dog",
                                          "allOf": [
                                            "circular(pet)",
                                            {
                                              "type": "object",
                                              "properties": {
                                                "packSize": {
                                                  "type": "integer",
                                                  "format": "int32",
                                                  "description": "The size of the pack the dog is from",
                                                  "default": 1,
                                                  "minimum": 1
                                                }
                                              },
                                              "required": [
                                                "packSize"
                                              ]
                                            }
                                          ]
                                        },
                                        "bee": {
                                          "title": "bee",
                                          "description": "A representation of a honey bee",
                                          "allOf": [
                                            "circular(pet)",
                                            {
                                              "type": "object",
                                              "properties": {
                                                "honeyPerDay": {
                                                  "type": "number",
                                                  "description": "Average amount of honey produced per day in ounces",
                                                  "example": 3.14,
                                                  "multipleOf": 0.01
                                                }
                                              },
                                              "required": [
                                                "honeyPerDay"
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "properties": {
                                      "id": {
                                        "externalDocs": {
                                          "description": "Find more info here",
                                          "url": "https://example.com"
                                        },
                                        "description": "Pet ID",
                                        "allOf": [
                                          {
                                            "type": "integer",
                                            "format": "int64",
                                            "readOnly": true,
                                            "title": "Id"
                                          }
                                        ]
                                      },
                                      "category": {
                                        "description": "Categories this pet belongs to",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "description": "Category ID",
                                                "allOf": [
                                                  {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "readOnly": true,
                                                    "title": "Id"
                                                  }
                                                ]
                                              },
                                              "name": {
                                                "description": "Category name",
                                                "type": "string",
                                                "minLength": 1
                                              },
                                              "sub": {
                                                "description": "Test Sub Category",
                                                "type": "object",
                                                "properties": {
                                                  "prop1": {
                                                    "type": "string",
                                                    "description": "Dumb Property"
                                                  }
                                                }
                                              }
                                            },
                                            "xml": {
                                              "name": "Category"
                                            },
                                            "title": "Category"
                                          }
                                        ]
                                      },
                                      "name": {
                                        "description": "The name given to a pet",
                                        "type": "string",
                                        "example": "Guru"
                                      },
                                      "photoUrls": {
                                        "description": "The list of URL to a cute photos featuring pet",
                                        "type": "array",
                                        "maxItems": 20,
                                        "xml": {
                                          "name": "photoUrl",
                                          "wrapped": true
                                        },
                                        "items": {
                                          "type": "string",
                                          "format": "url"
                                        }
                                      },
                                      "friend": {
                                        "allOf": [
                                          "circular(pet)"
                                        ]
                                      },
                                      "tags": {
                                        "description": "Tags attached to the pet",
                                        "type": "array",
                                        "minItems": 1,
                                        "xml": {
                                          "name": "tag",
                                          "wrapped": true
                                        },
                                        "items": {
                                          "title": "tag",
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "description": "Tag ID",
                                              "allOf": [
                                                {
                                                  "type": "integer",
                                                  "format": "int64",
                                                  "readOnly": true,
                                                  "title": "Id"
                                                }
                                              ]
                                            },
                                            "name": {
                                              "description": "Tag name",
                                              "type": "string",
                                              "minLength": 1
                                            }
                                          },
                                          "xml": {
                                            "name": "Tag"
                                          }
                                        }
                                      },
                                      "status": {
                                        "type": "string",
                                        "description": "Pet status in the store",
                                        "enum": [
                                          "available",
                                          "pending",
                                          "sold"
                                        ]
                                      },
                                      "petType": {
                                        "description": "Type of a pet",
                                        "type": "string",
                                        "oneOf": [
                                          {
                                            "title": "cat",
                                            "description": "A representation of a cat",
                                            "allOf": [
                                              "circular(pet)",
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "huntingSkill": {
                                                    "type": "string",
                                                    "description": "The measured skill for hunting",
                                                    "default": "lazy",
                                                    "example": "adventurous",
                                                    "enum": [
                                                      "clueless",
                                                      "lazy",
                                                      "adventurous",
                                                      "aggressive"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "huntingSkill"
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "title": "dog",
                                            "description": "A representation of a dog",
                                            "allOf": [
                                              "circular(pet)",
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "packSize": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "The size of the pack the dog is from",
                                                    "default": 1,
                                                    "minimum": 1
                                                  }
                                                },
                                                "required": [
                                                  "packSize"
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "title": "bee",
                                            "description": "A representation of a honey bee",
                                            "allOf": [
                                              "circular(pet)",
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "honeyPerDay": {
                                                    "type": "number",
                                                    "description": "Average amount of honey produced per day in ounces",
                                                    "example": 3.14,
                                                    "multipleOf": 0.01
                                                  }
                                                },
                                                "required": [
                                                  "honeyPerDay"
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    "xml": {
                                      "name": "Pet"
                                    }
                                  },
                                  {
                                    "title": "tag",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "Tag ID",
                                        "allOf": [
                                          {
                                            "type": "integer",
                                            "format": "int64",
                                            "readOnly": true,
                                            "title": "Id"
                                          }
                                        ]
                                      },
                                      "name": {
                                        "description": "Tag name",
                                        "type": "string",
                                        "minLength": 1
                                      }
                                    },
                                    "xml": {
                                      "name": "Tag"
                                    }
                                  }
                                ]
                              },
                              "username": {
                                "description": "User supplied username",
                                "type": "string",
                                "minLength": 4,
                                "example": "John78"
                              },
                              "firstName": {
                                "description": "User first name",
                                "type": "string",
                                "minLength": 1,
                                "example": "John"
                              },
                              "lastName": {
                                "description": "User last name",
                                "type": "string",
                                "minLength": 1,
                                "example": "Smith"
                              },
                              "email": {
                                "description": "User email address",
                                "type": "string",
                                "format": "email",
                                "example": "john.smith@example.com"
                              },
                              "password": {
                                "type": "string",
                                "description": "User password, MUST contain a mix of upper and lower case letters, as well as digits",
                                "format": "password",
                                "minLength": 8,
                                "pattern": "/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/",
                                "example": "drowssaP123"
                              },
                              "phone": {
                                "description": "User phone number in international format",
                                "type": "string",
                                "pattern": "/^\\+(?:[0-9]-?){6,14}[0-9]$/",
                                "example": "+1-202-555-0192"
                              },
                              "userStatus": {
                                "description": "User status",
                                "type": "integer",
                                "format": "int32"
                              }
                            },
                            "xml": {
                              "name": "User"
                            },
                            "title": "User"
                          }
                        }
                      }
                    },
                    "description": "List of user object",
                    "required": true
                  },
                  "method": "post",
                  "path": "/user/createWithList",
                  "servers": [
                    {
                      "url": "https://petstore.swagger.io/v2",
                      "description": "Default server"
                    },
                    {
                      "url": "https://petstore.swagger.io/sandbox",
                      "description": "Sandbox server"
                    }
                  ],
                  "securitySchemes": {
                    "petstore_auth": {
                      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
                      "type": "oauth2",
                      "flows": {
                        "implicit": {
                          "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
                          "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
                      "type": "apiKey",
                      "name": "api_key",
                      "in": "header"
                    }
                  },
                  "jsonRequestBodyExample": [
                    {
                      "pet": {
                        "category": {
                          "name": "string",
                          "sub": {
                            "prop1": "string"
                          }
                        },
                        "name": "Guru",
                        "photoUrls": [
                          "string"
                        ],
                        "friend": {},
                        "tags": [
                          {
                            "name": "string"
                          }
                        ],
                        "status": "available",
                        "petType": {
                          "huntingSkill": "adventurous"
                        }
                      },
                      "username": "John78",
                      "firstName": "John",
                      "lastName": "Smith",
                      "email": "john.smith@example.com",
                      "password": "drowssaP123",
                      "phone": "+1-202-555-0192",
                      "userStatus": 0
                    }
                  ],
                  "info": {
                    "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
                    "version": "2.0.0",
                    "title": "Swagger Petstore YAML",
                    "termsOfService": "http://swagger.io/terms/",
                    "contact": {
                      "name": "API Support",
                      "email": "apiteam@swagger.io",
                      "url": "https://github.com/Redocly/redoc"
                    },
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    }
                  },
                  "postman": {
                    "name": "Creates list of users with given input list",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "\"\"",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  }
                },
                "sidebar_class_name": "post api-method",
                "info_path": "docs/petstore/swagger-petstore-yaml",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Creates list of users with given input array",
                "permalink": "/OpenLeakedDocs/docs/petstore/create-users-with-array-input"
              },
              "next": {
                "title": "Delete purchase order by ID",
                "permalink": "/OpenLeakedDocs/docs/petstore/delete-order"
              }
            },
            {
              "unversionedId": "petstore/delete-order",
              "id": "petstore/delete-order",
              "title": "Delete purchase order by ID",
              "description": "For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors",
              "source": "@site/docs/petstore/delete-order.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/delete-order",
              "permalink": "/OpenLeakedDocs/docs/petstore/delete-order",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "delete-order",
                "title": "Delete purchase order by ID",
                "description": "For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors",
                "sidebar_label": "Delete purchase order by ID",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "store"
                  ],
                  "description": "For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors",
                  "operationId": "deleteOrder",
                  "parameters": [
                    {
                      "name": "orderId",
                      "in": "path",
                      "description": "ID of the order that needs to be deleted",
                      "required": true,
                      "schema": {
                        "type": "string",
                        "minimum": 1
                      }
                    }
                  ],
                  "responses": {
                    "400": {
                      "description": "Invalid ID supplied"
                    },
                    "404": {
                      "description": "Order not found"
                    }
                  },
                  "method": "delete",
                  "path": "/store/order/{orderId}",
                  "servers": [
                    {
                      "url": "https://petstore.swagger.io/v2",
                      "description": "Default server"
                    },
                    {
                      "url": "https://petstore.swagger.io/sandbox",
                      "description": "Sandbox server"
                    }
                  ],
                  "securitySchemes": {
                    "petstore_auth": {
                      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
                      "type": "oauth2",
                      "flows": {
                        "implicit": {
                          "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
                          "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
                      "type": "apiKey",
                      "name": "api_key",
                      "in": "header"
                    }
                  },
                  "info": {
                    "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
                    "version": "2.0.0",
                    "title": "Swagger Petstore YAML",
                    "termsOfService": "http://swagger.io/terms/",
                    "contact": {
                      "name": "API Support",
                      "email": "apiteam@swagger.io",
                      "url": "https://github.com/Redocly/redoc"
                    },
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    }
                  },
                  "postman": {
                    "name": "Delete purchase order by ID",
                    "description": {
                      "content": "For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ID of the order that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE"
                  }
                },
                "sidebar_class_name": "delete api-method",
                "info_path": "docs/petstore/swagger-petstore-yaml",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Creates list of users with given input list",
                "permalink": "/OpenLeakedDocs/docs/petstore/create-users-with-list-input"
              },
              "next": {
                "title": "Deletes a pet",
                "permalink": "/OpenLeakedDocs/docs/petstore/delete-pet"
              }
            },
            {
              "unversionedId": "petstore/delete-pet",
              "id": "petstore/delete-pet",
              "title": "Deletes a pet",
              "description": "",
              "source": "@site/docs/petstore/delete-pet.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/delete-pet",
              "permalink": "/OpenLeakedDocs/docs/petstore/delete-pet",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "delete-pet",
                "title": "Deletes a pet",
                "description": "",
                "sidebar_label": "Deletes a pet",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "pet"
                  ],
                  "description": "",
                  "operationId": "deletePet",
                  "parameters": [
                    {
                      "name": "api_key",
                      "in": "header",
                      "required": false,
                      "schema": {
                        "type": "string"
                      },
                      "example": "Bearer <TOKEN>"
                    },
                    {
                      "name": "petId",
                      "in": "path",
                      "description": "Pet id to delete",
                      "required": true,
                      "schema": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  ],
                  "responses": {
                    "400": {
                      "description": "Invalid pet value"
                    }
                  },
                  "security": [
                    {
                      "petstore_auth": [
                        "write:pets",
                        "read:pets"
                      ]
                    }
                  ],
                  "method": "delete",
                  "path": "/pet/{petId}",
                  "servers": [
                    {
                      "url": "https://petstore.swagger.io/v2",
                      "description": "Default server"
                    },
                    {
                      "url": "https://petstore.swagger.io/sandbox",
                      "description": "Sandbox server"
                    }
                  ],
                  "securitySchemes": {
                    "petstore_auth": {
                      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
                      "type": "oauth2",
                      "flows": {
                        "implicit": {
                          "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
                          "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
                      "type": "apiKey",
                      "name": "api_key",
                      "in": "header"
                    }
                  },
                  "info": {
                    "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
                    "version": "2.0.0",
                    "title": "Swagger Petstore YAML",
                    "termsOfService": "http://swagger.io/terms/",
                    "contact": {
                      "name": "API Support",
                      "email": "apiteam@swagger.io",
                      "url": "https://github.com/Redocly/redoc"
                    },
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    }
                  },
                  "postman": {
                    "name": "Deletes a pet",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  }
                },
                "sidebar_class_name": "delete api-method",
                "info_path": "docs/petstore/swagger-petstore-yaml",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Delete purchase order by ID",
                "permalink": "/OpenLeakedDocs/docs/petstore/delete-order"
              },
              "next": {
                "title": "Delete user",
                "permalink": "/OpenLeakedDocs/docs/petstore/delete-user"
              }
            },
            {
              "unversionedId": "petstore/delete-user",
              "id": "petstore/delete-user",
              "title": "Delete user",
              "description": "This can only be done by the logged in user.",
              "source": "@site/docs/petstore/delete-user.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/delete-user",
              "permalink": "/OpenLeakedDocs/docs/petstore/delete-user",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "delete-user",
                "title": "Delete user",
                "description": "This can only be done by the logged in user.",
                "sidebar_label": "Delete user",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "user"
                  ],
                  "description": "This can only be done by the logged in user.",
                  "operationId": "deleteUser",
                  "parameters": [
                    {
                      "name": "username",
                      "in": "path",
                      "description": "The name that needs to be deleted",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "400": {
                      "description": "Invalid username supplied"
                    },
                    "404": {
                      "description": "User not found"
                    }
                  },
                  "method": "delete",
                  "path": "/user/{username}",
                  "servers": [
                    {
                      "url": "https://petstore.swagger.io/v2",
                      "description": "Default server"
                    },
                    {
                      "url": "https://petstore.swagger.io/sandbox",
                      "description": "Sandbox server"
                    }
                  ],
                  "securitySchemes": {
                    "petstore_auth": {
                      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
                      "type": "oauth2",
                      "flows": {
                        "implicit": {
                          "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
                          "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
                      "type": "apiKey",
                      "name": "api_key",
                      "in": "header"
                    }
                  },
                  "info": {
                    "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
                    "version": "2.0.0",
                    "title": "Swagger Petstore YAML",
                    "termsOfService": "http://swagger.io/terms/",
                    "contact": {
                      "name": "API Support",
                      "email": "apiteam@swagger.io",
                      "url": "https://github.com/Redocly/redoc"
                    },
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    }
                  },
                  "postman": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  }
                },
                "sidebar_class_name": "delete api-method",
                "info_path": "docs/petstore/swagger-petstore-yaml",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Deletes a pet",
                "permalink": "/OpenLeakedDocs/docs/petstore/delete-pet"
              },
              "next": {
                "title": "Finds Pets by status",
                "permalink": "/OpenLeakedDocs/docs/petstore/find-pets-by-status"
              }
            },
            {
              "unversionedId": "petstore/find-pets-by-status",
              "id": "petstore/find-pets-by-status",
              "title": "Finds Pets by status",
              "description": "Multiple status values can be provided with comma separated strings",
              "source": "@site/docs/petstore/find-pets-by-status.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/find-pets-by-status",
              "permalink": "/OpenLeakedDocs/docs/petstore/find-pets-by-status",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "find-pets-by-status",
                "title": "Finds Pets by status",
                "description": "Multiple status values can be provided with comma separated strings",
                "sidebar_label": "Finds Pets by status",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "pet"
                  ],
                  "description": "Multiple status values can be provided with comma separated strings",
                  "operationId": "findPetsByStatus",
                  "parameters": [
                    {
                      "name": "status",
                      "in": "query",
                      "description": "Status values that need to be considered for filter",
                      "required": true,
                      "style": "form",
                      "schema": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 3,
                        "items": {
                          "type": "string",
                          "enum": [
                            "available",
                            "pending",
                            "sold"
                          ],
                          "default": "available"
                        }
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "successful operation",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "array",
                            "items": {
                              "title": "pet",
                              "type": "object",
                              "required": [
                                "name",
                                "photoUrls"
                              ],
                              "discriminator": {
                                "propertyName": "petType",
                                "mapping": {
                                  "cat": {
                                    "title": "cat",
                                    "description": "A representation of a cat",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "huntingSkill": {
                                            "type": "string",
                                            "description": "The measured skill for hunting",
                                            "default": "lazy",
                                            "example": "adventurous",
                                            "enum": [
                                              "clueless",
                                              "lazy",
                                              "adventurous",
                                              "aggressive"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "huntingSkill"
                                        ]
                                      }
                                    ]
                                  },
                                  "dog": {
                                    "title": "dog",
                                    "description": "A representation of a dog",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "packSize": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The size of the pack the dog is from",
                                            "default": 1,
                                            "minimum": 1
                                          }
                                        },
                                        "required": [
                                          "packSize"
                                        ]
                                      }
                                    ]
                                  },
                                  "bee": {
                                    "title": "bee",
                                    "description": "A representation of a honey bee",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "honeyPerDay": {
                                            "type": "number",
                                            "description": "Average amount of honey produced per day in ounces",
                                            "example": 3.14,
                                            "multipleOf": 0.01
                                          }
                                        },
                                        "required": [
                                          "honeyPerDay"
                                        ]
                                      }
                                    ]
                                  }
                                }
                              },
                              "properties": {
                                "id": {
                                  "externalDocs": {
                                    "description": "Find more info here",
                                    "url": "https://example.com"
                                  },
                                  "description": "Pet ID",
                                  "allOf": [
                                    {
                                      "type": "integer",
                                      "format": "int64",
                                      "readOnly": true,
                                      "title": "Id"
                                    }
                                  ]
                                },
                                "category": {
                                  "description": "Categories this pet belongs to",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "Category ID",
                                          "allOf": [
                                            {
                                              "type": "integer",
                                              "format": "int64",
                                              "readOnly": true,
                                              "title": "Id"
                                            }
                                          ]
                                        },
                                        "name": {
                                          "description": "Category name",
                                          "type": "string",
                                          "minLength": 1
                                        },
                                        "sub": {
                                          "description": "Test Sub Category",
                                          "type": "object",
                                          "properties": {
                                            "prop1": {
                                              "type": "string",
                                              "description": "Dumb Property"
                                            }
                                          }
                                        }
                                      },
                                      "xml": {
                                        "name": "Category"
                                      },
                                      "title": "Category"
                                    }
                                  ]
                                },
                                "name": {
                                  "description": "The name given to a pet",
                                  "type": "string",
                                  "example": "Guru"
                                },
                                "photoUrls": {
                                  "description": "The list of URL to a cute photos featuring pet",
                                  "type": "array",
                                  "maxItems": 20,
                                  "xml": {
                                    "name": "photoUrl",
                                    "wrapped": true
                                  },
                                  "items": {
                                    "type": "string",
                                    "format": "url"
                                  }
                                },
                                "friend": {
                                  "allOf": [
                                    "circular(pet)"
                                  ]
                                },
                                "tags": {
                                  "description": "Tags attached to the pet",
                                  "type": "array",
                                  "minItems": 1,
                                  "xml": {
                                    "name": "tag",
                                    "wrapped": true
                                  },
                                  "items": {
                                    "title": "tag",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "Tag ID",
                                        "allOf": [
                                          {
                                            "type": "integer",
                                            "format": "int64",
                                            "readOnly": true,
                                            "title": "Id"
                                          }
                                        ]
                                      },
                                      "name": {
                                        "description": "Tag name",
                                        "type": "string",
                                        "minLength": 1
                                      }
                                    },
                                    "xml": {
                                      "name": "Tag"
                                    }
                                  }
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Pet status in the store",
                                  "enum": [
                                    "available",
                                    "pending",
                                    "sold"
                                  ]
                                },
                                "petType": {
                                  "description": "Type of a pet",
                                  "type": "string",
                                  "oneOf": [
                                    {
                                      "title": "cat",
                                      "description": "A representation of a cat",
                                      "allOf": [
                                        "circular(pet)",
                                        {
                                          "type": "object",
                                          "properties": {
                                            "huntingSkill": {
                                              "type": "string",
                                              "description": "The measured skill for hunting",
                                              "default": "lazy",
                                              "example": "adventurous",
                                              "enum": [
                                                "clueless",
                                                "lazy",
                                                "adventurous",
                                                "aggressive"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "huntingSkill"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "title": "dog",
                                      "description": "A representation of a dog",
                                      "allOf": [
                                        "circular(pet)",
                                        {
                                          "type": "object",
                                          "properties": {
                                            "packSize": {
                                              "type": "integer",
                                              "format": "int32",
                                              "description": "The size of the pack the dog is from",
                                              "default": 1,
                                              "minimum": 1
                                            }
                                          },
                                          "required": [
                                            "packSize"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "title": "bee",
                                      "description": "A representation of a honey bee",
                                      "allOf": [
                                        "circular(pet)",
                                        {
                                          "type": "object",
                                          "properties": {
                                            "honeyPerDay": {
                                              "type": "number",
                                              "description": "Average amount of honey produced per day in ounces",
                                              "example": 3.14,
                                              "multipleOf": 0.01
                                            }
                                          },
                                          "required": [
                                            "honeyPerDay"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              "xml": {
                                "name": "Pet"
                              }
                            }
                          }
                        },
                        "application/xml": {
                          "schema": {
                            "type": "array",
                            "items": {
                              "title": "pet",
                              "type": "object",
                              "required": [
                                "name",
                                "photoUrls"
                              ],
                              "discriminator": {
                                "propertyName": "petType",
                                "mapping": {
                                  "cat": {
                                    "title": "cat",
                                    "description": "A representation of a cat",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "huntingSkill": {
                                            "type": "string",
                                            "description": "The measured skill for hunting",
                                            "default": "lazy",
                                            "example": "adventurous",
                                            "enum": [
                                              "clueless",
                                              "lazy",
                                              "adventurous",
                                              "aggressive"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "huntingSkill"
                                        ]
                                      }
                                    ]
                                  },
                                  "dog": {
                                    "title": "dog",
                                    "description": "A representation of a dog",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "packSize": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The size of the pack the dog is from",
                                            "default": 1,
                                            "minimum": 1
                                          }
                                        },
                                        "required": [
                                          "packSize"
                                        ]
                                      }
                                    ]
                                  },
                                  "bee": {
                                    "title": "bee",
                                    "description": "A representation of a honey bee",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "honeyPerDay": {
                                            "type": "number",
                                            "description": "Average amount of honey produced per day in ounces",
                                            "example": 3.14,
                                            "multipleOf": 0.01
                                          }
                                        },
                                        "required": [
                                          "honeyPerDay"
                                        ]
                                      }
                                    ]
                                  }
                                }
                              },
                              "properties": {
                                "id": {
                                  "externalDocs": {
                                    "description": "Find more info here",
                                    "url": "https://example.com"
                                  },
                                  "description": "Pet ID",
                                  "allOf": [
                                    {
                                      "type": "integer",
                                      "format": "int64",
                                      "readOnly": true,
                                      "title": "Id"
                                    }
                                  ]
                                },
                                "category": {
                                  "description": "Categories this pet belongs to",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "Category ID",
                                          "allOf": [
                                            {
                                              "type": "integer",
                                              "format": "int64",
                                              "readOnly": true,
                                              "title": "Id"
                                            }
                                          ]
                                        },
                                        "name": {
                                          "description": "Category name",
                                          "type": "string",
                                          "minLength": 1
                                        },
                                        "sub": {
                                          "description": "Test Sub Category",
                                          "type": "object",
                                          "properties": {
                                            "prop1": {
                                              "type": "string",
                                              "description": "Dumb Property"
                                            }
                                          }
                                        }
                                      },
                                      "xml": {
                                        "name": "Category"
                                      },
                                      "title": "Category"
                                    }
                                  ]
                                },
                                "name": {
                                  "description": "The name given to a pet",
                                  "type": "string",
                                  "example": "Guru"
                                },
                                "photoUrls": {
                                  "description": "The list of URL to a cute photos featuring pet",
                                  "type": "array",
                                  "maxItems": 20,
                                  "xml": {
                                    "name": "photoUrl",
                                    "wrapped": true
                                  },
                                  "items": {
                                    "type": "string",
                                    "format": "url"
                                  }
                                },
                                "friend": {
                                  "allOf": [
                                    "circular(pet)"
                                  ]
                                },
                                "tags": {
                                  "description": "Tags attached to the pet",
                                  "type": "array",
                                  "minItems": 1,
                                  "xml": {
                                    "name": "tag",
                                    "wrapped": true
                                  },
                                  "items": {
                                    "title": "tag",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "Tag ID",
                                        "allOf": [
                                          {
                                            "type": "integer",
                                            "format": "int64",
                                            "readOnly": true,
                                            "title": "Id"
                                          }
                                        ]
                                      },
                                      "name": {
                                        "description": "Tag name",
                                        "type": "string",
                                        "minLength": 1
                                      }
                                    },
                                    "xml": {
                                      "name": "Tag"
                                    }
                                  }
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Pet status in the store",
                                  "enum": [
                                    "available",
                                    "pending",
                                    "sold"
                                  ]
                                },
                                "petType": {
                                  "description": "Type of a pet",
                                  "type": "string",
                                  "oneOf": [
                                    {
                                      "title": "cat",
                                      "description": "A representation of a cat",
                                      "allOf": [
                                        "circular(pet)",
                                        {
                                          "type": "object",
                                          "properties": {
                                            "huntingSkill": {
                                              "type": "string",
                                              "description": "The measured skill for hunting",
                                              "default": "lazy",
                                              "example": "adventurous",
                                              "enum": [
                                                "clueless",
                                                "lazy",
                                                "adventurous",
                                                "aggressive"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "huntingSkill"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "title": "dog",
                                      "description": "A representation of a dog",
                                      "allOf": [
                                        "circular(pet)",
                                        {
                                          "type": "object",
                                          "properties": {
                                            "packSize": {
                                              "type": "integer",
                                              "format": "int32",
                                              "description": "The size of the pack the dog is from",
                                              "default": 1,
                                              "minimum": 1
                                            }
                                          },
                                          "required": [
                                            "packSize"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "title": "bee",
                                      "description": "A representation of a honey bee",
                                      "allOf": [
                                        "circular(pet)",
                                        {
                                          "type": "object",
                                          "properties": {
                                            "honeyPerDay": {
                                              "type": "number",
                                              "description": "Average amount of honey produced per day in ounces",
                                              "example": 3.14,
                                              "multipleOf": 0.01
                                            }
                                          },
                                          "required": [
                                            "honeyPerDay"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              "xml": {
                                "name": "Pet"
                              }
                            }
                          }
                        }
                      }
                    },
                    "400": {
                      "description": "Invalid status value"
                    }
                  },
                  "security": [
                    {
                      "petstore_auth": [
                        "write:pets",
                        "read:pets"
                      ]
                    }
                  ],
                  "method": "get",
                  "path": "/pet/findByStatus",
                  "servers": [
                    {
                      "url": "https://petstore.swagger.io/v2",
                      "description": "Default server"
                    },
                    {
                      "url": "https://petstore.swagger.io/sandbox",
                      "description": "Sandbox server"
                    }
                  ],
                  "securitySchemes": {
                    "petstore_auth": {
                      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
                      "type": "oauth2",
                      "flows": {
                        "implicit": {
                          "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
                          "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
                      "type": "apiKey",
                      "name": "api_key",
                      "in": "header"
                    }
                  },
                  "info": {
                    "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
                    "version": "2.0.0",
                    "title": "Swagger Petstore YAML",
                    "termsOfService": "http://swagger.io/terms/",
                    "contact": {
                      "name": "API Support",
                      "email": "apiteam@swagger.io",
                      "url": "https://github.com/Redocly/redoc"
                    },
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    }
                  },
                  "postman": {
                    "name": "Finds Pets by status",
                    "description": {
                      "content": "Multiple status values can be provided with comma separated strings",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) Status values that need to be considered for filter",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": ""
                        }
                      ],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/swagger-petstore-yaml",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Delete user",
                "permalink": "/OpenLeakedDocs/docs/petstore/delete-user"
              },
              "next": {
                "title": "Finds Pets by tags",
                "permalink": "/OpenLeakedDocs/docs/petstore/find-pets-by-tags"
              }
            },
            {
              "unversionedId": "petstore/find-pets-by-tags",
              "id": "petstore/find-pets-by-tags",
              "title": "Finds Pets by tags",
              "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
              "source": "@site/docs/petstore/find-pets-by-tags.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/find-pets-by-tags",
              "permalink": "/OpenLeakedDocs/docs/petstore/find-pets-by-tags",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "find-pets-by-tags",
                "title": "Finds Pets by tags",
                "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
                "sidebar_label": "Finds Pets by tags",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "pet"
                  ],
                  "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
                  "operationId": "findPetsByTags",
                  "deprecated": true,
                  "parameters": [
                    {
                      "name": "tags",
                      "in": "query",
                      "description": "Tags to filter by",
                      "required": true,
                      "style": "form",
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "successful operation",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "array",
                            "items": {
                              "title": "pet",
                              "type": "object",
                              "required": [
                                "name",
                                "photoUrls"
                              ],
                              "discriminator": {
                                "propertyName": "petType",
                                "mapping": {
                                  "cat": {
                                    "title": "cat",
                                    "description": "A representation of a cat",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "huntingSkill": {
                                            "type": "string",
                                            "description": "The measured skill for hunting",
                                            "default": "lazy",
                                            "example": "adventurous",
                                            "enum": [
                                              "clueless",
                                              "lazy",
                                              "adventurous",
                                              "aggressive"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "huntingSkill"
                                        ]
                                      }
                                    ]
                                  },
                                  "dog": {
                                    "title": "dog",
                                    "description": "A representation of a dog",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "packSize": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The size of the pack the dog is from",
                                            "default": 1,
                                            "minimum": 1
                                          }
                                        },
                                        "required": [
                                          "packSize"
                                        ]
                                      }
                                    ]
                                  },
                                  "bee": {
                                    "title": "bee",
                                    "description": "A representation of a honey bee",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "honeyPerDay": {
                                            "type": "number",
                                            "description": "Average amount of honey produced per day in ounces",
                                            "example": 3.14,
                                            "multipleOf": 0.01
                                          }
                                        },
                                        "required": [
                                          "honeyPerDay"
                                        ]
                                      }
                                    ]
                                  }
                                }
                              },
                              "properties": {
                                "id": {
                                  "externalDocs": {
                                    "description": "Find more info here",
                                    "url": "https://example.com"
                                  },
                                  "description": "Pet ID",
                                  "allOf": [
                                    {
                                      "type": "integer",
                                      "format": "int64",
                                      "readOnly": true,
                                      "title": "Id"
                                    }
                                  ]
                                },
                                "category": {
                                  "description": "Categories this pet belongs to",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "Category ID",
                                          "allOf": [
                                            {
                                              "type": "integer",
                                              "format": "int64",
                                              "readOnly": true,
                                              "title": "Id"
                                            }
                                          ]
                                        },
                                        "name": {
                                          "description": "Category name",
                                          "type": "string",
                                          "minLength": 1
                                        },
                                        "sub": {
                                          "description": "Test Sub Category",
                                          "type": "object",
                                          "properties": {
                                            "prop1": {
                                              "type": "string",
                                              "description": "Dumb Property"
                                            }
                                          }
                                        }
                                      },
                                      "xml": {
                                        "name": "Category"
                                      },
                                      "title": "Category"
                                    }
                                  ]
                                },
                                "name": {
                                  "description": "The name given to a pet",
                                  "type": "string",
                                  "example": "Guru"
                                },
                                "photoUrls": {
                                  "description": "The list of URL to a cute photos featuring pet",
                                  "type": "array",
                                  "maxItems": 20,
                                  "xml": {
                                    "name": "photoUrl",
                                    "wrapped": true
                                  },
                                  "items": {
                                    "type": "string",
                                    "format": "url"
                                  }
                                },
                                "friend": {
                                  "allOf": [
                                    "circular(pet)"
                                  ]
                                },
                                "tags": {
                                  "description": "Tags attached to the pet",
                                  "type": "array",
                                  "minItems": 1,
                                  "xml": {
                                    "name": "tag",
                                    "wrapped": true
                                  },
                                  "items": {
                                    "title": "tag",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "Tag ID",
                                        "allOf": [
                                          {
                                            "type": "integer",
                                            "format": "int64",
                                            "readOnly": true,
                                            "title": "Id"
                                          }
                                        ]
                                      },
                                      "name": {
                                        "description": "Tag name",
                                        "type": "string",
                                        "minLength": 1
                                      }
                                    },
                                    "xml": {
                                      "name": "Tag"
                                    }
                                  }
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Pet status in the store",
                                  "enum": [
                                    "available",
                                    "pending",
                                    "sold"
                                  ]
                                },
                                "petType": {
                                  "description": "Type of a pet",
                                  "type": "string",
                                  "oneOf": [
                                    {
                                      "title": "cat",
                                      "description": "A representation of a cat",
                                      "allOf": [
                                        "circular(pet)",
                                        {
                                          "type": "object",
                                          "properties": {
                                            "huntingSkill": {
                                              "type": "string",
                                              "description": "The measured skill for hunting",
                                              "default": "lazy",
                                              "example": "adventurous",
                                              "enum": [
                                                "clueless",
                                                "lazy",
                                                "adventurous",
                                                "aggressive"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "huntingSkill"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "title": "dog",
                                      "description": "A representation of a dog",
                                      "allOf": [
                                        "circular(pet)",
                                        {
                                          "type": "object",
                                          "properties": {
                                            "packSize": {
                                              "type": "integer",
                                              "format": "int32",
                                              "description": "The size of the pack the dog is from",
                                              "default": 1,
                                              "minimum": 1
                                            }
                                          },
                                          "required": [
                                            "packSize"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "title": "bee",
                                      "description": "A representation of a honey bee",
                                      "allOf": [
                                        "circular(pet)",
                                        {
                                          "type": "object",
                                          "properties": {
                                            "honeyPerDay": {
                                              "type": "number",
                                              "description": "Average amount of honey produced per day in ounces",
                                              "example": 3.14,
                                              "multipleOf": 0.01
                                            }
                                          },
                                          "required": [
                                            "honeyPerDay"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              "xml": {
                                "name": "Pet"
                              }
                            }
                          }
                        },
                        "application/xml": {
                          "schema": {
                            "type": "array",
                            "items": {
                              "title": "pet",
                              "type": "object",
                              "required": [
                                "name",
                                "photoUrls"
                              ],
                              "discriminator": {
                                "propertyName": "petType",
                                "mapping": {
                                  "cat": {
                                    "title": "cat",
                                    "description": "A representation of a cat",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "huntingSkill": {
                                            "type": "string",
                                            "description": "The measured skill for hunting",
                                            "default": "lazy",
                                            "example": "adventurous",
                                            "enum": [
                                              "clueless",
                                              "lazy",
                                              "adventurous",
                                              "aggressive"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "huntingSkill"
                                        ]
                                      }
                                    ]
                                  },
                                  "dog": {
                                    "title": "dog",
                                    "description": "A representation of a dog",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "packSize": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The size of the pack the dog is from",
                                            "default": 1,
                                            "minimum": 1
                                          }
                                        },
                                        "required": [
                                          "packSize"
                                        ]
                                      }
                                    ]
                                  },
                                  "bee": {
                                    "title": "bee",
                                    "description": "A representation of a honey bee",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "honeyPerDay": {
                                            "type": "number",
                                            "description": "Average amount of honey produced per day in ounces",
                                            "example": 3.14,
                                            "multipleOf": 0.01
                                          }
                                        },
                                        "required": [
                                          "honeyPerDay"
                                        ]
                                      }
                                    ]
                                  }
                                }
                              },
                              "properties": {
                                "id": {
                                  "externalDocs": {
                                    "description": "Find more info here",
                                    "url": "https://example.com"
                                  },
                                  "description": "Pet ID",
                                  "allOf": [
                                    {
                                      "type": "integer",
                                      "format": "int64",
                                      "readOnly": true,
                                      "title": "Id"
                                    }
                                  ]
                                },
                                "category": {
                                  "description": "Categories this pet belongs to",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "Category ID",
                                          "allOf": [
                                            {
                                              "type": "integer",
                                              "format": "int64",
                                              "readOnly": true,
                                              "title": "Id"
                                            }
                                          ]
                                        },
                                        "name": {
                                          "description": "Category name",
                                          "type": "string",
                                          "minLength": 1
                                        },
                                        "sub": {
                                          "description": "Test Sub Category",
                                          "type": "object",
                                          "properties": {
                                            "prop1": {
                                              "type": "string",
                                              "description": "Dumb Property"
                                            }
                                          }
                                        }
                                      },
                                      "xml": {
                                        "name": "Category"
                                      },
                                      "title": "Category"
                                    }
                                  ]
                                },
                                "name": {
                                  "description": "The name given to a pet",
                                  "type": "string",
                                  "example": "Guru"
                                },
                                "photoUrls": {
                                  "description": "The list of URL to a cute photos featuring pet",
                                  "type": "array",
                                  "maxItems": 20,
                                  "xml": {
                                    "name": "photoUrl",
                                    "wrapped": true
                                  },
                                  "items": {
                                    "type": "string",
                                    "format": "url"
                                  }
                                },
                                "friend": {
                                  "allOf": [
                                    "circular(pet)"
                                  ]
                                },
                                "tags": {
                                  "description": "Tags attached to the pet",
                                  "type": "array",
                                  "minItems": 1,
                                  "xml": {
                                    "name": "tag",
                                    "wrapped": true
                                  },
                                  "items": {
                                    "title": "tag",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "Tag ID",
                                        "allOf": [
                                          {
                                            "type": "integer",
                                            "format": "int64",
                                            "readOnly": true,
                                            "title": "Id"
                                          }
                                        ]
                                      },
                                      "name": {
                                        "description": "Tag name",
                                        "type": "string",
                                        "minLength": 1
                                      }
                                    },
                                    "xml": {
                                      "name": "Tag"
                                    }
                                  }
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Pet status in the store",
                                  "enum": [
                                    "available",
                                    "pending",
                                    "sold"
                                  ]
                                },
                                "petType": {
                                  "description": "Type of a pet",
                                  "type": "string",
                                  "oneOf": [
                                    {
                                      "title": "cat",
                                      "description": "A representation of a cat",
                                      "allOf": [
                                        "circular(pet)",
                                        {
                                          "type": "object",
                                          "properties": {
                                            "huntingSkill": {
                                              "type": "string",
                                              "description": "The measured skill for hunting",
                                              "default": "lazy",
                                              "example": "adventurous",
                                              "enum": [
                                                "clueless",
                                                "lazy",
                                                "adventurous",
                                                "aggressive"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "huntingSkill"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "title": "dog",
                                      "description": "A representation of a dog",
                                      "allOf": [
                                        "circular(pet)",
                                        {
                                          "type": "object",
                                          "properties": {
                                            "packSize": {
                                              "type": "integer",
                                              "format": "int32",
                                              "description": "The size of the pack the dog is from",
                                              "default": 1,
                                              "minimum": 1
                                            }
                                          },
                                          "required": [
                                            "packSize"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "title": "bee",
                                      "description": "A representation of a honey bee",
                                      "allOf": [
                                        "circular(pet)",
                                        {
                                          "type": "object",
                                          "properties": {
                                            "honeyPerDay": {
                                              "type": "number",
                                              "description": "Average amount of honey produced per day in ounces",
                                              "example": 3.14,
                                              "multipleOf": 0.01
                                            }
                                          },
                                          "required": [
                                            "honeyPerDay"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              "xml": {
                                "name": "Pet"
                              }
                            }
                          }
                        }
                      }
                    },
                    "400": {
                      "description": "Invalid tag value"
                    }
                  },
                  "security": [
                    {
                      "petstore_auth": [
                        "write:pets",
                        "read:pets"
                      ]
                    }
                  ],
                  "method": "get",
                  "path": "/pet/findByTags",
                  "servers": [
                    {
                      "url": "https://petstore.swagger.io/v2",
                      "description": "Default server"
                    },
                    {
                      "url": "https://petstore.swagger.io/sandbox",
                      "description": "Sandbox server"
                    }
                  ],
                  "securitySchemes": {
                    "petstore_auth": {
                      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
                      "type": "oauth2",
                      "flows": {
                        "implicit": {
                          "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
                          "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
                      "type": "apiKey",
                      "name": "api_key",
                      "in": "header"
                    }
                  },
                  "info": {
                    "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
                    "version": "2.0.0",
                    "title": "Swagger Petstore YAML",
                    "termsOfService": "http://swagger.io/terms/",
                    "contact": {
                      "name": "API Support",
                      "email": "apiteam@swagger.io",
                      "url": "https://github.com/Redocly/redoc"
                    },
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    }
                  },
                  "postman": {
                    "name": "Finds Pets by tags",
                    "description": {
                      "content": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) Tags to filter by",
                            "type": "text/plain"
                          },
                          "key": "tags",
                          "value": ""
                        }
                      ],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/swagger-petstore-yaml",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Finds Pets by status",
                "permalink": "/OpenLeakedDocs/docs/petstore/find-pets-by-status"
              },
              "next": {
                "title": "Returns pet inventories by status",
                "permalink": "/OpenLeakedDocs/docs/petstore/get-inventory"
              }
            },
            {
              "unversionedId": "petstore/get-inventory",
              "id": "petstore/get-inventory",
              "title": "Returns pet inventories by status",
              "description": "Returns a map of status codes to quantities",
              "source": "@site/docs/petstore/get-inventory.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/get-inventory",
              "permalink": "/OpenLeakedDocs/docs/petstore/get-inventory",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "get-inventory",
                "title": "Returns pet inventories by status",
                "description": "Returns a map of status codes to quantities",
                "sidebar_label": "Returns pet inventories by status",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "store"
                  ],
                  "description": "Returns a map of status codes to quantities",
                  "operationId": "getInventory",
                  "responses": {
                    "200": {
                      "description": "successful operation",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "integer",
                              "format": "int32"
                            }
                          }
                        }
                      }
                    }
                  },
                  "security": [
                    {
                      "api_key": []
                    }
                  ],
                  "method": "get",
                  "path": "/store/inventory",
                  "servers": [
                    {
                      "url": "https://petstore.swagger.io/v2",
                      "description": "Default server"
                    },
                    {
                      "url": "https://petstore.swagger.io/sandbox",
                      "description": "Sandbox server"
                    }
                  ],
                  "securitySchemes": {
                    "petstore_auth": {
                      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
                      "type": "oauth2",
                      "flows": {
                        "implicit": {
                          "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
                          "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
                      "type": "apiKey",
                      "name": "api_key",
                      "in": "header"
                    }
                  },
                  "info": {
                    "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
                    "version": "2.0.0",
                    "title": "Swagger Petstore YAML",
                    "termsOfService": "http://swagger.io/terms/",
                    "contact": {
                      "name": "API Support",
                      "email": "apiteam@swagger.io",
                      "url": "https://github.com/Redocly/redoc"
                    },
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    }
                  },
                  "postman": {
                    "name": "Returns pet inventories by status",
                    "description": {
                      "content": "Returns a map of status codes to quantities",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "inventory"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "type": "any",
                          "value": "api_key",
                          "key": "key"
                        },
                        {
                          "type": "any",
                          "value": "<API Key>",
                          "key": "value"
                        },
                        {
                          "type": "any",
                          "value": "header",
                          "key": "in"
                        }
                      ]
                    }
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/swagger-petstore-yaml",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Finds Pets by tags",
                "permalink": "/OpenLeakedDocs/docs/petstore/find-pets-by-tags"
              },
              "next": {
                "title": "Find purchase order by ID",
                "permalink": "/OpenLeakedDocs/docs/petstore/get-order-by-id"
              }
            },
            {
              "unversionedId": "petstore/get-order-by-id",
              "id": "petstore/get-order-by-id",
              "title": "Find purchase order by ID",
              "description": "For valid response try integer IDs with value <= 5 or > 10. Other values will generated exceptions",
              "source": "@site/docs/petstore/get-order-by-id.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/get-order-by-id",
              "permalink": "/OpenLeakedDocs/docs/petstore/get-order-by-id",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "get-order-by-id",
                "title": "Find purchase order by ID",
                "description": "For valid response try integer IDs with value <= 5 or > 10. Other values will generated exceptions",
                "sidebar_label": "Find purchase order by ID",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "store"
                  ],
                  "description": "For valid response try integer IDs with value <= 5 or > 10. Other values will generated exceptions",
                  "operationId": "getOrderById",
                  "parameters": [
                    {
                      "name": "orderId",
                      "in": "path",
                      "description": "ID of pet that needs to be fetched",
                      "required": true,
                      "schema": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1,
                        "maximum": 5
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "successful operation",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Order ID",
                                "allOf": [
                                  {
                                    "type": "integer",
                                    "format": "int64",
                                    "readOnly": true,
                                    "title": "Id"
                                  }
                                ]
                              },
                              "petId": {
                                "description": "Pet ID",
                                "allOf": [
                                  {
                                    "type": "integer",
                                    "format": "int64",
                                    "readOnly": true,
                                    "title": "Id"
                                  }
                                ]
                              },
                              "quantity": {
                                "type": "integer",
                                "format": "int32",
                                "minimum": 1,
                                "default": 1
                              },
                              "shipDate": {
                                "description": "Estimated ship date",
                                "type": "string",
                                "format": "date-time"
                              },
                              "status": {
                                "type": "string",
                                "description": "Order Status",
                                "enum": [
                                  "placed",
                                  "approved",
                                  "delivered"
                                ]
                              },
                              "complete": {
                                "description": "Indicates whenever order was completed or not",
                                "type": "boolean",
                                "default": false,
                                "readOnly": true
                              },
                              "requestId": {
                                "description": "Unique Request Id",
                                "type": "string",
                                "writeOnly": true
                              }
                            },
                            "xml": {
                              "name": "Order"
                            },
                            "title": "Order"
                          }
                        },
                        "application/xml": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Order ID",
                                "allOf": [
                                  {
                                    "type": "integer",
                                    "format": "int64",
                                    "readOnly": true,
                                    "title": "Id"
                                  }
                                ]
                              },
                              "petId": {
                                "description": "Pet ID",
                                "allOf": [
                                  {
                                    "type": "integer",
                                    "format": "int64",
                                    "readOnly": true,
                                    "title": "Id"
                                  }
                                ]
                              },
                              "quantity": {
                                "type": "integer",
                                "format": "int32",
                                "minimum": 1,
                                "default": 1
                              },
                              "shipDate": {
                                "description": "Estimated ship date",
                                "type": "string",
                                "format": "date-time"
                              },
                              "status": {
                                "type": "string",
                                "description": "Order Status",
                                "enum": [
                                  "placed",
                                  "approved",
                                  "delivered"
                                ]
                              },
                              "complete": {
                                "description": "Indicates whenever order was completed or not",
                                "type": "boolean",
                                "default": false,
                                "readOnly": true
                              },
                              "requestId": {
                                "description": "Unique Request Id",
                                "type": "string",
                                "writeOnly": true
                              }
                            },
                            "xml": {
                              "name": "Order"
                            },
                            "title": "Order"
                          }
                        }
                      }
                    },
                    "400": {
                      "description": "Invalid ID supplied"
                    },
                    "404": {
                      "description": "Order not found"
                    }
                  },
                  "method": "get",
                  "path": "/store/order/{orderId}",
                  "servers": [
                    {
                      "url": "https://petstore.swagger.io/v2",
                      "description": "Default server"
                    },
                    {
                      "url": "https://petstore.swagger.io/sandbox",
                      "description": "Sandbox server"
                    }
                  ],
                  "securitySchemes": {
                    "petstore_auth": {
                      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
                      "type": "oauth2",
                      "flows": {
                        "implicit": {
                          "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
                          "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
                      "type": "apiKey",
                      "name": "api_key",
                      "in": "header"
                    }
                  },
                  "info": {
                    "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
                    "version": "2.0.0",
                    "title": "Swagger Petstore YAML",
                    "termsOfService": "http://swagger.io/terms/",
                    "contact": {
                      "name": "API Support",
                      "email": "apiteam@swagger.io",
                      "url": "https://github.com/Redocly/redoc"
                    },
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    }
                  },
                  "postman": {
                    "name": "Find purchase order by ID",
                    "description": {
                      "content": "For valid response try integer IDs with value <= 5 or > 10. Other values will generated exceptions",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ID of pet that needs to be fetched",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "orderId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/swagger-petstore-yaml",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Returns pet inventories by status",
                "permalink": "/OpenLeakedDocs/docs/petstore/get-inventory"
              },
              "next": {
                "title": "Find pet by ID",
                "permalink": "/OpenLeakedDocs/docs/petstore/get-pet-by-id"
              }
            },
            {
              "unversionedId": "petstore/get-pet-by-id",
              "id": "petstore/get-pet-by-id",
              "title": "Find pet by ID",
              "description": "Returns a single pet",
              "source": "@site/docs/petstore/get-pet-by-id.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/get-pet-by-id",
              "permalink": "/OpenLeakedDocs/docs/petstore/get-pet-by-id",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "get-pet-by-id",
                "title": "Find pet by ID",
                "description": "Returns a single pet",
                "sidebar_label": "Find pet by ID",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "pet"
                  ],
                  "description": "Returns a single pet",
                  "operationId": "getPetById",
                  "parameters": [
                    {
                      "name": "petId",
                      "in": "path",
                      "description": "ID of pet to return",
                      "required": true,
                      "deprecated": true,
                      "schema": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "successful operation",
                      "content": {
                        "application/json": {
                          "schema": {
                            "title": "pet",
                            "type": "object",
                            "required": [
                              "name",
                              "photoUrls"
                            ],
                            "discriminator": {
                              "propertyName": "petType",
                              "mapping": {
                                "cat": {
                                  "title": "cat",
                                  "description": "A representation of a cat",
                                  "allOf": [
                                    "circular(pet)",
                                    {
                                      "type": "object",
                                      "properties": {
                                        "huntingSkill": {
                                          "type": "string",
                                          "description": "The measured skill for hunting",
                                          "default": "lazy",
                                          "example": "adventurous",
                                          "enum": [
                                            "clueless",
                                            "lazy",
                                            "adventurous",
                                            "aggressive"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "huntingSkill"
                                      ]
                                    }
                                  ]
                                },
                                "dog": {
                                  "title": "dog",
                                  "description": "A representation of a dog",
                                  "allOf": [
                                    "circular(pet)",
                                    {
                                      "type": "object",
                                      "properties": {
                                        "packSize": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The size of the pack the dog is from",
                                          "default": 1,
                                          "minimum": 1
                                        }
                                      },
                                      "required": [
                                        "packSize"
                                      ]
                                    }
                                  ]
                                },
                                "bee": {
                                  "title": "bee",
                                  "description": "A representation of a honey bee",
                                  "allOf": [
                                    "circular(pet)",
                                    {
                                      "type": "object",
                                      "properties": {
                                        "honeyPerDay": {
                                          "type": "number",
                                          "description": "Average amount of honey produced per day in ounces",
                                          "example": 3.14,
                                          "multipleOf": 0.01
                                        }
                                      },
                                      "required": [
                                        "honeyPerDay"
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            "properties": {
                              "id": {
                                "externalDocs": {
                                  "description": "Find more info here",
                                  "url": "https://example.com"
                                },
                                "description": "Pet ID",
                                "allOf": [
                                  {
                                    "type": "integer",
                                    "format": "int64",
                                    "readOnly": true,
                                    "title": "Id"
                                  }
                                ]
                              },
                              "category": {
                                "description": "Categories this pet belongs to",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "Category ID",
                                        "allOf": [
                                          {
                                            "type": "integer",
                                            "format": "int64",
                                            "readOnly": true,
                                            "title": "Id"
                                          }
                                        ]
                                      },
                                      "name": {
                                        "description": "Category name",
                                        "type": "string",
                                        "minLength": 1
                                      },
                                      "sub": {
                                        "description": "Test Sub Category",
                                        "type": "object",
                                        "properties": {
                                          "prop1": {
                                            "type": "string",
                                            "description": "Dumb Property"
                                          }
                                        }
                                      }
                                    },
                                    "xml": {
                                      "name": "Category"
                                    },
                                    "title": "Category"
                                  }
                                ]
                              },
                              "name": {
                                "description": "The name given to a pet",
                                "type": "string",
                                "example": "Guru"
                              },
                              "photoUrls": {
                                "description": "The list of URL to a cute photos featuring pet",
                                "type": "array",
                                "maxItems": 20,
                                "xml": {
                                  "name": "photoUrl",
                                  "wrapped": true
                                },
                                "items": {
                                  "type": "string",
                                  "format": "url"
                                }
                              },
                              "friend": {
                                "allOf": [
                                  "circular(pet)"
                                ]
                              },
                              "tags": {
                                "description": "Tags attached to the pet",
                                "type": "array",
                                "minItems": 1,
                                "xml": {
                                  "name": "tag",
                                  "wrapped": true
                                },
                                "items": {
                                  "title": "tag",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "description": "Tag ID",
                                      "allOf": [
                                        {
                                          "type": "integer",
                                          "format": "int64",
                                          "readOnly": true,
                                          "title": "Id"
                                        }
                                      ]
                                    },
                                    "name": {
                                      "description": "Tag name",
                                      "type": "string",
                                      "minLength": 1
                                    }
                                  },
                                  "xml": {
                                    "name": "Tag"
                                  }
                                }
                              },
                              "status": {
                                "type": "string",
                                "description": "Pet status in the store",
                                "enum": [
                                  "available",
                                  "pending",
                                  "sold"
                                ]
                              },
                              "petType": {
                                "description": "Type of a pet",
                                "type": "string",
                                "oneOf": [
                                  {
                                    "title": "cat",
                                    "description": "A representation of a cat",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "huntingSkill": {
                                            "type": "string",
                                            "description": "The measured skill for hunting",
                                            "default": "lazy",
                                            "example": "adventurous",
                                            "enum": [
                                              "clueless",
                                              "lazy",
                                              "adventurous",
                                              "aggressive"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "huntingSkill"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "title": "dog",
                                    "description": "A representation of a dog",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "packSize": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The size of the pack the dog is from",
                                            "default": 1,
                                            "minimum": 1
                                          }
                                        },
                                        "required": [
                                          "packSize"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "title": "bee",
                                    "description": "A representation of a honey bee",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "honeyPerDay": {
                                            "type": "number",
                                            "description": "Average amount of honey produced per day in ounces",
                                            "example": 3.14,
                                            "multipleOf": 0.01
                                          }
                                        },
                                        "required": [
                                          "honeyPerDay"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            "xml": {
                              "name": "Pet"
                            }
                          }
                        },
                        "application/xml": {
                          "schema": {
                            "title": "pet",
                            "type": "object",
                            "required": [
                              "name",
                              "photoUrls"
                            ],
                            "discriminator": {
                              "propertyName": "petType",
                              "mapping": {
                                "cat": {
                                  "title": "cat",
                                  "description": "A representation of a cat",
                                  "allOf": [
                                    "circular(pet)",
                                    {
                                      "type": "object",
                                      "properties": {
                                        "huntingSkill": {
                                          "type": "string",
                                          "description": "The measured skill for hunting",
                                          "default": "lazy",
                                          "example": "adventurous",
                                          "enum": [
                                            "clueless",
                                            "lazy",
                                            "adventurous",
                                            "aggressive"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "huntingSkill"
                                      ]
                                    }
                                  ]
                                },
                                "dog": {
                                  "title": "dog",
                                  "description": "A representation of a dog",
                                  "allOf": [
                                    "circular(pet)",
                                    {
                                      "type": "object",
                                      "properties": {
                                        "packSize": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The size of the pack the dog is from",
                                          "default": 1,
                                          "minimum": 1
                                        }
                                      },
                                      "required": [
                                        "packSize"
                                      ]
                                    }
                                  ]
                                },
                                "bee": {
                                  "title": "bee",
                                  "description": "A representation of a honey bee",
                                  "allOf": [
                                    "circular(pet)",
                                    {
                                      "type": "object",
                                      "properties": {
                                        "honeyPerDay": {
                                          "type": "number",
                                          "description": "Average amount of honey produced per day in ounces",
                                          "example": 3.14,
                                          "multipleOf": 0.01
                                        }
                                      },
                                      "required": [
                                        "honeyPerDay"
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            "properties": {
                              "id": {
                                "externalDocs": {
                                  "description": "Find more info here",
                                  "url": "https://example.com"
                                },
                                "description": "Pet ID",
                                "allOf": [
                                  {
                                    "type": "integer",
                                    "format": "int64",
                                    "readOnly": true,
                                    "title": "Id"
                                  }
                                ]
                              },
                              "category": {
                                "description": "Categories this pet belongs to",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "Category ID",
                                        "allOf": [
                                          {
                                            "type": "integer",
                                            "format": "int64",
                                            "readOnly": true,
                                            "title": "Id"
                                          }
                                        ]
                                      },
                                      "name": {
                                        "description": "Category name",
                                        "type": "string",
                                        "minLength": 1
                                      },
                                      "sub": {
                                        "description": "Test Sub Category",
                                        "type": "object",
                                        "properties": {
                                          "prop1": {
                                            "type": "string",
                                            "description": "Dumb Property"
                                          }
                                        }
                                      }
                                    },
                                    "xml": {
                                      "name": "Category"
                                    },
                                    "title": "Category"
                                  }
                                ]
                              },
                              "name": {
                                "description": "The name given to a pet",
                                "type": "string",
                                "example": "Guru"
                              },
                              "photoUrls": {
                                "description": "The list of URL to a cute photos featuring pet",
                                "type": "array",
                                "maxItems": 20,
                                "xml": {
                                  "name": "photoUrl",
                                  "wrapped": true
                                },
                                "items": {
                                  "type": "string",
                                  "format": "url"
                                }
                              },
                              "friend": {
                                "allOf": [
                                  "circular(pet)"
                                ]
                              },
                              "tags": {
                                "description": "Tags attached to the pet",
                                "type": "array",
                                "minItems": 1,
                                "xml": {
                                  "name": "tag",
                                  "wrapped": true
                                },
                                "items": {
                                  "title": "tag",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "description": "Tag ID",
                                      "allOf": [
                                        {
                                          "type": "integer",
                                          "format": "int64",
                                          "readOnly": true,
                                          "title": "Id"
                                        }
                                      ]
                                    },
                                    "name": {
                                      "description": "Tag name",
                                      "type": "string",
                                      "minLength": 1
                                    }
                                  },
                                  "xml": {
                                    "name": "Tag"
                                  }
                                }
                              },
                              "status": {
                                "type": "string",
                                "description": "Pet status in the store",
                                "enum": [
                                  "available",
                                  "pending",
                                  "sold"
                                ]
                              },
                              "petType": {
                                "description": "Type of a pet",
                                "type": "string",
                                "oneOf": [
                                  {
                                    "title": "cat",
                                    "description": "A representation of a cat",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "huntingSkill": {
                                            "type": "string",
                                            "description": "The measured skill for hunting",
                                            "default": "lazy",
                                            "example": "adventurous",
                                            "enum": [
                                              "clueless",
                                              "lazy",
                                              "adventurous",
                                              "aggressive"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "huntingSkill"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "title": "dog",
                                    "description": "A representation of a dog",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "packSize": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The size of the pack the dog is from",
                                            "default": 1,
                                            "minimum": 1
                                          }
                                        },
                                        "required": [
                                          "packSize"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "title": "bee",
                                    "description": "A representation of a honey bee",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "honeyPerDay": {
                                            "type": "number",
                                            "description": "Average amount of honey produced per day in ounces",
                                            "example": 3.14,
                                            "multipleOf": 0.01
                                          }
                                        },
                                        "required": [
                                          "honeyPerDay"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            "xml": {
                              "name": "Pet"
                            }
                          }
                        }
                      }
                    },
                    "400": {
                      "description": "Invalid ID supplied"
                    },
                    "404": {
                      "description": "Pet not found"
                    }
                  },
                  "security": [
                    {
                      "api_key": []
                    }
                  ],
                  "method": "get",
                  "path": "/pet/{petId}",
                  "servers": [
                    {
                      "url": "https://petstore.swagger.io/v2",
                      "description": "Default server"
                    },
                    {
                      "url": "https://petstore.swagger.io/sandbox",
                      "description": "Sandbox server"
                    }
                  ],
                  "securitySchemes": {
                    "petstore_auth": {
                      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
                      "type": "oauth2",
                      "flows": {
                        "implicit": {
                          "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
                          "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
                      "type": "apiKey",
                      "name": "api_key",
                      "in": "header"
                    }
                  },
                  "info": {
                    "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
                    "version": "2.0.0",
                    "title": "Swagger Petstore YAML",
                    "termsOfService": "http://swagger.io/terms/",
                    "contact": {
                      "name": "API Support",
                      "email": "apiteam@swagger.io",
                      "url": "https://github.com/Redocly/redoc"
                    },
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    }
                  },
                  "postman": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "apikey",
                      "apikey": [
                        {
                          "type": "any",
                          "value": "api_key",
                          "key": "key"
                        },
                        {
                          "type": "any",
                          "value": "<API Key>",
                          "key": "value"
                        },
                        {
                          "type": "any",
                          "value": "header",
                          "key": "in"
                        }
                      ]
                    }
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/swagger-petstore-yaml",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Find purchase order by ID",
                "permalink": "/OpenLeakedDocs/docs/petstore/get-order-by-id"
              },
              "next": {
                "title": "Get user by user name",
                "permalink": "/OpenLeakedDocs/docs/petstore/get-user-by-name"
              }
            },
            {
              "unversionedId": "petstore/get-user-by-name",
              "id": "petstore/get-user-by-name",
              "title": "Get user by user name",
              "description": "",
              "source": "@site/docs/petstore/get-user-by-name.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/get-user-by-name",
              "permalink": "/OpenLeakedDocs/docs/petstore/get-user-by-name",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "get-user-by-name",
                "title": "Get user by user name",
                "description": "",
                "sidebar_label": "Get user by user name",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "user"
                  ],
                  "description": "",
                  "operationId": "getUserByName",
                  "parameters": [
                    {
                      "name": "username",
                      "in": "path",
                      "description": "The name that needs to be fetched. Use user1 for testing. ",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "successful operation",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true,
                                "title": "Id"
                              },
                              "pet": {
                                "oneOf": [
                                  {
                                    "title": "pet",
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "photoUrls"
                                    ],
                                    "discriminator": {
                                      "propertyName": "petType",
                                      "mapping": {
                                        "cat": {
                                          "title": "cat",
                                          "description": "A representation of a cat",
                                          "allOf": [
                                            "circular(pet)",
                                            {
                                              "type": "object",
                                              "properties": {
                                                "huntingSkill": {
                                                  "type": "string",
                                                  "description": "The measured skill for hunting",
                                                  "default": "lazy",
                                                  "example": "adventurous",
                                                  "enum": [
                                                    "clueless",
                                                    "lazy",
                                                    "adventurous",
                                                    "aggressive"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "huntingSkill"
                                              ]
                                            }
                                          ]
                                        },
                                        "dog": {
                                          "title": "dog",
                                          "description": "A representation of a dog",
                                          "allOf": [
                                            "circular(pet)",
                                            {
                                              "type": "object",
                                              "properties": {
                                                "packSize": {
                                                  "type": "integer",
                                                  "format": "int32",
                                                  "description": "The size of the pack the dog is from",
                                                  "default": 1,
                                                  "minimum": 1
                                                }
                                              },
                                              "required": [
                                                "packSize"
                                              ]
                                            }
                                          ]
                                        },
                                        "bee": {
                                          "title": "bee",
                                          "description": "A representation of a honey bee",
                                          "allOf": [
                                            "circular(pet)",
                                            {
                                              "type": "object",
                                              "properties": {
                                                "honeyPerDay": {
                                                  "type": "number",
                                                  "description": "Average amount of honey produced per day in ounces",
                                                  "example": 3.14,
                                                  "multipleOf": 0.01
                                                }
                                              },
                                              "required": [
                                                "honeyPerDay"
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "properties": {
                                      "id": {
                                        "externalDocs": {
                                          "description": "Find more info here",
                                          "url": "https://example.com"
                                        },
                                        "description": "Pet ID",
                                        "allOf": [
                                          {
                                            "type": "integer",
                                            "format": "int64",
                                            "readOnly": true,
                                            "title": "Id"
                                          }
                                        ]
                                      },
                                      "category": {
                                        "description": "Categories this pet belongs to",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "description": "Category ID",
                                                "allOf": [
                                                  {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "readOnly": true,
                                                    "title": "Id"
                                                  }
                                                ]
                                              },
                                              "name": {
                                                "description": "Category name",
                                                "type": "string",
                                                "minLength": 1
                                              },
                                              "sub": {
                                                "description": "Test Sub Category",
                                                "type": "object",
                                                "properties": {
                                                  "prop1": {
                                                    "type": "string",
                                                    "description": "Dumb Property"
                                                  }
                                                }
                                              }
                                            },
                                            "xml": {
                                              "name": "Category"
                                            },
                                            "title": "Category"
                                          }
                                        ]
                                      },
                                      "name": {
                                        "description": "The name given to a pet",
                                        "type": "string",
                                        "example": "Guru"
                                      },
                                      "photoUrls": {
                                        "description": "The list of URL to a cute photos featuring pet",
                                        "type": "array",
                                        "maxItems": 20,
                                        "xml": {
                                          "name": "photoUrl",
                                          "wrapped": true
                                        },
                                        "items": {
                                          "type": "string",
                                          "format": "url"
                                        }
                                      },
                                      "friend": {
                                        "allOf": [
                                          "circular(pet)"
                                        ]
                                      },
                                      "tags": {
                                        "description": "Tags attached to the pet",
                                        "type": "array",
                                        "minItems": 1,
                                        "xml": {
                                          "name": "tag",
                                          "wrapped": true
                                        },
                                        "items": {
                                          "title": "tag",
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "description": "Tag ID",
                                              "allOf": [
                                                {
                                                  "type": "integer",
                                                  "format": "int64",
                                                  "readOnly": true,
                                                  "title": "Id"
                                                }
                                              ]
                                            },
                                            "name": {
                                              "description": "Tag name",
                                              "type": "string",
                                              "minLength": 1
                                            }
                                          },
                                          "xml": {
                                            "name": "Tag"
                                          }
                                        }
                                      },
                                      "status": {
                                        "type": "string",
                                        "description": "Pet status in the store",
                                        "enum": [
                                          "available",
                                          "pending",
                                          "sold"
                                        ]
                                      },
                                      "petType": {
                                        "description": "Type of a pet",
                                        "type": "string",
                                        "oneOf": [
                                          {
                                            "title": "cat",
                                            "description": "A representation of a cat",
                                            "allOf": [
                                              "circular(pet)",
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "huntingSkill": {
                                                    "type": "string",
                                                    "description": "The measured skill for hunting",
                                                    "default": "lazy",
                                                    "example": "adventurous",
                                                    "enum": [
                                                      "clueless",
                                                      "lazy",
                                                      "adventurous",
                                                      "aggressive"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "huntingSkill"
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "title": "dog",
                                            "description": "A representation of a dog",
                                            "allOf": [
                                              "circular(pet)",
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "packSize": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "The size of the pack the dog is from",
                                                    "default": 1,
                                                    "minimum": 1
                                                  }
                                                },
                                                "required": [
                                                  "packSize"
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "title": "bee",
                                            "description": "A representation of a honey bee",
                                            "allOf": [
                                              "circular(pet)",
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "honeyPerDay": {
                                                    "type": "number",
                                                    "description": "Average amount of honey produced per day in ounces",
                                                    "example": 3.14,
                                                    "multipleOf": 0.01
                                                  }
                                                },
                                                "required": [
                                                  "honeyPerDay"
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    "xml": {
                                      "name": "Pet"
                                    }
                                  },
                                  {
                                    "title": "tag",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "Tag ID",
                                        "allOf": [
                                          {
                                            "type": "integer",
                                            "format": "int64",
                                            "readOnly": true,
                                            "title": "Id"
                                          }
                                        ]
                                      },
                                      "name": {
                                        "description": "Tag name",
                                        "type": "string",
                                        "minLength": 1
                                      }
                                    },
                                    "xml": {
                                      "name": "Tag"
                                    }
                                  }
                                ]
                              },
                              "username": {
                                "description": "User supplied username",
                                "type": "string",
                                "minLength": 4,
                                "example": "John78"
                              },
                              "firstName": {
                                "description": "User first name",
                                "type": "string",
                                "minLength": 1,
                                "example": "John"
                              },
                              "lastName": {
                                "description": "User last name",
                                "type": "string",
                                "minLength": 1,
                                "example": "Smith"
                              },
                              "email": {
                                "description": "User email address",
                                "type": "string",
                                "format": "email",
                                "example": "john.smith@example.com"
                              },
                              "password": {
                                "type": "string",
                                "description": "User password, MUST contain a mix of upper and lower case letters, as well as digits",
                                "format": "password",
                                "minLength": 8,
                                "pattern": "/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/",
                                "example": "drowssaP123"
                              },
                              "phone": {
                                "description": "User phone number in international format",
                                "type": "string",
                                "pattern": "/^\\+(?:[0-9]-?){6,14}[0-9]$/",
                                "example": "+1-202-555-0192"
                              },
                              "userStatus": {
                                "description": "User status",
                                "type": "integer",
                                "format": "int32"
                              }
                            },
                            "xml": {
                              "name": "User"
                            },
                            "title": "User"
                          }
                        },
                        "application/xml": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true,
                                "title": "Id"
                              },
                              "pet": {
                                "oneOf": [
                                  {
                                    "title": "pet",
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "photoUrls"
                                    ],
                                    "discriminator": {
                                      "propertyName": "petType",
                                      "mapping": {
                                        "cat": {
                                          "title": "cat",
                                          "description": "A representation of a cat",
                                          "allOf": [
                                            "circular(pet)",
                                            {
                                              "type": "object",
                                              "properties": {
                                                "huntingSkill": {
                                                  "type": "string",
                                                  "description": "The measured skill for hunting",
                                                  "default": "lazy",
                                                  "example": "adventurous",
                                                  "enum": [
                                                    "clueless",
                                                    "lazy",
                                                    "adventurous",
                                                    "aggressive"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "huntingSkill"
                                              ]
                                            }
                                          ]
                                        },
                                        "dog": {
                                          "title": "dog",
                                          "description": "A representation of a dog",
                                          "allOf": [
                                            "circular(pet)",
                                            {
                                              "type": "object",
                                              "properties": {
                                                "packSize": {
                                                  "type": "integer",
                                                  "format": "int32",
                                                  "description": "The size of the pack the dog is from",
                                                  "default": 1,
                                                  "minimum": 1
                                                }
                                              },
                                              "required": [
                                                "packSize"
                                              ]
                                            }
                                          ]
                                        },
                                        "bee": {
                                          "title": "bee",
                                          "description": "A representation of a honey bee",
                                          "allOf": [
                                            "circular(pet)",
                                            {
                                              "type": "object",
                                              "properties": {
                                                "honeyPerDay": {
                                                  "type": "number",
                                                  "description": "Average amount of honey produced per day in ounces",
                                                  "example": 3.14,
                                                  "multipleOf": 0.01
                                                }
                                              },
                                              "required": [
                                                "honeyPerDay"
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "properties": {
                                      "id": {
                                        "externalDocs": {
                                          "description": "Find more info here",
                                          "url": "https://example.com"
                                        },
                                        "description": "Pet ID",
                                        "allOf": [
                                          {
                                            "type": "integer",
                                            "format": "int64",
                                            "readOnly": true,
                                            "title": "Id"
                                          }
                                        ]
                                      },
                                      "category": {
                                        "description": "Categories this pet belongs to",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "description": "Category ID",
                                                "allOf": [
                                                  {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "readOnly": true,
                                                    "title": "Id"
                                                  }
                                                ]
                                              },
                                              "name": {
                                                "description": "Category name",
                                                "type": "string",
                                                "minLength": 1
                                              },
                                              "sub": {
                                                "description": "Test Sub Category",
                                                "type": "object",
                                                "properties": {
                                                  "prop1": {
                                                    "type": "string",
                                                    "description": "Dumb Property"
                                                  }
                                                }
                                              }
                                            },
                                            "xml": {
                                              "name": "Category"
                                            },
                                            "title": "Category"
                                          }
                                        ]
                                      },
                                      "name": {
                                        "description": "The name given to a pet",
                                        "type": "string",
                                        "example": "Guru"
                                      },
                                      "photoUrls": {
                                        "description": "The list of URL to a cute photos featuring pet",
                                        "type": "array",
                                        "maxItems": 20,
                                        "xml": {
                                          "name": "photoUrl",
                                          "wrapped": true
                                        },
                                        "items": {
                                          "type": "string",
                                          "format": "url"
                                        }
                                      },
                                      "friend": {
                                        "allOf": [
                                          "circular(pet)"
                                        ]
                                      },
                                      "tags": {
                                        "description": "Tags attached to the pet",
                                        "type": "array",
                                        "minItems": 1,
                                        "xml": {
                                          "name": "tag",
                                          "wrapped": true
                                        },
                                        "items": {
                                          "title": "tag",
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "description": "Tag ID",
                                              "allOf": [
                                                {
                                                  "type": "integer",
                                                  "format": "int64",
                                                  "readOnly": true,
                                                  "title": "Id"
                                                }
                                              ]
                                            },
                                            "name": {
                                              "description": "Tag name",
                                              "type": "string",
                                              "minLength": 1
                                            }
                                          },
                                          "xml": {
                                            "name": "Tag"
                                          }
                                        }
                                      },
                                      "status": {
                                        "type": "string",
                                        "description": "Pet status in the store",
                                        "enum": [
                                          "available",
                                          "pending",
                                          "sold"
                                        ]
                                      },
                                      "petType": {
                                        "description": "Type of a pet",
                                        "type": "string",
                                        "oneOf": [
                                          {
                                            "title": "cat",
                                            "description": "A representation of a cat",
                                            "allOf": [
                                              "circular(pet)",
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "huntingSkill": {
                                                    "type": "string",
                                                    "description": "The measured skill for hunting",
                                                    "default": "lazy",
                                                    "example": "adventurous",
                                                    "enum": [
                                                      "clueless",
                                                      "lazy",
                                                      "adventurous",
                                                      "aggressive"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "huntingSkill"
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "title": "dog",
                                            "description": "A representation of a dog",
                                            "allOf": [
                                              "circular(pet)",
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "packSize": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "description": "The size of the pack the dog is from",
                                                    "default": 1,
                                                    "minimum": 1
                                                  }
                                                },
                                                "required": [
                                                  "packSize"
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "title": "bee",
                                            "description": "A representation of a honey bee",
                                            "allOf": [
                                              "circular(pet)",
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "honeyPerDay": {
                                                    "type": "number",
                                                    "description": "Average amount of honey produced per day in ounces",
                                                    "example": 3.14,
                                                    "multipleOf": 0.01
                                                  }
                                                },
                                                "required": [
                                                  "honeyPerDay"
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    "xml": {
                                      "name": "Pet"
                                    }
                                  },
                                  {
                                    "title": "tag",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "Tag ID",
                                        "allOf": [
                                          {
                                            "type": "integer",
                                            "format": "int64",
                                            "readOnly": true,
                                            "title": "Id"
                                          }
                                        ]
                                      },
                                      "name": {
                                        "description": "Tag name",
                                        "type": "string",
                                        "minLength": 1
                                      }
                                    },
                                    "xml": {
                                      "name": "Tag"
                                    }
                                  }
                                ]
                              },
                              "username": {
                                "description": "User supplied username",
                                "type": "string",
                                "minLength": 4,
                                "example": "John78"
                              },
                              "firstName": {
                                "description": "User first name",
                                "type": "string",
                                "minLength": 1,
                                "example": "John"
                              },
                              "lastName": {
                                "description": "User last name",
                                "type": "string",
                                "minLength": 1,
                                "example": "Smith"
                              },
                              "email": {
                                "description": "User email address",
                                "type": "string",
                                "format": "email",
                                "example": "john.smith@example.com"
                              },
                              "password": {
                                "type": "string",
                                "description": "User password, MUST contain a mix of upper and lower case letters, as well as digits",
                                "format": "password",
                                "minLength": 8,
                                "pattern": "/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/",
                                "example": "drowssaP123"
                              },
                              "phone": {
                                "description": "User phone number in international format",
                                "type": "string",
                                "pattern": "/^\\+(?:[0-9]-?){6,14}[0-9]$/",
                                "example": "+1-202-555-0192"
                              },
                              "userStatus": {
                                "description": "User status",
                                "type": "integer",
                                "format": "int32"
                              }
                            },
                            "xml": {
                              "name": "User"
                            },
                            "title": "User"
                          }
                        }
                      }
                    },
                    "400": {
                      "description": "Invalid username supplied"
                    },
                    "404": {
                      "description": "User not found"
                    }
                  },
                  "method": "get",
                  "path": "/user/{username}",
                  "servers": [
                    {
                      "url": "https://petstore.swagger.io/v2",
                      "description": "Default server"
                    },
                    {
                      "url": "https://petstore.swagger.io/sandbox",
                      "description": "Sandbox server"
                    }
                  ],
                  "securitySchemes": {
                    "petstore_auth": {
                      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
                      "type": "oauth2",
                      "flows": {
                        "implicit": {
                          "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
                          "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
                      "type": "apiKey",
                      "name": "api_key",
                      "in": "header"
                    }
                  },
                  "info": {
                    "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
                    "version": "2.0.0",
                    "title": "Swagger Petstore YAML",
                    "termsOfService": "http://swagger.io/terms/",
                    "contact": {
                      "name": "API Support",
                      "email": "apiteam@swagger.io",
                      "url": "https://github.com/Redocly/redoc"
                    },
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    }
                  },
                  "postman": {
                    "name": "Get user by user name",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/swagger-petstore-yaml",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Find pet by ID",
                "permalink": "/OpenLeakedDocs/docs/petstore/get-pet-by-id"
              },
              "next": {
                "title": "Logs user into the system",
                "permalink": "/OpenLeakedDocs/docs/petstore/login-user"
              }
            },
            {
              "unversionedId": "petstore/login-user",
              "id": "petstore/login-user",
              "title": "Logs user into the system",
              "description": "",
              "source": "@site/docs/petstore/login-user.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/login-user",
              "permalink": "/OpenLeakedDocs/docs/petstore/login-user",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "login-user",
                "title": "Logs user into the system",
                "description": "",
                "sidebar_label": "Logs user into the system",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "user"
                  ],
                  "description": "",
                  "operationId": "loginUser",
                  "parameters": [
                    {
                      "name": "username",
                      "in": "query",
                      "description": "The user name for login",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "name": "password",
                      "in": "query",
                      "description": "The password for login in clear text",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "successful operation",
                      "headers": {
                        "X-Rate-Limit": {
                          "description": "calls per hour allowed by the user",
                          "schema": {
                            "type": "integer",
                            "format": "int32"
                          }
                        },
                        "X-Expires-After": {
                          "description": "date in UTC when token expires",
                          "schema": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      },
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "string"
                          },
                          "examples": {
                            "response": {
                              "value": "OK"
                            }
                          }
                        },
                        "application/xml": {
                          "schema": {
                            "type": "string"
                          },
                          "examples": {
                            "response": {
                              "value": "<Message> OK </Message>"
                            }
                          }
                        },
                        "text/plain": {
                          "examples": {
                            "response": {
                              "value": "OK"
                            }
                          }
                        }
                      }
                    },
                    "400": {
                      "description": "Invalid username/password supplied"
                    }
                  },
                  "method": "get",
                  "path": "/user/login",
                  "servers": [
                    {
                      "url": "https://petstore.swagger.io/v2",
                      "description": "Default server"
                    },
                    {
                      "url": "https://petstore.swagger.io/sandbox",
                      "description": "Sandbox server"
                    }
                  ],
                  "securitySchemes": {
                    "petstore_auth": {
                      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
                      "type": "oauth2",
                      "flows": {
                        "implicit": {
                          "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
                          "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
                      "type": "apiKey",
                      "name": "api_key",
                      "in": "header"
                    }
                  },
                  "info": {
                    "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
                    "version": "2.0.0",
                    "title": "Swagger Petstore YAML",
                    "termsOfService": "http://swagger.io/terms/",
                    "contact": {
                      "name": "API Support",
                      "email": "apiteam@swagger.io",
                      "url": "https://github.com/Redocly/redoc"
                    },
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    }
                  },
                  "postman": {
                    "name": "Logs user into the system",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) The user name for login",
                            "type": "text/plain"
                          },
                          "key": "username",
                          "value": ""
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) The password for login in clear text",
                            "type": "text/plain"
                          },
                          "key": "password",
                          "value": ""
                        }
                      ],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/swagger-petstore-yaml",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Get user by user name",
                "permalink": "/OpenLeakedDocs/docs/petstore/get-user-by-name"
              },
              "next": {
                "title": "Logs out current logged in user session",
                "permalink": "/OpenLeakedDocs/docs/petstore/logout-user"
              }
            },
            {
              "unversionedId": "petstore/logout-user",
              "id": "petstore/logout-user",
              "title": "Logs out current logged in user session",
              "description": "",
              "source": "@site/docs/petstore/logout-user.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/logout-user",
              "permalink": "/OpenLeakedDocs/docs/petstore/logout-user",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "logout-user",
                "title": "Logs out current logged in user session",
                "description": "",
                "sidebar_label": "Logs out current logged in user session",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "user"
                  ],
                  "description": "",
                  "operationId": "logoutUser",
                  "responses": {
                    "default": {
                      "description": "successful operation"
                    }
                  },
                  "method": "get",
                  "path": "/user/logout",
                  "servers": [
                    {
                      "url": "https://petstore.swagger.io/v2",
                      "description": "Default server"
                    },
                    {
                      "url": "https://petstore.swagger.io/sandbox",
                      "description": "Sandbox server"
                    }
                  ],
                  "securitySchemes": {
                    "petstore_auth": {
                      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
                      "type": "oauth2",
                      "flows": {
                        "implicit": {
                          "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
                          "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
                      "type": "apiKey",
                      "name": "api_key",
                      "in": "header"
                    }
                  },
                  "info": {
                    "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
                    "version": "2.0.0",
                    "title": "Swagger Petstore YAML",
                    "termsOfService": "http://swagger.io/terms/",
                    "contact": {
                      "name": "API Support",
                      "email": "apiteam@swagger.io",
                      "url": "https://github.com/Redocly/redoc"
                    },
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    }
                  },
                  "postman": {
                    "name": "Logs out current logged in user session",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET"
                  }
                },
                "sidebar_class_name": "get api-method",
                "info_path": "docs/petstore/swagger-petstore-yaml",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Logs user into the system",
                "permalink": "/OpenLeakedDocs/docs/petstore/login-user"
              },
              "next": {
                "title": "New pet",
                "permalink": "/OpenLeakedDocs/docs/petstore/new-pet"
              }
            },
            {
              "unversionedId": "petstore/new-pet",
              "id": "petstore/new-pet",
              "title": "New pet",
              "description": "Information about a new pet in the systems",
              "source": "@site/docs/petstore/new-pet.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/new-pet",
              "permalink": "/OpenLeakedDocs/docs/petstore/new-pet",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "new-pet",
                "title": "New pet",
                "description": "Information about a new pet in the systems",
                "sidebar_label": "New pet",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "description": "Information about a new pet in the systems",
                  "operationId": "newPet",
                  "tags": [
                    "pet"
                  ],
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "title": "pet",
                          "type": "object",
                          "required": [
                            "name",
                            "photoUrls"
                          ],
                          "discriminator": {
                            "propertyName": "petType",
                            "mapping": {
                              "cat": {
                                "title": "cat",
                                "description": "A representation of a cat",
                                "allOf": [
                                  "circular(pet)",
                                  {
                                    "type": "object",
                                    "properties": {
                                      "huntingSkill": {
                                        "type": "string",
                                        "description": "The measured skill for hunting",
                                        "default": "lazy",
                                        "example": "adventurous",
                                        "enum": [
                                          "clueless",
                                          "lazy",
                                          "adventurous",
                                          "aggressive"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "huntingSkill"
                                    ]
                                  }
                                ]
                              },
                              "dog": {
                                "title": "dog",
                                "description": "A representation of a dog",
                                "allOf": [
                                  "circular(pet)",
                                  {
                                    "type": "object",
                                    "properties": {
                                      "packSize": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The size of the pack the dog is from",
                                        "default": 1,
                                        "minimum": 1
                                      }
                                    },
                                    "required": [
                                      "packSize"
                                    ]
                                  }
                                ]
                              },
                              "bee": {
                                "title": "bee",
                                "description": "A representation of a honey bee",
                                "allOf": [
                                  "circular(pet)",
                                  {
                                    "type": "object",
                                    "properties": {
                                      "honeyPerDay": {
                                        "type": "number",
                                        "description": "Average amount of honey produced per day in ounces",
                                        "example": 3.14,
                                        "multipleOf": 0.01
                                      }
                                    },
                                    "required": [
                                      "honeyPerDay"
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "properties": {
                            "id": {
                              "externalDocs": {
                                "description": "Find more info here",
                                "url": "https://example.com"
                              },
                              "description": "Pet ID",
                              "allOf": [
                                {
                                  "type": "integer",
                                  "format": "int64",
                                  "readOnly": true,
                                  "title": "Id"
                                }
                              ]
                            },
                            "category": {
                              "description": "Categories this pet belongs to",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "description": "Category ID",
                                      "allOf": [
                                        {
                                          "type": "integer",
                                          "format": "int64",
                                          "readOnly": true,
                                          "title": "Id"
                                        }
                                      ]
                                    },
                                    "name": {
                                      "description": "Category name",
                                      "type": "string",
                                      "minLength": 1
                                    },
                                    "sub": {
                                      "description": "Test Sub Category",
                                      "type": "object",
                                      "properties": {
                                        "prop1": {
                                          "type": "string",
                                          "description": "Dumb Property"
                                        }
                                      }
                                    }
                                  },
                                  "xml": {
                                    "name": "Category"
                                  },
                                  "title": "Category"
                                }
                              ]
                            },
                            "name": {
                              "description": "The name given to a pet",
                              "type": "string",
                              "example": "Guru"
                            },
                            "photoUrls": {
                              "description": "The list of URL to a cute photos featuring pet",
                              "type": "array",
                              "maxItems": 20,
                              "xml": {
                                "name": "photoUrl",
                                "wrapped": true
                              },
                              "items": {
                                "type": "string",
                                "format": "url"
                              }
                            },
                            "friend": {
                              "allOf": [
                                "circular(pet)"
                              ]
                            },
                            "tags": {
                              "description": "Tags attached to the pet",
                              "type": "array",
                              "minItems": 1,
                              "xml": {
                                "name": "tag",
                                "wrapped": true
                              },
                              "items": {
                                "title": "tag",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "Tag ID",
                                    "allOf": [
                                      {
                                        "type": "integer",
                                        "format": "int64",
                                        "readOnly": true,
                                        "title": "Id"
                                      }
                                    ]
                                  },
                                  "name": {
                                    "description": "Tag name",
                                    "type": "string",
                                    "minLength": 1
                                  }
                                },
                                "xml": {
                                  "name": "Tag"
                                }
                              }
                            },
                            "status": {
                              "type": "string",
                              "description": "Pet status in the store",
                              "enum": [
                                "available",
                                "pending",
                                "sold"
                              ]
                            },
                            "petType": {
                              "description": "Type of a pet",
                              "type": "string",
                              "oneOf": [
                                {
                                  "title": "cat",
                                  "description": "A representation of a cat",
                                  "allOf": [
                                    "circular(pet)",
                                    {
                                      "type": "object",
                                      "properties": {
                                        "huntingSkill": {
                                          "type": "string",
                                          "description": "The measured skill for hunting",
                                          "default": "lazy",
                                          "example": "adventurous",
                                          "enum": [
                                            "clueless",
                                            "lazy",
                                            "adventurous",
                                            "aggressive"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "huntingSkill"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "title": "dog",
                                  "description": "A representation of a dog",
                                  "allOf": [
                                    "circular(pet)",
                                    {
                                      "type": "object",
                                      "properties": {
                                        "packSize": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The size of the pack the dog is from",
                                          "default": 1,
                                          "minimum": 1
                                        }
                                      },
                                      "required": [
                                        "packSize"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "title": "bee",
                                  "description": "A representation of a honey bee",
                                  "allOf": [
                                    "circular(pet)",
                                    {
                                      "type": "object",
                                      "properties": {
                                        "honeyPerDay": {
                                          "type": "number",
                                          "description": "Average amount of honey produced per day in ounces",
                                          "example": 3.14,
                                          "multipleOf": 0.01
                                        }
                                      },
                                      "required": [
                                        "honeyPerDay"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          "xml": {
                            "name": "Pet"
                          }
                        }
                      }
                    }
                  },
                  "responses": {
                    "200": {
                      "description": "Return a 200 status to indicate that the data was received successfully"
                    }
                  },
                  "method": "event",
                  "path": "webhook",
                  "servers": [
                    {
                      "url": "https://petstore.swagger.io/v2",
                      "description": "Default server"
                    },
                    {
                      "url": "https://petstore.swagger.io/sandbox",
                      "description": "Sandbox server"
                    }
                  ],
                  "securitySchemes": {
                    "petstore_auth": {
                      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
                      "type": "oauth2",
                      "flows": {
                        "implicit": {
                          "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
                          "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
                      "type": "apiKey",
                      "name": "api_key",
                      "in": "header"
                    }
                  },
                  "jsonRequestBodyExample": {
                    "category": {
                      "name": "string",
                      "sub": {
                        "prop1": "string"
                      }
                    },
                    "name": "Guru",
                    "photoUrls": [
                      "string"
                    ],
                    "friend": {},
                    "tags": [
                      {
                        "name": "string"
                      }
                    ],
                    "status": "available",
                    "petType": {
                      "huntingSkill": "adventurous"
                    }
                  },
                  "info": {
                    "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
                    "version": "2.0.0",
                    "title": "Swagger Petstore YAML",
                    "termsOfService": "http://swagger.io/terms/",
                    "contact": {
                      "name": "API Support",
                      "email": "apiteam@swagger.io",
                      "url": "https://github.com/Redocly/redoc"
                    },
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    }
                  }
                },
                "sidebar_class_name": "event api-method",
                "info_path": "docs/petstore/swagger-petstore-yaml",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Logs out current logged in user session",
                "permalink": "/OpenLeakedDocs/docs/petstore/logout-user"
              },
              "next": {
                "title": "Pets",
                "permalink": "/OpenLeakedDocs/docs/petstore/pet"
              }
            },
            {
              "unversionedId": "petstore/pet",
              "id": "petstore/pet",
              "title": "Pets",
              "description": "Pets",
              "source": "@site/docs/petstore/pet.tag.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/pet",
              "permalink": "/OpenLeakedDocs/docs/petstore/pet",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "pet",
                "title": "Pets",
                "description": "Pets",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "New pet",
                "permalink": "/OpenLeakedDocs/docs/petstore/new-pet"
              },
              "next": {
                "title": "Place an order for a pet",
                "permalink": "/OpenLeakedDocs/docs/petstore/place-order"
              }
            },
            {
              "unversionedId": "petstore/place-order",
              "id": "petstore/place-order",
              "title": "Place an order for a pet",
              "description": "",
              "source": "@site/docs/petstore/place-order.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/place-order",
              "permalink": "/OpenLeakedDocs/docs/petstore/place-order",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "place-order",
                "title": "Place an order for a pet",
                "description": "",
                "sidebar_label": "Place an order for a pet",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "store"
                  ],
                  "description": "",
                  "operationId": "placeOrder",
                  "responses": {
                    "200": {
                      "description": "successful operation",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Order ID",
                                "allOf": [
                                  {
                                    "type": "integer",
                                    "format": "int64",
                                    "readOnly": true,
                                    "title": "Id"
                                  }
                                ]
                              },
                              "petId": {
                                "description": "Pet ID",
                                "allOf": [
                                  {
                                    "type": "integer",
                                    "format": "int64",
                                    "readOnly": true,
                                    "title": "Id"
                                  }
                                ]
                              },
                              "quantity": {
                                "type": "integer",
                                "format": "int32",
                                "minimum": 1,
                                "default": 1
                              },
                              "shipDate": {
                                "description": "Estimated ship date",
                                "type": "string",
                                "format": "date-time"
                              },
                              "status": {
                                "type": "string",
                                "description": "Order Status",
                                "enum": [
                                  "placed",
                                  "approved",
                                  "delivered"
                                ]
                              },
                              "complete": {
                                "description": "Indicates whenever order was completed or not",
                                "type": "boolean",
                                "default": false,
                                "readOnly": true
                              },
                              "requestId": {
                                "description": "Unique Request Id",
                                "type": "string",
                                "writeOnly": true
                              }
                            },
                            "xml": {
                              "name": "Order"
                            },
                            "title": "Order"
                          }
                        },
                        "application/xml": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Order ID",
                                "allOf": [
                                  {
                                    "type": "integer",
                                    "format": "int64",
                                    "readOnly": true,
                                    "title": "Id"
                                  }
                                ]
                              },
                              "petId": {
                                "description": "Pet ID",
                                "allOf": [
                                  {
                                    "type": "integer",
                                    "format": "int64",
                                    "readOnly": true,
                                    "title": "Id"
                                  }
                                ]
                              },
                              "quantity": {
                                "type": "integer",
                                "format": "int32",
                                "minimum": 1,
                                "default": 1
                              },
                              "shipDate": {
                                "description": "Estimated ship date",
                                "type": "string",
                                "format": "date-time"
                              },
                              "status": {
                                "type": "string",
                                "description": "Order Status",
                                "enum": [
                                  "placed",
                                  "approved",
                                  "delivered"
                                ]
                              },
                              "complete": {
                                "description": "Indicates whenever order was completed or not",
                                "type": "boolean",
                                "default": false,
                                "readOnly": true
                              },
                              "requestId": {
                                "description": "Unique Request Id",
                                "type": "string",
                                "writeOnly": true
                              }
                            },
                            "xml": {
                              "name": "Order"
                            },
                            "title": "Order"
                          }
                        }
                      }
                    },
                    "400": {
                      "description": "Invalid Order",
                      "content": {
                        "application/json": {
                          "example": {
                            "status": 400,
                            "message": "Invalid Order"
                          }
                        }
                      }
                    }
                  },
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Order ID",
                              "allOf": [
                                {
                                  "type": "integer",
                                  "format": "int64",
                                  "readOnly": true,
                                  "title": "Id"
                                }
                              ]
                            },
                            "petId": {
                              "description": "Pet ID",
                              "allOf": [
                                {
                                  "type": "integer",
                                  "format": "int64",
                                  "readOnly": true,
                                  "title": "Id"
                                }
                              ]
                            },
                            "quantity": {
                              "type": "integer",
                              "format": "int32",
                              "minimum": 1,
                              "default": 1
                            },
                            "shipDate": {
                              "description": "Estimated ship date",
                              "type": "string",
                              "format": "date-time"
                            },
                            "status": {
                              "type": "string",
                              "description": "Order Status",
                              "enum": [
                                "placed",
                                "approved",
                                "delivered"
                              ]
                            },
                            "complete": {
                              "description": "Indicates whenever order was completed or not",
                              "type": "boolean",
                              "default": false,
                              "readOnly": true
                            },
                            "requestId": {
                              "description": "Unique Request Id",
                              "type": "string",
                              "writeOnly": true
                            }
                          },
                          "xml": {
                            "name": "Order"
                          },
                          "title": "Order"
                        }
                      }
                    },
                    "description": "order placed for purchasing the pet",
                    "required": true
                  },
                  "method": "post",
                  "path": "/store/order",
                  "servers": [
                    {
                      "url": "https://petstore.swagger.io/v2",
                      "description": "Default server"
                    },
                    {
                      "url": "https://petstore.swagger.io/sandbox",
                      "description": "Sandbox server"
                    }
                  ],
                  "securitySchemes": {
                    "petstore_auth": {
                      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
                      "type": "oauth2",
                      "flows": {
                        "implicit": {
                          "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
                          "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
                      "type": "apiKey",
                      "name": "api_key",
                      "in": "header"
                    }
                  },
                  "jsonRequestBodyExample": {
                    "quantity": 1,
                    "shipDate": "2023-03-24T14:15:56.763Z",
                    "status": "placed",
                    "requestId": "string"
                  },
                  "info": {
                    "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
                    "version": "2.0.0",
                    "title": "Swagger Petstore YAML",
                    "termsOfService": "http://swagger.io/terms/",
                    "contact": {
                      "name": "API Support",
                      "email": "apiteam@swagger.io",
                      "url": "https://github.com/Redocly/redoc"
                    },
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    }
                  },
                  "postman": {
                    "name": "Place an order for a pet",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "\"\"",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  }
                },
                "sidebar_class_name": "post api-method",
                "info_path": "docs/petstore/swagger-petstore-yaml",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Pets",
                "permalink": "/OpenLeakedDocs/docs/petstore/pet"
              },
              "next": {
                "title": "Petstore Orders",
                "permalink": "/OpenLeakedDocs/docs/petstore/store"
              }
            },
            {
              "unversionedId": "petstore/store",
              "id": "petstore/store",
              "title": "Petstore Orders",
              "description": "Petstore Orders",
              "source": "@site/docs/petstore/store.tag.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/store",
              "permalink": "/OpenLeakedDocs/docs/petstore/store",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "store",
                "title": "Petstore Orders",
                "description": "Petstore Orders",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Place an order for a pet",
                "permalink": "/OpenLeakedDocs/docs/petstore/place-order"
              },
              "next": {
                "title": "Subscribe to the Store events",
                "permalink": "/OpenLeakedDocs/docs/petstore/subscribe-to-the-store-events"
              }
            },
            {
              "unversionedId": "petstore/subscribe-to-the-store-events",
              "id": "petstore/subscribe-to-the-store-events",
              "title": "Subscribe to the Store events",
              "description": "Add subscription for a store events",
              "source": "@site/docs/petstore/subscribe-to-the-store-events.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/subscribe-to-the-store-events",
              "permalink": "/OpenLeakedDocs/docs/petstore/subscribe-to-the-store-events",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "subscribe-to-the-store-events",
                "title": "Subscribe to the Store events",
                "description": "Add subscription for a store events",
                "sidebar_label": "Subscribe to the Store events",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "store"
                  ],
                  "description": "Add subscription for a store events",
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "callbackUrl": {
                              "type": "string",
                              "format": "uri",
                              "description": "This URL will be called by the server when the desired event will occur",
                              "example": "https://myserver.com/send/callback/here"
                            },
                            "eventName": {
                              "type": "string",
                              "description": "Event name for the subscription",
                              "enum": [
                                "orderInProgress",
                                "orderShipped",
                                "orderDelivered"
                              ],
                              "example": "orderInProgress"
                            }
                          },
                          "required": [
                            "callbackUrl",
                            "eventName"
                          ]
                        }
                      }
                    }
                  },
                  "responses": {
                    "201": {
                      "description": "Subscription added",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "subscriptionId": {
                                "type": "string",
                                "example": "AAA-123-BBB-456"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "callbacks": {
                    "orderInProgress": {
                      "{$request.body#/callbackUrl}?event={$request.body#/eventName}": {
                        "servers": [
                          {
                            "url": "//callback-url.path-level/v1",
                            "description": "Path level server 1"
                          },
                          {
                            "url": "//callback-url.path-level/v2",
                            "description": "Path level server 2"
                          }
                        ],
                        "post": {
                          "summary": "Order in Progress (Summary)",
                          "description": "A callback triggered every time an Order is updated status to \"inProgress\" (Description)",
                          "externalDocs": {
                            "description": "Find out more",
                            "url": "https://more-details.com/demo"
                          },
                          "requestBody": {
                            "content": {
                              "application/json": {
                                "schema": {
                                  "type": "object",
                                  "properties": {
                                    "orderId": {
                                      "type": "string",
                                      "example": "123"
                                    },
                                    "timestamp": {
                                      "type": "string",
                                      "format": "date-time",
                                      "example": "2018-10-19T16:46:45Z"
                                    },
                                    "status": {
                                      "type": "string",
                                      "example": "inProgress"
                                    }
                                  }
                                }
                              },
                              "application/xml": {
                                "schema": {
                                  "type": "object",
                                  "properties": {
                                    "orderId": {
                                      "type": "string",
                                      "example": "123"
                                    }
                                  }
                                },
                                "example": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root>\n  <orderId>123</orderId>\n  <status>inProgress</status>\n  <timestamp>2018-10-19T16:46:45Z</timestamp>\n</root>\n"
                              }
                            }
                          },
                          "responses": {
                            "200": {
                              "description": "Callback successfully processed and no retries will be performed",
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "someProp": {
                                        "type": "string",
                                        "example": "123"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "299": {
                              "description": "Response for cancelling subscription"
                            },
                            "500": {
                              "description": "Callback processing failed and retries will be performed"
                            }
                          },
                          "x-codeSamples": [
                            {
                              "lang": "C#",
                              "source": "PetStore.v1.Pet pet = new PetStore.v1.Pet();\npet.setApiKey(\"your api key\");\npet.petType = PetStore.v1.Pet.TYPE_DOG;\npet.name = \"Rex\";\n// set other fields\nPetStoreResponse response = pet.create();\nif (response.statusCode == HttpStatusCode.Created)\n{\n  // Successfully created\n}\nelse\n{\n  // Something wrong -- check response for errors\n  Console.WriteLine(response.getRawResponse());\n}\n"
                            },
                            {
                              "lang": "PHP",
                              "source": "$form = new \\PetStore\\Entities\\Pet();\n$form->setPetType(\"Dog\");\n$form->setName(\"Rex\");\n// set other fields\ntry {\n    $pet = $client->pets()->create($form);\n} catch (UnprocessableEntityException $e) {\n    var_dump($e->getErrors());\n}\n"
                            }
                          ]
                        },
                        "put": {
                          "description": "Order in Progress (Only Description)",
                          "servers": [
                            {
                              "url": "//callback-url.operation-level/v1",
                              "description": "Operation level server 1 (Operation override)"
                            },
                            {
                              "url": "//callback-url.operation-level/v2",
                              "description": "Operation level server 2 (Operation override)"
                            }
                          ],
                          "requestBody": {
                            "content": {
                              "application/json": {
                                "schema": {
                                  "type": "object",
                                  "properties": {
                                    "orderId": {
                                      "type": "string",
                                      "example": "123"
                                    },
                                    "timestamp": {
                                      "type": "string",
                                      "format": "date-time",
                                      "example": "2018-10-19T16:46:45Z"
                                    },
                                    "status": {
                                      "type": "string",
                                      "example": "inProgress"
                                    }
                                  }
                                }
                              },
                              "application/xml": {
                                "schema": {
                                  "type": "object",
                                  "properties": {
                                    "orderId": {
                                      "type": "string",
                                      "example": "123"
                                    }
                                  }
                                },
                                "example": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root>\n  <orderId>123</orderId>\n  <status>inProgress</status>\n  <timestamp>2018-10-19T16:46:45Z</timestamp>\n</root>\n"
                              }
                            }
                          },
                          "responses": {
                            "200": {
                              "description": "Callback successfully processed and no retries will be performed",
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "someProp": {
                                        "type": "string",
                                        "example": "123"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "orderShipped": {
                      "{$request.body#/callbackUrl}?event={$request.body#/eventName}": {
                        "post": {
                          "description": "Very long description\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\nincididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis\nnostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\nfugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\nculpa qui officia deserunt mollit anim id est laborum.\n",
                          "requestBody": {
                            "content": {
                              "application/json": {
                                "schema": {
                                  "type": "object",
                                  "properties": {
                                    "orderId": {
                                      "type": "string",
                                      "example": "123"
                                    },
                                    "timestamp": {
                                      "type": "string",
                                      "format": "date-time",
                                      "example": "2018-10-19T16:46:45Z"
                                    },
                                    "estimatedDeliveryDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "example": "2018-11-11T16:00:00Z"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "responses": {
                            "200": {
                              "description": "Callback successfully processed and no retries will be performed"
                            }
                          }
                        }
                      }
                    },
                    "orderDelivered": {
                      "http://notificationServer.com?url={$request.body#/callbackUrl}&event={$request.body#/eventName}": {
                        "post": {
                          "deprecated": true,
                          "summary": "Order delivered",
                          "description": "A callback triggered every time an Order is delivered to the recipient",
                          "requestBody": {
                            "content": {
                              "application/json": {
                                "schema": {
                                  "type": "object",
                                  "properties": {
                                    "orderId": {
                                      "type": "string",
                                      "example": "123"
                                    },
                                    "timestamp": {
                                      "type": "string",
                                      "format": "date-time",
                                      "example": "2018-10-19T16:46:45Z"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "responses": {
                            "200": {
                              "description": "Callback successfully processed and no retries will be performed"
                            }
                          }
                        }
                      }
                    }
                  },
                  "method": "post",
                  "path": "/store/subscribe",
                  "servers": [
                    {
                      "url": "https://petstore.swagger.io/v2",
                      "description": "Default server"
                    },
                    {
                      "url": "https://petstore.swagger.io/sandbox",
                      "description": "Sandbox server"
                    }
                  ],
                  "securitySchemes": {
                    "petstore_auth": {
                      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
                      "type": "oauth2",
                      "flows": {
                        "implicit": {
                          "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
                          "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
                      "type": "apiKey",
                      "name": "api_key",
                      "in": "header"
                    }
                  },
                  "jsonRequestBodyExample": {
                    "callbackUrl": "https://myserver.com/send/callback/here",
                    "eventName": "orderInProgress"
                  },
                  "info": {
                    "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
                    "version": "2.0.0",
                    "title": "Swagger Petstore YAML",
                    "termsOfService": "http://swagger.io/terms/",
                    "contact": {
                      "name": "API Support",
                      "email": "apiteam@swagger.io",
                      "url": "https://github.com/Redocly/redoc"
                    },
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    }
                  },
                  "postman": {
                    "name": "Subscribe to the Store events",
                    "description": {
                      "content": "Add subscription for a store events",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "subscribe"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "\"\"",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  }
                },
                "sidebar_class_name": "post api-method",
                "info_path": "docs/petstore/swagger-petstore-yaml",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Petstore Orders",
                "permalink": "/OpenLeakedDocs/docs/petstore/store"
              },
              "next": {
                "title": "Updates a pet in the store with form data",
                "permalink": "/OpenLeakedDocs/docs/petstore/update-pet-with-form"
              }
            },
            {
              "unversionedId": "petstore/swagger-petstore-yaml",
              "id": "petstore/swagger-petstore-yaml",
              "title": "Swagger Petstore YAML",
              "description": "This is a sample server Petstore server.",
              "source": "@site/docs/petstore/swagger-petstore-yaml.info.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/swagger-petstore-yaml",
              "permalink": "/OpenLeakedDocs/docs/petstore/swagger-petstore-yaml",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "sidebarPosition": 0,
              "frontMatter": {
                "id": "swagger-petstore-yaml",
                "title": "Swagger Petstore YAML",
                "description": "This is a sample server Petstore server.",
                "sidebar_label": "Introduction",
                "sidebar_position": 0,
                "hide_title": true,
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Verify user",
                "permalink": "/OpenLeakedDocs/docs/API/verify-user"
              },
              "next": {
                "title": "Add a new pet to the store",
                "permalink": "/OpenLeakedDocs/docs/petstore/add-pet"
              }
            },
            {
              "unversionedId": "petstore/update-pet",
              "id": "petstore/update-pet",
              "title": "Update an existing pet",
              "description": "",
              "source": "@site/docs/petstore/update-pet.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/update-pet",
              "permalink": "/OpenLeakedDocs/docs/petstore/update-pet",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "update-pet",
                "title": "Update an existing pet",
                "description": "",
                "sidebar_label": "Update an existing pet",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "pet"
                  ],
                  "description": "",
                  "operationId": "updatePet",
                  "responses": {
                    "400": {
                      "description": "Invalid ID supplied"
                    },
                    "404": {
                      "description": "Pet not found"
                    },
                    "405": {
                      "description": "Validation exception"
                    }
                  },
                  "security": [
                    {
                      "petstore_auth": [
                        "write:pets",
                        "read:pets"
                      ]
                    }
                  ],
                  "x-codeSamples": [
                    {
                      "lang": "PHP",
                      "source": "$form = new \\PetStore\\Entities\\Pet();\n$form->setPetId(1);\n$form->setPetType(\"Dog\");\n$form->setName(\"Rex\");\n// set other fields\ntry {\n    $pet = $client->pets()->update($form);\n} catch (UnprocessableEntityException $e) {\n    var_dump($e->getErrors());\n}\n"
                    }
                  ],
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "allOf": [
                            {
                              "description": "My Pet",
                              "title": "Pettie"
                            },
                            {
                              "title": "pet",
                              "type": "object",
                              "required": [
                                "name",
                                "photoUrls"
                              ],
                              "discriminator": {
                                "propertyName": "petType",
                                "mapping": {
                                  "cat": {
                                    "title": "cat",
                                    "description": "A representation of a cat",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "huntingSkill": {
                                            "type": "string",
                                            "description": "The measured skill for hunting",
                                            "default": "lazy",
                                            "example": "adventurous",
                                            "enum": [
                                              "clueless",
                                              "lazy",
                                              "adventurous",
                                              "aggressive"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "huntingSkill"
                                        ]
                                      }
                                    ]
                                  },
                                  "dog": {
                                    "title": "dog",
                                    "description": "A representation of a dog",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "packSize": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The size of the pack the dog is from",
                                            "default": 1,
                                            "minimum": 1
                                          }
                                        },
                                        "required": [
                                          "packSize"
                                        ]
                                      }
                                    ]
                                  },
                                  "bee": {
                                    "title": "bee",
                                    "description": "A representation of a honey bee",
                                    "allOf": [
                                      "circular(pet)",
                                      {
                                        "type": "object",
                                        "properties": {
                                          "honeyPerDay": {
                                            "type": "number",
                                            "description": "Average amount of honey produced per day in ounces",
                                            "example": 3.14,
                                            "multipleOf": 0.01
                                          }
                                        },
                                        "required": [
                                          "honeyPerDay"
                                        ]
                                      }
                                    ]
                                  }
                                }
                              },
                              "properties": {
                                "id": {
                                  "externalDocs": {
                                    "description": "Find more info here",
                                    "url": "https://example.com"
                                  },
                                  "description": "Pet ID",
                                  "allOf": [
                                    {
                                      "type": "integer",
                                      "format": "int64",
                                      "readOnly": true,
                                      "title": "Id"
                                    }
                                  ]
                                },
                                "category": {
                                  "description": "Categories this pet belongs to",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "description": "Category ID",
                                          "allOf": [
                                            {
                                              "type": "integer",
                                              "format": "int64",
                                              "readOnly": true,
                                              "title": "Id"
                                            }
                                          ]
                                        },
                                        "name": {
                                          "description": "Category name",
                                          "type": "string",
                                          "minLength": 1
                                        },
                                        "sub": {
                                          "description": "Test Sub Category",
                                          "type": "object",
                                          "properties": {
                                            "prop1": {
                                              "type": "string",
                                              "description": "Dumb Property"
                                            }
                                          }
                                        }
                                      },
                                      "xml": {
                                        "name": "Category"
                                      },
                                      "title": "Category"
                                    }
                                  ]
                                },
                                "name": {
                                  "description": "The name given to a pet",
                                  "type": "string",
                                  "example": "Guru"
                                },
                                "photoUrls": {
                                  "description": "The list of URL to a cute photos featuring pet",
                                  "type": "array",
                                  "maxItems": 20,
                                  "xml": {
                                    "name": "photoUrl",
                                    "wrapped": true
                                  },
                                  "items": {
                                    "type": "string",
                                    "format": "url"
                                  }
                                },
                                "friend": {
                                  "allOf": [
                                    "circular(pet)"
                                  ]
                                },
                                "tags": {
                                  "description": "Tags attached to the pet",
                                  "type": "array",
                                  "minItems": 1,
                                  "xml": {
                                    "name": "tag",
                                    "wrapped": true
                                  },
                                  "items": {
                                    "title": "tag",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "Tag ID",
                                        "allOf": [
                                          {
                                            "type": "integer",
                                            "format": "int64",
                                            "readOnly": true,
                                            "title": "Id"
                                          }
                                        ]
                                      },
                                      "name": {
                                        "description": "Tag name",
                                        "type": "string",
                                        "minLength": 1
                                      }
                                    },
                                    "xml": {
                                      "name": "Tag"
                                    }
                                  }
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Pet status in the store",
                                  "enum": [
                                    "available",
                                    "pending",
                                    "sold"
                                  ]
                                },
                                "petType": {
                                  "description": "Type of a pet",
                                  "type": "string",
                                  "oneOf": [
                                    {
                                      "title": "cat",
                                      "description": "A representation of a cat",
                                      "allOf": [
                                        "circular(pet)",
                                        {
                                          "type": "object",
                                          "properties": {
                                            "huntingSkill": {
                                              "type": "string",
                                              "description": "The measured skill for hunting",
                                              "default": "lazy",
                                              "example": "adventurous",
                                              "enum": [
                                                "clueless",
                                                "lazy",
                                                "adventurous",
                                                "aggressive"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "huntingSkill"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "title": "dog",
                                      "description": "A representation of a dog",
                                      "allOf": [
                                        "circular(pet)",
                                        {
                                          "type": "object",
                                          "properties": {
                                            "packSize": {
                                              "type": "integer",
                                              "format": "int32",
                                              "description": "The size of the pack the dog is from",
                                              "default": 1,
                                              "minimum": 1
                                            }
                                          },
                                          "required": [
                                            "packSize"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "title": "bee",
                                      "description": "A representation of a honey bee",
                                      "allOf": [
                                        "circular(pet)",
                                        {
                                          "type": "object",
                                          "properties": {
                                            "honeyPerDay": {
                                              "type": "number",
                                              "description": "Average amount of honey produced per day in ounces",
                                              "example": 3.14,
                                              "multipleOf": 0.01
                                            }
                                          },
                                          "required": [
                                            "honeyPerDay"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              "xml": {
                                "name": "Pet"
                              }
                            }
                          ]
                        }
                      },
                      "application/xml": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "hooray"
                            }
                          }
                        }
                      }
                    },
                    "description": "Pet object that needs to be added to the store",
                    "required": true
                  },
                  "parameters": [
                    {
                      "name": "Accept-Language",
                      "in": "header",
                      "description": "The language you prefer for messages. Supported values are en-AU, en-CA, en-GB, en-US",
                      "example": "en-US",
                      "required": false,
                      "schema": {
                        "type": "string",
                        "default": "en-AU"
                      }
                    },
                    {
                      "name": "cookieParam",
                      "in": "cookie",
                      "description": "Some cookie",
                      "required": true,
                      "schema": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  ],
                  "method": "put",
                  "path": "/pet",
                  "servers": [
                    {
                      "url": "https://petstore.swagger.io/v2",
                      "description": "Default server"
                    },
                    {
                      "url": "https://petstore.swagger.io/sandbox",
                      "description": "Sandbox server"
                    }
                  ],
                  "securitySchemes": {
                    "petstore_auth": {
                      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
                      "type": "oauth2",
                      "flows": {
                        "implicit": {
                          "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
                          "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
                      "type": "apiKey",
                      "name": "api_key",
                      "in": "header"
                    }
                  },
                  "jsonRequestBodyExample": {
                    "category": {
                      "name": "string",
                      "sub": {
                        "prop1": "string"
                      }
                    },
                    "name": "Guru",
                    "photoUrls": [
                      "string"
                    ],
                    "friend": {},
                    "tags": [
                      {
                        "name": "string"
                      }
                    ],
                    "status": "available",
                    "petType": {
                      "huntingSkill": "adventurous"
                    }
                  },
                  "info": {
                    "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
                    "version": "2.0.0",
                    "title": "Swagger Petstore YAML",
                    "termsOfService": "http://swagger.io/terms/",
                    "contact": {
                      "name": "API Support",
                      "email": "apiteam@swagger.io",
                      "url": "https://github.com/Redocly/redoc"
                    },
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    }
                  },
                  "postman": {
                    "name": "Update an existing pet",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": {
                          "content": "The language you prefer for messages. Supported values are en-AU, en-CA, en-GB, en-US",
                          "type": "text/plain"
                        },
                        "key": "Accept-Language",
                        "value": ""
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "\"\"",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  }
                },
                "sidebar_class_name": "put api-method",
                "info_path": "docs/petstore/swagger-petstore-yaml",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Updates a pet in the store with form data",
                "permalink": "/OpenLeakedDocs/docs/petstore/update-pet-with-form"
              },
              "next": {
                "title": "Updated user",
                "permalink": "/OpenLeakedDocs/docs/petstore/update-user"
              }
            },
            {
              "unversionedId": "petstore/update-pet-with-form",
              "id": "petstore/update-pet-with-form",
              "title": "Updates a pet in the store with form data",
              "description": "",
              "source": "@site/docs/petstore/update-pet-with-form.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/update-pet-with-form",
              "permalink": "/OpenLeakedDocs/docs/petstore/update-pet-with-form",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "update-pet-with-form",
                "title": "Updates a pet in the store with form data",
                "description": "",
                "sidebar_label": "Updates a pet in the store with form data",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "pet"
                  ],
                  "description": "",
                  "operationId": "updatePetWithForm",
                  "parameters": [
                    {
                      "name": "petId",
                      "in": "path",
                      "description": "ID of pet that needs to be updated",
                      "required": true,
                      "schema": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  ],
                  "responses": {
                    "405": {
                      "description": "Invalid input"
                    }
                  },
                  "security": [
                    {
                      "petstore_auth": [
                        "write:pets",
                        "read:pets"
                      ]
                    }
                  ],
                  "requestBody": {
                    "content": {
                      "application/x-www-form-urlencoded": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Updated name of the pet",
                              "type": "string"
                            },
                            "status": {
                              "description": "Updated status of the pet",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "method": "post",
                  "path": "/pet/{petId}",
                  "servers": [
                    {
                      "url": "https://petstore.swagger.io/v2",
                      "description": "Default server"
                    },
                    {
                      "url": "https://petstore.swagger.io/sandbox",
                      "description": "Sandbox server"
                    }
                  ],
                  "securitySchemes": {
                    "petstore_auth": {
                      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
                      "type": "oauth2",
                      "flows": {
                        "implicit": {
                          "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
                          "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
                      "type": "apiKey",
                      "name": "api_key",
                      "in": "header"
                    }
                  },
                  "info": {
                    "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
                    "version": "2.0.0",
                    "title": "Swagger Petstore YAML",
                    "termsOfService": "http://swagger.io/terms/",
                    "contact": {
                      "name": "API Support",
                      "email": "apiteam@swagger.io",
                      "url": "https://github.com/Redocly/redoc"
                    },
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    }
                  },
                  "postman": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": []
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  }
                },
                "sidebar_class_name": "post api-method",
                "info_path": "docs/petstore/swagger-petstore-yaml",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Subscribe to the Store events",
                "permalink": "/OpenLeakedDocs/docs/petstore/subscribe-to-the-store-events"
              },
              "next": {
                "title": "Update an existing pet",
                "permalink": "/OpenLeakedDocs/docs/petstore/update-pet"
              }
            },
            {
              "unversionedId": "petstore/update-user",
              "id": "petstore/update-user",
              "title": "Updated user",
              "description": "This can only be done by the logged in user.",
              "source": "@site/docs/petstore/update-user.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/update-user",
              "permalink": "/OpenLeakedDocs/docs/petstore/update-user",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "update-user",
                "title": "Updated user",
                "description": "This can only be done by the logged in user.",
                "sidebar_label": "Updated user",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "user"
                  ],
                  "description": "This can only be done by the logged in user.",
                  "operationId": "updateUser",
                  "parameters": [
                    {
                      "name": "username",
                      "in": "path",
                      "description": "name that need to be deleted",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "400": {
                      "description": "Invalid user supplied"
                    },
                    "404": {
                      "description": "User not found"
                    }
                  },
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64",
                              "readOnly": true,
                              "title": "Id"
                            },
                            "pet": {
                              "oneOf": [
                                {
                                  "title": "pet",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "photoUrls"
                                  ],
                                  "discriminator": {
                                    "propertyName": "petType",
                                    "mapping": {
                                      "cat": {
                                        "title": "cat",
                                        "description": "A representation of a cat",
                                        "allOf": [
                                          "circular(pet)",
                                          {
                                            "type": "object",
                                            "properties": {
                                              "huntingSkill": {
                                                "type": "string",
                                                "description": "The measured skill for hunting",
                                                "default": "lazy",
                                                "example": "adventurous",
                                                "enum": [
                                                  "clueless",
                                                  "lazy",
                                                  "adventurous",
                                                  "aggressive"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "huntingSkill"
                                            ]
                                          }
                                        ]
                                      },
                                      "dog": {
                                        "title": "dog",
                                        "description": "A representation of a dog",
                                        "allOf": [
                                          "circular(pet)",
                                          {
                                            "type": "object",
                                            "properties": {
                                              "packSize": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "The size of the pack the dog is from",
                                                "default": 1,
                                                "minimum": 1
                                              }
                                            },
                                            "required": [
                                              "packSize"
                                            ]
                                          }
                                        ]
                                      },
                                      "bee": {
                                        "title": "bee",
                                        "description": "A representation of a honey bee",
                                        "allOf": [
                                          "circular(pet)",
                                          {
                                            "type": "object",
                                            "properties": {
                                              "honeyPerDay": {
                                                "type": "number",
                                                "description": "Average amount of honey produced per day in ounces",
                                                "example": 3.14,
                                                "multipleOf": 0.01
                                              }
                                            },
                                            "required": [
                                              "honeyPerDay"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "properties": {
                                    "id": {
                                      "externalDocs": {
                                        "description": "Find more info here",
                                        "url": "https://example.com"
                                      },
                                      "description": "Pet ID",
                                      "allOf": [
                                        {
                                          "type": "integer",
                                          "format": "int64",
                                          "readOnly": true,
                                          "title": "Id"
                                        }
                                      ]
                                    },
                                    "category": {
                                      "description": "Categories this pet belongs to",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "description": "Category ID",
                                              "allOf": [
                                                {
                                                  "type": "integer",
                                                  "format": "int64",
                                                  "readOnly": true,
                                                  "title": "Id"
                                                }
                                              ]
                                            },
                                            "name": {
                                              "description": "Category name",
                                              "type": "string",
                                              "minLength": 1
                                            },
                                            "sub": {
                                              "description": "Test Sub Category",
                                              "type": "object",
                                              "properties": {
                                                "prop1": {
                                                  "type": "string",
                                                  "description": "Dumb Property"
                                                }
                                              }
                                            }
                                          },
                                          "xml": {
                                            "name": "Category"
                                          },
                                          "title": "Category"
                                        }
                                      ]
                                    },
                                    "name": {
                                      "description": "The name given to a pet",
                                      "type": "string",
                                      "example": "Guru"
                                    },
                                    "photoUrls": {
                                      "description": "The list of URL to a cute photos featuring pet",
                                      "type": "array",
                                      "maxItems": 20,
                                      "xml": {
                                        "name": "photoUrl",
                                        "wrapped": true
                                      },
                                      "items": {
                                        "type": "string",
                                        "format": "url"
                                      }
                                    },
                                    "friend": {
                                      "allOf": [
                                        "circular(pet)"
                                      ]
                                    },
                                    "tags": {
                                      "description": "Tags attached to the pet",
                                      "type": "array",
                                      "minItems": 1,
                                      "xml": {
                                        "name": "tag",
                                        "wrapped": true
                                      },
                                      "items": {
                                        "title": "tag",
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "description": "Tag ID",
                                            "allOf": [
                                              {
                                                "type": "integer",
                                                "format": "int64",
                                                "readOnly": true,
                                                "title": "Id"
                                              }
                                            ]
                                          },
                                          "name": {
                                            "description": "Tag name",
                                            "type": "string",
                                            "minLength": 1
                                          }
                                        },
                                        "xml": {
                                          "name": "Tag"
                                        }
                                      }
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "Pet status in the store",
                                      "enum": [
                                        "available",
                                        "pending",
                                        "sold"
                                      ]
                                    },
                                    "petType": {
                                      "description": "Type of a pet",
                                      "type": "string",
                                      "oneOf": [
                                        {
                                          "title": "cat",
                                          "description": "A representation of a cat",
                                          "allOf": [
                                            "circular(pet)",
                                            {
                                              "type": "object",
                                              "properties": {
                                                "huntingSkill": {
                                                  "type": "string",
                                                  "description": "The measured skill for hunting",
                                                  "default": "lazy",
                                                  "example": "adventurous",
                                                  "enum": [
                                                    "clueless",
                                                    "lazy",
                                                    "adventurous",
                                                    "aggressive"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "huntingSkill"
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "title": "dog",
                                          "description": "A representation of a dog",
                                          "allOf": [
                                            "circular(pet)",
                                            {
                                              "type": "object",
                                              "properties": {
                                                "packSize": {
                                                  "type": "integer",
                                                  "format": "int32",
                                                  "description": "The size of the pack the dog is from",
                                                  "default": 1,
                                                  "minimum": 1
                                                }
                                              },
                                              "required": [
                                                "packSize"
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "title": "bee",
                                          "description": "A representation of a honey bee",
                                          "allOf": [
                                            "circular(pet)",
                                            {
                                              "type": "object",
                                              "properties": {
                                                "honeyPerDay": {
                                                  "type": "number",
                                                  "description": "Average amount of honey produced per day in ounces",
                                                  "example": 3.14,
                                                  "multipleOf": 0.01
                                                }
                                              },
                                              "required": [
                                                "honeyPerDay"
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "xml": {
                                    "name": "Pet"
                                  }
                                },
                                {
                                  "title": "tag",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "description": "Tag ID",
                                      "allOf": [
                                        {
                                          "type": "integer",
                                          "format": "int64",
                                          "readOnly": true,
                                          "title": "Id"
                                        }
                                      ]
                                    },
                                    "name": {
                                      "description": "Tag name",
                                      "type": "string",
                                      "minLength": 1
                                    }
                                  },
                                  "xml": {
                                    "name": "Tag"
                                  }
                                }
                              ]
                            },
                            "username": {
                              "description": "User supplied username",
                              "type": "string",
                              "minLength": 4,
                              "example": "John78"
                            },
                            "firstName": {
                              "description": "User first name",
                              "type": "string",
                              "minLength": 1,
                              "example": "John"
                            },
                            "lastName": {
                              "description": "User last name",
                              "type": "string",
                              "minLength": 1,
                              "example": "Smith"
                            },
                            "email": {
                              "description": "User email address",
                              "type": "string",
                              "format": "email",
                              "example": "john.smith@example.com"
                            },
                            "password": {
                              "type": "string",
                              "description": "User password, MUST contain a mix of upper and lower case letters, as well as digits",
                              "format": "password",
                              "minLength": 8,
                              "pattern": "/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/",
                              "example": "drowssaP123"
                            },
                            "phone": {
                              "description": "User phone number in international format",
                              "type": "string",
                              "pattern": "/^\\+(?:[0-9]-?){6,14}[0-9]$/",
                              "example": "+1-202-555-0192"
                            },
                            "userStatus": {
                              "description": "User status",
                              "type": "integer",
                              "format": "int32"
                            }
                          },
                          "xml": {
                            "name": "User"
                          },
                          "title": "User"
                        }
                      }
                    },
                    "description": "Updated user object",
                    "required": true
                  },
                  "method": "put",
                  "path": "/user/{username}",
                  "servers": [
                    {
                      "url": "https://petstore.swagger.io/v2",
                      "description": "Default server"
                    },
                    {
                      "url": "https://petstore.swagger.io/sandbox",
                      "description": "Sandbox server"
                    }
                  ],
                  "securitySchemes": {
                    "petstore_auth": {
                      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
                      "type": "oauth2",
                      "flows": {
                        "implicit": {
                          "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
                          "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
                      "type": "apiKey",
                      "name": "api_key",
                      "in": "header"
                    }
                  },
                  "jsonRequestBodyExample": {
                    "pet": {
                      "category": {
                        "name": "string",
                        "sub": {
                          "prop1": "string"
                        }
                      },
                      "name": "Guru",
                      "photoUrls": [
                        "string"
                      ],
                      "friend": {},
                      "tags": [
                        {
                          "name": "string"
                        }
                      ],
                      "status": "available",
                      "petType": {
                        "huntingSkill": "adventurous"
                      }
                    },
                    "username": "John78",
                    "firstName": "John",
                    "lastName": "Smith",
                    "email": "john.smith@example.com",
                    "password": "drowssaP123",
                    "phone": "+1-202-555-0192",
                    "userStatus": 0
                  },
                  "info": {
                    "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
                    "version": "2.0.0",
                    "title": "Swagger Petstore YAML",
                    "termsOfService": "http://swagger.io/terms/",
                    "contact": {
                      "name": "API Support",
                      "email": "apiteam@swagger.io",
                      "url": "https://github.com/Redocly/redoc"
                    },
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    }
                  },
                  "postman": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) name that need to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "\"\"",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    }
                  }
                },
                "sidebar_class_name": "put api-method",
                "info_path": "docs/petstore/swagger-petstore-yaml",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Update an existing pet",
                "permalink": "/OpenLeakedDocs/docs/petstore/update-pet"
              },
              "next": {
                "title": "uploads an image",
                "permalink": "/OpenLeakedDocs/docs/petstore/upload-file"
              }
            },
            {
              "unversionedId": "petstore/upload-file",
              "id": "petstore/upload-file",
              "title": "uploads an image",
              "description": "",
              "source": "@site/docs/petstore/upload-file.api.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/upload-file",
              "permalink": "/OpenLeakedDocs/docs/petstore/upload-file",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "upload-file",
                "title": "uploads an image",
                "description": "",
                "sidebar_label": "uploads an image",
                "hide_title": true,
                "hide_table_of_contents": true,
                "api": {
                  "tags": [
                    "pet"
                  ],
                  "description": "",
                  "operationId": "uploadFile",
                  "parameters": [
                    {
                      "name": "petId",
                      "in": "path",
                      "description": "ID of pet to update",
                      "required": true,
                      "schema": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "successful operation",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "type": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "title": "ApiResponse"
                          }
                        }
                      }
                    }
                  },
                  "security": [
                    {
                      "petstore_auth": [
                        "write:pets",
                        "read:pets"
                      ]
                    }
                  ],
                  "requestBody": {
                    "content": {
                      "application/octet-stream": {
                        "schema": {
                          "type": "string",
                          "format": "binary"
                        }
                      }
                    }
                  },
                  "method": "post",
                  "path": "/pet/{petId}/uploadImage",
                  "servers": [
                    {
                      "url": "https://petstore.swagger.io/v2",
                      "description": "Default server"
                    },
                    {
                      "url": "https://petstore.swagger.io/sandbox",
                      "description": "Sandbox server"
                    }
                  ],
                  "securitySchemes": {
                    "petstore_auth": {
                      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
                      "type": "oauth2",
                      "flows": {
                        "implicit": {
                          "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
                          "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
                      "type": "apiKey",
                      "name": "api_key",
                      "in": "header"
                    }
                  },
                  "info": {
                    "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
                    "version": "2.0.0",
                    "title": "Swagger Petstore YAML",
                    "termsOfService": "http://swagger.io/terms/",
                    "contact": {
                      "name": "API Support",
                      "email": "apiteam@swagger.io",
                      "url": "https://github.com/Redocly/redoc"
                    },
                    "x-logo": {
                      "url": "https://redocly.github.io/redoc/petstore-logo.png",
                      "altText": "Petstore logo"
                    },
                    "license": {
                      "name": "Apache 2.0",
                      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                    }
                  },
                  "postman": {
                    "name": "uploads an image",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/octet-stream"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "file"
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  }
                },
                "sidebar_class_name": "post api-method",
                "info_path": "docs/petstore/swagger-petstore-yaml",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Updated user",
                "permalink": "/OpenLeakedDocs/docs/petstore/update-user"
              },
              "next": {
                "title": "Users",
                "permalink": "/OpenLeakedDocs/docs/petstore/user"
              }
            },
            {
              "unversionedId": "petstore/user",
              "id": "petstore/user",
              "title": "Users",
              "description": "Users",
              "source": "@site/docs/petstore/user.tag.mdx",
              "sourceDirName": "petstore",
              "slug": "/petstore/user",
              "permalink": "/OpenLeakedDocs/docs/petstore/user",
              "draft": false,
              "editUrl": null,
              "tags": [],
              "version": "current",
              "frontMatter": {
                "id": "user",
                "title": "Users",
                "description": "Users",
                "custom_edit_url": null
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "uploads an image",
                "permalink": "/OpenLeakedDocs/docs/petstore/upload-file"
              }
            },
            {
              "unversionedId": "tutorial-basics/congratulations",
              "id": "tutorial-basics/congratulations",
              "title": "Congratulations!",
              "description": "You have just learned the basics of Docusaurus and made some changes to the initial template.",
              "source": "@site/docs/tutorial-basics/congratulations.md",
              "sourceDirName": "tutorial-basics",
              "slug": "/tutorial-basics/congratulations",
              "permalink": "/OpenLeakedDocs/docs/tutorial-basics/congratulations",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/congratulations.md",
              "tags": [
                {
                  "label": "test",
                  "permalink": "/OpenLeakedDocs/docs/tags/test"
                }
              ],
              "version": "current",
              "sidebarPosition": 6,
              "frontMatter": {
                "sidebar_position": 6,
                "tags": [
                  "test"
                ]
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Deploy your site",
                "permalink": "/OpenLeakedDocs/docs/tutorial-basics/deploy-your-site"
              },
              "next": {
                "title": "Tutorial - Extras",
                "permalink": "/OpenLeakedDocs/docs/category/tutorial---extras"
              }
            },
            {
              "unversionedId": "tutorial-basics/create-a-blog-post",
              "id": "tutorial-basics/create-a-blog-post",
              "title": "Create a Blog Post",
              "description": "Docusaurus creates a page for each blog post, but also a blog index page, a tag system, an RSS feed...",
              "source": "@site/docs/tutorial-basics/create-a-blog-post.md",
              "sourceDirName": "tutorial-basics",
              "slug": "/tutorial-basics/create-a-blog-post",
              "permalink": "/OpenLeakedDocs/docs/tutorial-basics/create-a-blog-post",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/create-a-blog-post.md",
              "tags": [
                {
                  "label": "test",
                  "permalink": "/OpenLeakedDocs/docs/tags/test"
                }
              ],
              "version": "current",
              "sidebarPosition": 3,
              "frontMatter": {
                "sidebar_position": 3,
                "tags": [
                  "test"
                ]
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Create a Document",
                "permalink": "/OpenLeakedDocs/docs/tutorial-basics/create-a-document"
              },
              "next": {
                "title": "Markdown Features",
                "permalink": "/OpenLeakedDocs/docs/tutorial-basics/markdown-features"
              }
            },
            {
              "unversionedId": "tutorial-basics/create-a-document",
              "id": "tutorial-basics/create-a-document",
              "title": "Create a Document",
              "description": "Documents are groups of pages connected through:",
              "source": "@site/docs/tutorial-basics/create-a-document.md",
              "sourceDirName": "tutorial-basics",
              "slug": "/tutorial-basics/create-a-document",
              "permalink": "/OpenLeakedDocs/docs/tutorial-basics/create-a-document",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/create-a-document.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Create a Page",
                "permalink": "/OpenLeakedDocs/docs/tutorial-basics/create-a-page"
              },
              "next": {
                "title": "Create a Blog Post",
                "permalink": "/OpenLeakedDocs/docs/tutorial-basics/create-a-blog-post"
              }
            },
            {
              "unversionedId": "tutorial-basics/create-a-page",
              "id": "tutorial-basics/create-a-page",
              "title": "Create a Page",
              "description": "Add Markdown or React files to src/pages to create a standalone page:",
              "source": "@site/docs/tutorial-basics/create-a-page.md",
              "sourceDirName": "tutorial-basics",
              "slug": "/tutorial-basics/create-a-page",
              "permalink": "/OpenLeakedDocs/docs/tutorial-basics/create-a-page",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/create-a-page.md",
              "tags": [
                {
                  "label": "test",
                  "permalink": "/OpenLeakedDocs/docs/tags/test"
                }
              ],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "tags": [
                  "test"
                ]
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Tutorial - Basics",
                "permalink": "/OpenLeakedDocs/docs/category/tutorial---basics"
              },
              "next": {
                "title": "Create a Document",
                "permalink": "/OpenLeakedDocs/docs/tutorial-basics/create-a-document"
              }
            },
            {
              "unversionedId": "tutorial-basics/deploy-your-site",
              "id": "tutorial-basics/deploy-your-site",
              "title": "Deploy your site",
              "description": "Docusaurus is a static-site-generator (also called Jamstack).",
              "source": "@site/docs/tutorial-basics/deploy-your-site.md",
              "sourceDirName": "tutorial-basics",
              "slug": "/tutorial-basics/deploy-your-site",
              "permalink": "/OpenLeakedDocs/docs/tutorial-basics/deploy-your-site",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/deploy-your-site.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 5,
              "frontMatter": {
                "sidebar_position": 5
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Markdown Features",
                "permalink": "/OpenLeakedDocs/docs/tutorial-basics/markdown-features"
              },
              "next": {
                "title": "Congratulations!",
                "permalink": "/OpenLeakedDocs/docs/tutorial-basics/congratulations"
              }
            },
            {
              "unversionedId": "tutorial-basics/markdown-features",
              "id": "tutorial-basics/markdown-features",
              "title": "Markdown Features",
              "description": "Docusaurus supports Markdown and a few additional features.",
              "source": "@site/docs/tutorial-basics/markdown-features.mdx",
              "sourceDirName": "tutorial-basics",
              "slug": "/tutorial-basics/markdown-features",
              "permalink": "/OpenLeakedDocs/docs/tutorial-basics/markdown-features",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/markdown-features.mdx",
              "tags": [],
              "version": "current",
              "sidebarPosition": 4,
              "frontMatter": {
                "sidebar_position": 4
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Create a Blog Post",
                "permalink": "/OpenLeakedDocs/docs/tutorial-basics/create-a-blog-post"
              },
              "next": {
                "title": "Deploy your site",
                "permalink": "/OpenLeakedDocs/docs/tutorial-basics/deploy-your-site"
              }
            },
            {
              "unversionedId": "tutorial-extras/manage-docs-versions",
              "id": "tutorial-extras/manage-docs-versions",
              "title": "Manage Docs Versions",
              "description": "Docusaurus can manage multiple versions of your docs.",
              "source": "@site/docs/tutorial-extras/manage-docs-versions.md",
              "sourceDirName": "tutorial-extras",
              "slug": "/tutorial-extras/manage-docs-versions",
              "permalink": "/OpenLeakedDocs/docs/tutorial-extras/manage-docs-versions",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-extras/manage-docs-versions.md",
              "tags": [
                {
                  "label": "test",
                  "permalink": "/OpenLeakedDocs/docs/tags/test"
                }
              ],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "tags": [
                  "test"
                ]
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Tutorial - Extras",
                "permalink": "/OpenLeakedDocs/docs/category/tutorial---extras"
              },
              "next": {
                "title": "Translate your site",
                "permalink": "/OpenLeakedDocs/docs/tutorial-extras/translate-your-site"
              }
            },
            {
              "unversionedId": "tutorial-extras/translate-your-site",
              "id": "tutorial-extras/translate-your-site",
              "title": "Translate your site",
              "description": "Let's translate docs/intro.md to French.",
              "source": "@site/docs/tutorial-extras/translate-your-site.md",
              "sourceDirName": "tutorial-extras",
              "slug": "/tutorial-extras/translate-your-site",
              "permalink": "/OpenLeakedDocs/docs/tutorial-extras/translate-your-site",
              "draft": false,
              "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-extras/translate-your-site.md",
              "tags": [
                {
                  "label": "test",
                  "permalink": "/OpenLeakedDocs/docs/tags/test"
                }
              ],
              "version": "current",
              "sidebarPosition": 2,
              "frontMatter": {
                "sidebar_position": 2,
                "tags": [
                  "test"
                ]
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Manage Docs Versions",
                "permalink": "/OpenLeakedDocs/docs/tutorial-extras/manage-docs-versions"
              },
              "next": {
                "title": "Introduction",
                "permalink": "/OpenLeakedDocs/docs/API/open-leaked-yaml"
              }
            }
          ],
          "drafts": [],
          "sidebars": {
            "tutorialSidebar": [
              {
                "type": "doc",
                "id": "intro"
              },
              {
                "type": "category",
                "label": "Tutorial - Basics",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "tutorial-basics/create-a-page"
                  },
                  {
                    "type": "doc",
                    "id": "tutorial-basics/create-a-document"
                  },
                  {
                    "type": "doc",
                    "id": "tutorial-basics/create-a-blog-post"
                  },
                  {
                    "type": "doc",
                    "id": "tutorial-basics/markdown-features"
                  },
                  {
                    "type": "doc",
                    "id": "tutorial-basics/deploy-your-site"
                  },
                  {
                    "type": "doc",
                    "id": "tutorial-basics/congratulations"
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "description": "5 minutes to learn the most important Docusaurus concepts.",
                  "slug": "/category/tutorial---basics",
                  "permalink": "/OpenLeakedDocs/docs/category/tutorial---basics"
                }
              },
              {
                "type": "category",
                "label": "Tutorial - Extras",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "tutorial-extras/manage-docs-versions"
                  },
                  {
                    "type": "doc",
                    "id": "tutorial-extras/translate-your-site"
                  }
                ],
                "link": {
                  "type": "generated-index",
                  "slug": "/category/tutorial---extras",
                  "permalink": "/OpenLeakedDocs/docs/category/tutorial---extras"
                }
              },
              {
                "type": "category",
                "label": "API",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "API/open-leaked-yaml",
                    "label": "Introduction"
                  },
                  {
                    "type": "doc",
                    "id": "API/allows-a-user-to-tip-the-maintainers-with-additional-breaches",
                    "label": "Allows a user to tip the maintainers with additional breaches",
                    "className": "post api-method"
                  },
                  {
                    "type": "doc",
                    "id": "API/authorisations"
                  },
                  {
                    "type": "doc",
                    "id": "API/authorise-an-existing-user",
                    "label": "Authorise an existing user",
                    "className": "post api-method"
                  },
                  {
                    "type": "doc",
                    "id": "API/checks-that-the-service-is-currently-running",
                    "label": "Checks that the service is currently running",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "API/create-a-new-password",
                    "label": "Create a new password",
                    "className": "post api-method"
                  },
                  {
                    "type": "doc",
                    "id": "API/email"
                  },
                  {
                    "type": "doc",
                    "id": "API/ends-current-the-current",
                    "label": "Ends current the current",
                    "className": "post api-method"
                  },
                  {
                    "type": "doc",
                    "id": "API/finds-associated-breaches",
                    "label": "Finds associated breaches",
                    "className": "post api-method"
                  },
                  {
                    "type": "doc",
                    "id": "API/healthcheck"
                  },
                  {
                    "type": "doc",
                    "id": "API/initiate-recovery-process",
                    "label": "Initiate recovery process",
                    "className": "post api-method"
                  },
                  {
                    "type": "doc",
                    "id": "API/password"
                  },
                  {
                    "type": "doc",
                    "id": "API/retrieves-the-id-of-an-email",
                    "label": "Retrieves the ID of an email",
                    "className": "post api-method"
                  },
                  {
                    "type": "doc",
                    "id": "API/simple-lookup-in-the-database",
                    "label": "Simple lookup in the database",
                    "className": "post api-method"
                  },
                  {
                    "type": "doc",
                    "id": "API/subscribe"
                  },
                  {
                    "type": "doc",
                    "id": "API/subscribe"
                  },
                  {
                    "type": "doc",
                    "id": "API/tip"
                  },
                  {
                    "type": "doc",
                    "id": "API/unsubscribe",
                    "label": "Unsubscribe",
                    "className": "post api-method"
                  },
                  {
                    "type": "doc",
                    "id": "API/username"
                  },
                  {
                    "type": "doc",
                    "id": "API/verification-of-the-temporary-6-digit-code",
                    "label": "Verification of the temporary 6-digit code.",
                    "className": "post api-method"
                  },
                  {
                    "type": "doc",
                    "id": "API/verify-user",
                    "label": "Verify user",
                    "className": "post api-method"
                  }
                ]
              },
              {
                "type": "category",
                "label": "petstore",
                "collapsible": true,
                "collapsed": true,
                "items": [
                  {
                    "type": "doc",
                    "id": "petstore/swagger-petstore-yaml",
                    "label": "Introduction"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/add-pet",
                    "label": "Add a new pet to the store",
                    "className": "post api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/create-user",
                    "label": "Create user",
                    "className": "post api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/create-users-with-array-input",
                    "label": "Creates list of users with given input array",
                    "className": "post api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/create-users-with-list-input",
                    "label": "Creates list of users with given input list",
                    "className": "post api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/delete-order",
                    "label": "Delete purchase order by ID",
                    "className": "delete api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/delete-pet",
                    "label": "Deletes a pet",
                    "className": "delete api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/delete-user",
                    "label": "Delete user",
                    "className": "delete api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/find-pets-by-status",
                    "label": "Finds Pets by status",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/find-pets-by-tags",
                    "label": "Finds Pets by tags",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/get-inventory",
                    "label": "Returns pet inventories by status",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/get-order-by-id",
                    "label": "Find purchase order by ID",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/get-pet-by-id",
                    "label": "Find pet by ID",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/get-user-by-name",
                    "label": "Get user by user name",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/login-user",
                    "label": "Logs user into the system",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/logout-user",
                    "label": "Logs out current logged in user session",
                    "className": "get api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/new-pet",
                    "label": "New pet",
                    "className": "event api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/pet"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/place-order",
                    "label": "Place an order for a pet",
                    "className": "post api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/store"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/subscribe-to-the-store-events",
                    "label": "Subscribe to the Store events",
                    "className": "post api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/update-pet-with-form",
                    "label": "Updates a pet in the store with form data",
                    "className": "post api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/update-pet",
                    "label": "Update an existing pet",
                    "className": "put api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/update-user",
                    "label": "Updated user",
                    "className": "put api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/upload-file",
                    "label": "uploads an image",
                    "className": "post api-method"
                  },
                  {
                    "type": "doc",
                    "id": "petstore/user"
                  }
                ]
              }
            ],
            "openApiSidebar": [
              {
                "type": "category",
                "label": "API Documentation",
                "link": {
                  "type": "generated-index",
                  "title": "API Docs",
                  "description": "This is a sample server Petstore server. You can find out more about Swagger at http://swagger.io or on irc.freenode.net, #swagger. For this sample, you can use the api key special-key to test the authorization filters.",
                  "slug": "/category/petstore-api",
                  "permalink": "/OpenLeakedDocs/docs/category/petstore-api"
                },
                "items": [
                  {
                    "type": "doc",
                    "id": "API/open-leaked-yaml"
                  },
                  {
                    "type": "category",
                    "label": "HealthCheck",
                    "link": {
                      "type": "doc",
                      "id": "API/healthcheck"
                    },
                    "items": [
                      {
                        "type": "doc",
                        "id": "API/checks-that-the-service-is-currently-running",
                        "label": "Checks that the service is currently running",
                        "className": "api-method get",
                        "translatable": true
                      }
                    ],
                    "collapsed": true,
                    "collapsible": true
                  },
                  {
                    "type": "category",
                    "label": "Authorisations",
                    "link": {
                      "type": "doc",
                      "id": "API/authorisations"
                    },
                    "items": [
                      {
                        "type": "doc",
                        "id": "API/authorise-an-existing-user",
                        "label": "Authorise an existing user",
                        "className": "api-method post",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "API/ends-current-the-current",
                        "label": "Ends current the current",
                        "className": "api-method post",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "API/verification-of-the-temporary-6-digit-code",
                        "label": "Verification of the temporary 6-digit code.",
                        "className": "api-method post",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "API/initiate-recovery-process",
                        "label": "Initiate recovery process",
                        "className": "api-method post",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "API/create-a-new-password",
                        "label": "Create a new password",
                        "className": "api-method post",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "API/authorise-an-existing-user",
                        "label": "Authorise an existing user",
                        "className": "api-method post",
                        "translatable": true
                      }
                    ],
                    "collapsed": true,
                    "collapsible": true
                  },
                  {
                    "type": "category",
                    "label": "Tip",
                    "link": {
                      "type": "doc",
                      "id": "API/tip"
                    },
                    "items": [
                      {
                        "type": "doc",
                        "id": "API/allows-a-user-to-tip-the-maintainers-with-additional-breaches",
                        "label": "Allows a user to tip the maintainers with additional breaches",
                        "className": "api-method post",
                        "translatable": true
                      }
                    ],
                    "collapsed": true,
                    "collapsible": true
                  },
                  {
                    "type": "category",
                    "label": "email",
                    "link": {
                      "type": "doc",
                      "id": "API/email"
                    },
                    "items": [
                      {
                        "type": "doc",
                        "id": "API/retrieves-the-id-of-an-email",
                        "label": "Retrieves the ID of an email",
                        "className": "api-method post",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "API/finds-associated-breaches",
                        "label": "Finds associated breaches",
                        "className": "api-method post",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "API/simple-lookup-in-the-database",
                        "label": "Simple lookup in the database",
                        "className": "api-method post",
                        "translatable": true
                      }
                    ],
                    "collapsed": true,
                    "collapsible": true
                  },
                  {
                    "type": "category",
                    "label": "password",
                    "link": {
                      "type": "doc",
                      "id": "API/password"
                    },
                    "items": [
                      {
                        "type": "doc",
                        "id": "API/simple-lookup-in-the-database",
                        "label": "Simple lookup in the database",
                        "className": "api-method post",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "API/finds-associated-breaches",
                        "label": "Finds associated breaches",
                        "className": "api-method post",
                        "translatable": true
                      }
                    ],
                    "collapsed": true,
                    "collapsible": true
                  },
                  {
                    "type": "category",
                    "label": "subscribe",
                    "link": {
                      "type": "doc",
                      "id": "API/subscribe"
                    },
                    "items": [
                      {
                        "type": "doc",
                        "id": "API/verify-user",
                        "label": "Verify user",
                        "className": "api-method post",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "API/subscribe",
                        "label": "Subscribe",
                        "className": "api-method post",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "API/unsubscribe",
                        "label": "Unsubscribe",
                        "className": "api-method post",
                        "translatable": true
                      }
                    ],
                    "collapsed": true,
                    "collapsible": true
                  },
                  {
                    "type": "category",
                    "label": "username",
                    "link": {
                      "type": "doc",
                      "id": "API/username"
                    },
                    "items": [
                      {
                        "type": "doc",
                        "id": "API/simple-lookup-in-the-database",
                        "label": "Simple lookup in the database",
                        "className": "api-method post",
                        "translatable": true
                      },
                      {
                        "type": "doc",
                        "id": "API/finds-associated-breaches",
                        "label": "Finds associated breaches",
                        "className": "api-method post",
                        "translatable": true
                      }
                    ],
                    "collapsed": true,
                    "collapsible": true
                  }
                ],
                "collapsed": true,
                "collapsible": true
              }
            ]
          }
        }
      ]
    }
  },
  "docusaurus-plugin-content-blog": {
    "default": {
      "blogSidebarTitle": "Recent posts",
      "blogPosts": [
        {
          "id": "welcome",
          "metadata": {
            "permalink": "/OpenLeakedDocs/blog/welcome",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2021-08-26-welcome/index.md",
            "source": "@site/blog/2021-08-26-welcome/index.md",
            "title": "Welcome",
            "description": "Docusaurus blogging features are powered by the blog plugin.",
            "date": "2021-08-26T00:00:00.000Z",
            "formattedDate": "August 26, 2021",
            "tags": [
              {
                "label": "facebook",
                "permalink": "/OpenLeakedDocs/blog/tags/facebook"
              },
              {
                "label": "hello",
                "permalink": "/OpenLeakedDocs/blog/tags/hello"
              },
              {
                "label": "docusaurus",
                "permalink": "/OpenLeakedDocs/blog/tags/docusaurus"
              }
            ],
            "readingTime": 0.405,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Sébastien Lorber",
                "title": "Docusaurus maintainer",
                "url": "https://sebastienlorber.com",
                "imageURL": "https://github.com/slorber.png",
                "key": "slorber"
              },
              {
                "name": "Yangshun Tay",
                "title": "Front End Engineer @ Facebook",
                "url": "https://github.com/yangshun",
                "imageURL": "https://github.com/yangshun.png",
                "key": "yangshun"
              }
            ],
            "frontMatter": {
              "slug": "welcome",
              "title": "Welcome",
              "authors": [
                "slorber",
                "yangshun"
              ],
              "tags": [
                "facebook",
                "hello",
                "docusaurus"
              ]
            },
            "nextItem": {
              "title": "MDX Blog Post",
              "permalink": "/OpenLeakedDocs/blog/mdx-blog-post"
            }
          },
          "content": "[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\n\nSimply add Markdown files (or folders) to the `blog` directory.\n\nRegular blog authors can be added to `authors.yml`.\n\nThe blog post date can be extracted from filenames, such as:\n\n- `2019-05-30-welcome.md`\n- `2019-05-30-welcome/index.md`\n\nA blog post folder can be convenient to co-locate blog post images:\n\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\n\nThe blog supports tags as well!\n\n**And if you don't want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."
        },
        {
          "id": "mdx-blog-post",
          "metadata": {
            "permalink": "/OpenLeakedDocs/blog/mdx-blog-post",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2021-08-01-mdx-blog-post.mdx",
            "source": "@site/blog/2021-08-01-mdx-blog-post.mdx",
            "title": "MDX Blog Post",
            "description": "Blog posts support Docusaurus Markdown features, such as MDX.",
            "date": "2021-08-01T00:00:00.000Z",
            "formattedDate": "August 1, 2021",
            "tags": [
              {
                "label": "docusaurus",
                "permalink": "/OpenLeakedDocs/blog/tags/docusaurus"
              }
            ],
            "readingTime": 0.175,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Sébastien Lorber",
                "title": "Docusaurus maintainer",
                "url": "https://sebastienlorber.com",
                "imageURL": "https://github.com/slorber.png",
                "key": "slorber"
              }
            ],
            "frontMatter": {
              "slug": "mdx-blog-post",
              "title": "MDX Blog Post",
              "authors": [
                "slorber"
              ],
              "tags": [
                "docusaurus"
              ]
            },
            "prevItem": {
              "title": "Welcome",
              "permalink": "/OpenLeakedDocs/blog/welcome"
            },
            "nextItem": {
              "title": "Long Blog Post",
              "permalink": "/OpenLeakedDocs/blog/long-blog-post"
            }
          },
          "content": "Blog posts support [Docusaurus Markdown features](https://docusaurus.io/docs/markdown-features), such as [MDX](https://mdxjs.com/).\n\n:::tip\n\nUse the power of React to create interactive blog posts.\n\n```js\n<button onClick={() => alert('button clicked!')}>Click me!</button>\n```\n\n<button onClick={() => alert('button clicked!')}>Click me!</button>\n\n:::"
        },
        {
          "id": "long-blog-post",
          "metadata": {
            "permalink": "/OpenLeakedDocs/blog/long-blog-post",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2019-05-29-long-blog-post.md",
            "source": "@site/blog/2019-05-29-long-blog-post.md",
            "title": "Long Blog Post",
            "description": "This is the summary of a very long blog post,",
            "date": "2019-05-29T00:00:00.000Z",
            "formattedDate": "May 29, 2019",
            "tags": [
              {
                "label": "hello",
                "permalink": "/OpenLeakedDocs/blog/tags/hello"
              },
              {
                "label": "docusaurus",
                "permalink": "/OpenLeakedDocs/blog/tags/docusaurus"
              }
            ],
            "readingTime": 2.05,
            "hasTruncateMarker": true,
            "authors": [
              {
                "name": "Endilie Yacop Sucipto",
                "title": "Maintainer of Docusaurus",
                "url": "https://github.com/endiliey",
                "imageURL": "https://github.com/endiliey.png",
                "key": "endi"
              }
            ],
            "frontMatter": {
              "slug": "long-blog-post",
              "title": "Long Blog Post",
              "authors": "endi",
              "tags": [
                "hello",
                "docusaurus"
              ]
            },
            "prevItem": {
              "title": "MDX Blog Post",
              "permalink": "/OpenLeakedDocs/blog/mdx-blog-post"
            },
            "nextItem": {
              "title": "First Blog Post",
              "permalink": "/OpenLeakedDocs/blog/first-blog-post"
            }
          },
          "content": "This is the summary of a very long blog post,\n\nUse a `<!--` `truncate` `-->` comment to limit blog post size in the list view.\n\n<!--truncate-->\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"
        },
        {
          "id": "first-blog-post",
          "metadata": {
            "permalink": "/OpenLeakedDocs/blog/first-blog-post",
            "editUrl": "https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2019-05-28-first-blog-post.md",
            "source": "@site/blog/2019-05-28-first-blog-post.md",
            "title": "First Blog Post",
            "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet",
            "date": "2019-05-28T00:00:00.000Z",
            "formattedDate": "May 28, 2019",
            "tags": [
              {
                "label": "hola",
                "permalink": "/OpenLeakedDocs/blog/tags/hola"
              },
              {
                "label": "docusaurus",
                "permalink": "/OpenLeakedDocs/blog/tags/docusaurus"
              }
            ],
            "readingTime": 0.12,
            "hasTruncateMarker": false,
            "authors": [
              {
                "name": "Gao Wei",
                "title": "Docusaurus Core Team",
                "url": "https://github.com/wgao19",
                "image_url": "https://github.com/wgao19.png",
                "imageURL": "https://github.com/wgao19.png"
              }
            ],
            "frontMatter": {
              "slug": "first-blog-post",
              "title": "First Blog Post",
              "authors": {
                "name": "Gao Wei",
                "title": "Docusaurus Core Team",
                "url": "https://github.com/wgao19",
                "image_url": "https://github.com/wgao19.png",
                "imageURL": "https://github.com/wgao19.png"
              },
              "tags": [
                "hola",
                "docusaurus"
              ]
            },
            "prevItem": {
              "title": "Long Blog Post",
              "permalink": "/OpenLeakedDocs/blog/long-blog-post"
            }
          },
          "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"
        }
      ],
      "blogListPaginated": [
        {
          "items": [
            "welcome",
            "mdx-blog-post",
            "long-blog-post",
            "first-blog-post"
          ],
          "metadata": {
            "permalink": "/OpenLeakedDocs/blog",
            "page": 1,
            "postsPerPage": 10,
            "totalPages": 1,
            "totalCount": 4,
            "blogDescription": "Blog",
            "blogTitle": "Blog"
          }
        }
      ],
      "blogTags": {
        "/OpenLeakedDocs/blog/tags/facebook": {
          "label": "facebook",
          "items": [
            "welcome"
          ],
          "permalink": "/OpenLeakedDocs/blog/tags/facebook",
          "pages": [
            {
              "items": [
                "welcome"
              ],
              "metadata": {
                "permalink": "/OpenLeakedDocs/blog/tags/facebook",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/OpenLeakedDocs/blog/tags/hello": {
          "label": "hello",
          "items": [
            "welcome",
            "long-blog-post"
          ],
          "permalink": "/OpenLeakedDocs/blog/tags/hello",
          "pages": [
            {
              "items": [
                "welcome",
                "long-blog-post"
              ],
              "metadata": {
                "permalink": "/OpenLeakedDocs/blog/tags/hello",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 2,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/OpenLeakedDocs/blog/tags/docusaurus": {
          "label": "docusaurus",
          "items": [
            "welcome",
            "mdx-blog-post",
            "long-blog-post",
            "first-blog-post"
          ],
          "permalink": "/OpenLeakedDocs/blog/tags/docusaurus",
          "pages": [
            {
              "items": [
                "welcome",
                "mdx-blog-post",
                "long-blog-post",
                "first-blog-post"
              ],
              "metadata": {
                "permalink": "/OpenLeakedDocs/blog/tags/docusaurus",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 4,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        },
        "/OpenLeakedDocs/blog/tags/hola": {
          "label": "hola",
          "items": [
            "first-blog-post"
          ],
          "permalink": "/OpenLeakedDocs/blog/tags/hola",
          "pages": [
            {
              "items": [
                "first-blog-post"
              ],
              "metadata": {
                "permalink": "/OpenLeakedDocs/blog/tags/hola",
                "page": 1,
                "postsPerPage": 10,
                "totalPages": 1,
                "totalCount": 1,
                "blogDescription": "Blog",
                "blogTitle": "Blog"
              }
            }
          ]
        }
      },
      "blogTagsListPath": "/OpenLeakedDocs/blog/tags"
    }
  },
  "docusaurus-plugin-content-pages": {
    "default": [
      {
        "type": "jsx",
        "permalink": "/OpenLeakedDocs/",
        "source": "@site/src/pages/index.js"
      },
      {
        "type": "mdx",
        "permalink": "/OpenLeakedDocs/markdown-page",
        "source": "@site/src/pages/markdown-page.md",
        "title": "Markdown page example",
        "description": "You don't need React to write simple standalone pages.",
        "frontMatter": {
          "title": "Markdown page example"
        }
      }
    ]
  },
  "docusaurus-plugin-debug": {},
  "docusaurus-theme-classic": {},
  "docusaurus-plugin-openapi-docs": {},
  "docusaurus-theme-openapi": {},
  "docusaurus-bootstrap-plugin": {},
  "docusaurus-mdx-fallback-plugin": {}
}