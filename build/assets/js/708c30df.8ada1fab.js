"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[396],{31671:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>w});var s=a(87462),o=(a(67294),a(3905)),r=a(26389),n=a(94891),i=(a(75190),a(47507),a(98685)),p=(a(63303),a(75035),a(85162));const l={id:"create-a-new-password",title:"Create a new password",description:"Allows the user to create a new password after verification if previous was forgotton. Is a part of the recovery process",sidebar_label:"Create a new password",hide_title:!0,hide_table_of_contents:!0,api:{tags:["authorisations"],description:"Allows the user to create a new password after verification if previous was forgotton. Is a part of the recovery process",requestBody:{content:{"application/json":{schema:{type:"object",properties:{email:{type:"string",description:"Email in string format",example:"example@example.com"},password:{minLength:8,pattern:"/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/",type:"string",description:"User password, MUST contain a mix of upper and lower case letters, as well as digits and special characters",example:"drowssaP123#"},cPassword:{minLength:8,pattern:"/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/",type:"string",description:"User password, MUST contain a mix of upper and lower case letters, as well as digits and special characters",example:"drowssaP123#"}},example:{email:"johndoe@example.com",password:"!password123!",cPassword:"!password123!"},title:"userNewPassword"}}},required:!0},responses:{200:{description:"OK"},400:{description:"Bad Request"}},method:"post",path:"/api/login/newPassword",servers:[{url:"https://virtserver.swaggerhub.com/Peetzie/OpenLeaked/1.0.0",description:"SwaggerHub API Auto Mocking"},{url:"openleaked.compute.dtu.dk",description:"Default server"},{url:"localhost",description:"Local running server"}],securitySchemes:{basicAuth:{type:"http",scheme:"basic"}},jsonRequestBodyExample:{email:"johndoe@example.com",password:"!password123!",cPassword:"!password123!"},info:{title:"Open Leaked YAML",description:"## Introduction\nThis API is documented in **OpenAPI** format. \n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\nThe application makes uses of build in authentication. Some of the client calls will be restricted. A local API key may be optained from the vendor\n",contact:{name:"Open Leaked",url:"https://github.com/Open-Leaked/Monorepo",email:"openleaked@gmail.com"},license:{name:"Apache 2.0",url:"http://www.apache.org/licenses/LICENSE-2.0.html"},version:"1.5.1","x-logo":{url:"https://redocly.github.io/redoc/petstore-logo.png",altText:"Petstore logo"}},postman:{name:"Create a new password",description:{content:"Allows the user to create a new password after verification if previous was forgotton. Is a part of the recovery process",type:"text/plain"},url:{path:["api","login","newPassword"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"docs/API/open-leaked-yaml",custom_edit_url:null},c=void 0,d={unversionedId:"API/create-a-new-password",id:"API/create-a-new-password",title:"Create a new password",description:"Allows the user to create a new password after verification if previous was forgotton. Is a part of the recovery process",source:"@site/docs/API/create-a-new-password.api.mdx",sourceDirName:"API",slug:"/API/create-a-new-password",permalink:"/OpenLeakedDocs/docs/API/create-a-new-password",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"create-a-new-password",title:"Create a new password",description:"Allows the user to create a new password after verification if previous was forgotton. Is a part of the recovery process",sidebar_label:"Create a new password",hide_title:!0,hide_table_of_contents:!0,api:{tags:["authorisations"],description:"Allows the user to create a new password after verification if previous was forgotton. Is a part of the recovery process",requestBody:{content:{"application/json":{schema:{type:"object",properties:{email:{type:"string",description:"Email in string format",example:"example@example.com"},password:{minLength:8,pattern:"/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/",type:"string",description:"User password, MUST contain a mix of upper and lower case letters, as well as digits and special characters",example:"drowssaP123#"},cPassword:{minLength:8,pattern:"/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/",type:"string",description:"User password, MUST contain a mix of upper and lower case letters, as well as digits and special characters",example:"drowssaP123#"}},example:{email:"johndoe@example.com",password:"!password123!",cPassword:"!password123!"},title:"userNewPassword"}}},required:!0},responses:{200:{description:"OK"},400:{description:"Bad Request"}},method:"post",path:"/api/login/newPassword",servers:[{url:"https://virtserver.swaggerhub.com/Peetzie/OpenLeaked/1.0.0",description:"SwaggerHub API Auto Mocking"},{url:"openleaked.compute.dtu.dk",description:"Default server"},{url:"localhost",description:"Local running server"}],securitySchemes:{basicAuth:{type:"http",scheme:"basic"}},jsonRequestBodyExample:{email:"johndoe@example.com",password:"!password123!",cPassword:"!password123!"},info:{title:"Open Leaked YAML",description:"## Introduction\nThis API is documented in **OpenAPI** format. \n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\nThe application makes uses of build in authentication. Some of the client calls will be restricted. A local API key may be optained from the vendor\n",contact:{name:"Open Leaked",url:"https://github.com/Open-Leaked/Monorepo",email:"openleaked@gmail.com"},license:{name:"Apache 2.0",url:"http://www.apache.org/licenses/LICENSE-2.0.html"},version:"1.5.1","x-logo":{url:"https://redocly.github.io/redoc/petstore-logo.png",altText:"Petstore logo"}},postman:{name:"Create a new password",description:{content:"Allows the user to create a new password after verification if previous was forgotton. Is a part of the recovery process",type:"text/plain"},url:{path:["api","login","newPassword"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"docs/API/open-leaked-yaml",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"Initiate recovery process",permalink:"/OpenLeakedDocs/docs/API/initiate-recovery-process"},next:{title:"Authorise an existing user",permalink:"/OpenLeakedDocs/docs/API/authorise-an-existing-user"}},m={},w=[{value:"Create a new password",id:"create-a-new-password",level:2}],u={toc:w};function h(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,s.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"create-a-new-password"},"Create a new password"),(0,o.kt)("p",null,"Allows the user to create a new password after verification if previous was forgotton. Is a part of the recovery process"),(0,o.kt)(n.Z,{mdxType:"MimeTabs"},(0,o.kt)(p.Z,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,o.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,o.kt)("summary",{style:{textAlign:"left"}},(0,o.kt)("strong",null,"Request Body"),(0,o.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,o.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,o.kt)("ul",{style:{marginLeft:"1rem"}},(0,o.kt)(i.Z,{collapsible:!1,name:"email",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Email in string format",example:"example@example.com"},mdxType:"SchemaItem"}),(0,o.kt)(i.Z,{collapsible:!1,name:"password",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** `>= 8 characters`, Value must match regular expression `/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/`",schema:{minLength:8,pattern:"/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/",type:"string",description:"User password, MUST contain a mix of upper and lower case letters, as well as digits and special characters",example:"drowssaP123#"},mdxType:"SchemaItem"}),(0,o.kt)(i.Z,{collapsible:!1,name:"cPassword",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** `>= 8 characters`, Value must match regular expression `/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/`",schema:{minLength:8,pattern:"/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/",type:"string",description:"User password, MUST contain a mix of upper and lower case letters, as well as digits and special characters",example:"drowssaP123#"},mdxType:"SchemaItem"}))))),(0,o.kt)("div",null,(0,o.kt)(r.Z,{mdxType:"ApiTabs"},(0,o.kt)(p.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,o.kt)("div",null,(0,o.kt)("p",null,"OK")),(0,o.kt)("div",null)),(0,o.kt)(p.Z,{label:"400",value:"400",mdxType:"TabItem"},(0,o.kt)("div",null,(0,o.kt)("p",null,"Bad Request")),(0,o.kt)("div",null)))))}h.isMDXComponent=!0}}]);