"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[874],{16957:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var i=a(87462),s=(a(67294),a(3905));const n={},r="Redis cache",o={unversionedId:"database-design/redis-cache",id:"database-design/redis-cache",title:"Redis cache",description:"A cache layer in the database is utilized to improve overall performance.",source:"@site/docs/database-design/redis-cache.md",sourceDirName:"database-design",slug:"/database-design/redis-cache",permalink:"/OpenLeakedDocs/docs/database-design/redis-cache",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/database-design/redis-cache.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Datagen",permalink:"/OpenLeakedDocs/docs/database-design/design"},next:{title:"Sources used in the project",permalink:"/OpenLeakedDocs/docs/srces/sources"}},l={},d=[{value:"Filters",id:"filters",level:3},{value:"XOR filter",id:"xor-filter",level:4},{value:"Commands available",id:"commands-available",level:4}],c={toc:d};function h(e){let{components:t,...a}=e;return(0,s.kt)("wrapper",(0,i.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"redis-cache"},"Redis cache"),(0,s.kt)("p",null,"A cache layer in the database is utilized to improve overall performance.\nIt acts as a layer between the application and database.\nThe data is a subset of data of the original set now contained in memory rather than on disk.\nAs memory is more effective a speedup is achieved.\nThe cache-layer stores querries that have been entered in a fixed time, if they should be querried again.\nThis is known as the ",(0,s.kt)("em",{parentName:"p"},"cost to live")," principal.\nIt has one disadvantage: Lets say a user querries an email ",(0,s.kt)("a",{parentName:"p",href:"mailto:_mike@example.com_"},"_mike@example.com_"),", the responose is not contained.\nNow the answer is stored in chace for that querry.\nWhat happens if the database is updated with a leak where that mail is contained? - It would provide a wrong answer.\nThis can be accomodated by implementing a drop of the cache everytime the database is updated. "),(0,s.kt)("h3",{id:"filters"},"Filters"),(0,s.kt)("p",null,"Further improving speed of the database; is the use of filters.\nThe traditional filter is a bloom filter.\nThis is a space-effecient data strcutres that tests whether an element is contained in a set.\nImportantly for this feature is the fact that false negatives are not possible. Meaning that it will return;\nnot in set | possibly in set.\nThis makes it fast for getting a response of not being breached. "),(0,s.kt)("h4",{id:"xor-filter"},"XOR filter"),(0,s.kt)("p",null,"An improvement over the Bloom filter is the XOR filter. It provdies us with the same probabilistic outcomes as the\nBloomfilter, however at an even faster rate and using less memory.\nXOR filters are not ready-made in Redis, but is implemented in a custom modules which is loaded with the following\nargument on runtime. Notice this has been implemented in the Dockerfile already. "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'-- Load-Module "/var/lib/redis/modules/redis_xorfilter_module.so"\n')),(0,s.kt)("p",null,"The module is written directly in C and compiled on docker compose. "),(0,s.kt)("h4",{id:"commands-available"},"Commands available"),(0,s.kt)("p",null,"The XOR filter supports the following querries and should be used in the following order to get started: "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"x.allocate int\n")),(0,s.kt)("p",null,"Takes an integer as input and allocates the size of filter based on int."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"x.populate int\n")),(0,s.kt)("p",null,"Populates the filter with integers from 0..int"),(0,s.kt)("p",null,"From here to querry whether a key is contained "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"x.contains int\n")),(0,s.kt)("p",null,"Response: true | false whether or not a given key is contained in the filer."))}h.isMDXComponent=!0}}]);